{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/components/auth/invalid-token/invalid-token.component.html","src/app/components/auth/login/login.component.html","src/app/components/auth/logout/logout.component.html","src/app/components/customers/customers/customers.component.html","src/app/components/customers/register-customer/register-customer.component.html","src/app/components/discounts/discounts-add/discounts-add.component.html","src/app/components/discounts/discounts-alter/discounts-alter.component.html","src/app/components/discounts/discounts/discounts.component.html","src/app/components/header/header.component.html","src/app/components/productTypes/product-types-add/product-types-add.component.html","src/app/components/productTypes/product-types-alter/product-types-alter.component.html","src/app/components/productTypes/product-types/product-types.component.html","src/app/components/products/product-alter/product-alter.component.html","src/app/components/products/products-add/products-add.component.html","src/app/components/products/products/products.component.html","src/app/components/shopping/cart/cart.component.html","src/app/components/shopping/orders/orders.component.html","src/app/components/side-nav/side-nav.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/components/auth/Services/AuthGuard/auth-guard-admin.service.ts","src/app/components/auth/Services/AuthGuard/auth-guard-user.service.ts","src/app/components/auth/Services/authentication.service.ts","src/app/components/auth/Services/basic-auth-interception.service.ts","src/app/components/auth/invalid-token/invalid-token.component.css","src/app/components/auth/invalid-token/invalid-token.component.ts","src/app/components/auth/login/login.component.css","src/app/components/auth/login/login.component.ts","src/app/components/auth/logout/logout.component.css","src/app/components/auth/logout/logout.component.ts","src/app/components/customers/Services/customer.service.ts","src/app/components/customers/customers/customers.component.css","src/app/components/customers/customers/customers.component.ts","src/app/components/customers/register-customer/register-customer.component.css","src/app/components/customers/register-customer/register-customer.component.ts","src/app/components/discounts/Services/discounts.service.ts","src/app/components/discounts/discounts-add/DiscountAddCompState.ts","src/app/components/discounts/discounts-add/discounts-add.component.css","src/app/components/discounts/discounts-add/discounts-add.component.ts","src/app/components/discounts/discounts-alter/discounts-alter.component.css","src/app/components/discounts/discounts-alter/discounts-alter.component.ts","src/app/components/discounts/discounts/discounts.component.css","src/app/components/discounts/discounts/discounts.component.ts","src/app/components/header/header.component.css","src/app/components/header/header.component.ts","src/app/components/productTypes/Services/product-types.service.ts","src/app/components/productTypes/product-types-add/product-types-add.component.css","src/app/components/productTypes/product-types-add/product-types-add.component.ts","src/app/components/productTypes/product-types-alter/product-types-alter.component.css","src/app/components/productTypes/product-types-alter/product-types-alter.component.ts","src/app/components/productTypes/product-types/product-types.component.css","src/app/components/productTypes/product-types/product-types.component.ts","src/app/components/products/Services/products.service.ts","src/app/components/products/product-alter/product-alter.component.css","src/app/components/products/product-alter/product-alter.component.ts","src/app/components/products/products-add/products-add.component.css","src/app/components/products/products-add/products-add.component.ts","src/app/components/products/products/products.component.css","src/app/components/products/products/products.component.ts","src/app/components/shopping/Services/orders.service.ts","src/app/components/shopping/Services/shopping-cart.service.ts","src/app/components/shopping/cart/CartCompState.ts","src/app/components/shopping/cart/cart.component.css","src/app/components/shopping/cart/cart.component.ts","src/app/components/shopping/orders/OrderCompState.ts","src/app/components/shopping/orders/orders.component.css","src/app/components/shopping/orders/orders.component.ts","src/app/components/side-nav/side-nav.component.css","src/app/components/side-nav/side-nav.component.ts","src/app/model/CustomersVM.ts","src/app/model/DiscountsVM.ts","src/app/model/OperState.ts","src/app/model/OrderAddrVM.ts","src/app/model/OrderInfo.ts","src/app/model/OrdersProductsVM.ts","src/app/model/ProductTypeVM.ts","src/app/model/ProductsVM.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAAA,wBAAA,CAAA,GAAA,EAAA;AACA;AACA;AACA,aAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,YAAA;AACA,YAAA,CAAA,GAAA,IAAA,KAAA,CAAA,yBAAA,GAAA,GAAA,GAAA,CAAA;AACA,QAAA,CAAA,CAAA,IAAA,GAAA,kBAAA;AACA,cAAA,CAAA;AACE,OAJF,CAAA;AAKA;;AACA,IAAA,wBAAA,CAAA,IAAA,GAAA,YAAA;AAA4C,aAAA,EAAA;AAAW,KAAvD;;AACA,IAAA,wBAAA,CAAA,OAAA,GAAA,wBAAA;AACA,IAAA,MAAA,CAAA,OAAA,GAAA,wBAAA;AACA,IAAA,wBAAA,CAAA,EAAA,GAAA,yCAAA;;;;;;;;;;;;;;;;ACZA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qUAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qEAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,+9BAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,wBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4lCAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,s/DAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,wrKAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,2qFAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6+QAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,gxIAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,i4BAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yuCAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,sPAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,s6FAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,0rEAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,urNAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4+IAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,ssHAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,uOAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,gBAAA,EAAA,YAAA;AAAA,aAAA,cAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,kBAAA,EAAA,YAAA;AAAA,aAAA,gBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,kBAAA,EAAA,YAAA;AAAA,aAAA,gBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,eAAA,EAAA,YAAA;AAAA,aAAA,aAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,sBAAA,EAAA,YAAA;AAAA,aAAA,oBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,iBAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;AAAA;;;;;;;;;;;;;;;AAcA;;;AAEA,QAAA,cAAA,GAAA,uBAAA,CAAA,EAAA,CAAA,EAAA;AACA,MAAA,cAAA,GAAA,MAAA,CAAA,cAAA,IACA;AAAU,QAAA,SAAA,EAAA;AAAV,mBAA0B,KAA1B,IAA0B,UAAA,CAAA,EAAA,CAAA,EAAA;AAAsC,QAAA,CAAA,CAAA,SAAA,GAAA,CAAA;AAAmB,OADnF,IAEA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAyB,aAAA,IAAA,CAAA,IAAA,CAAA;AAAA,cAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AAAuD,OAFhF;;AAGA,aAAA,cAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,KALA;;AAOO,aAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,MAAA,cAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AACA,eAAA,EAAA,GAAA;AAAmB,aAAA,WAAA,GAAA,CAAA;AAAsB;;AACzC,MAAA,CAAA,CAAA,SAAA,GAAA,CAAA,KAAA,IAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,SAAA,GAAA,CAAA,CAAA,SAAA,EAAA,IAAA,EAAA,EAAA,CAAA;AACA;;AAEO,QAAA,OAAA,GAAA,oBAAA;AACP,MAAA,OAAA,GAAA,MAAA,CAAA,MAAA,IAAA,SAAA,QAAA,CAAA,CAAA,EAAA;AACA,aAAA,IAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAgD,CAAA,GAAA,CAAhD,EAAuD,CAAA,EAAvD,EAAuD;AACvD,UAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,eAAA,IAAA,CAAA,IAAA,CAAA;AAAA,gBAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AACA;;AACA,eAAA,CAAA;AACA,OANA;;AAOA,aAAA,OAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AACA,KATO;;AAWA,aAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,IAAA,CAAA;AAAA,YAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,EACA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AADA;;AAEA,UAAA,CAAA,IAAA,IAAA,IAAA,OAAA,MAAA,CAAA,qBAAA,KAAA,UAAA,EACA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,qBAAA,CAAA,CAAA,CAAA,EAA4D,CAAA,GAAA,CAAA,CAAA,MAA5D,EAA0E,CAAA,EAA1E,EAA0E;AAC1E,YAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,aAAA,CAAA;AACA;;AAEO,aAAA,UAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA;AACP,UAAA,CAAA,GAAA,SAAA,CAAA,MAAA;AAAA,UAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,GAAA,MAAA,CAAA,wBAAA,CAAA,MAAA,EAAA,GAAA,CAAA,GAAA,IAAA;AAAA,UAAA,CAAA;AACA,UAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,KACA,KAAA,IAAA,CAAA,GAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EAA4C,CAAA,IAAA,CAA5C,EAAoD,CAAA,EAApD;AAAoD,YAAA,CAAA,GAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,KAAA,CAAA;AAApD;AACA,aAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,CAAA,EAAA,CAAA;AACA;;AAEO,aAAA,OAAA,CAAA,UAAA,EAAA,SAAA,EAAA;AACP,aAAA,UAAA,MAAA,EAAA,GAAA,EAAA;AAAmC,QAAA,SAAA,CAAA,MAAA,EAAA,GAAA,EAAA,UAAA,CAAA;AAAoC,OAAvE;AACA;;AAEO,aAAA,UAAA,CAAA,WAAA,EAAA,aAAA,EAAA;AACP,UAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA,OAAA,OAAA,CAAA,QAAA,CAAA,WAAA,EAAA,aAAA,CAAA;AACA;;AAEO,aAAA,SAAA,CAAA,OAAA,EAAA,UAAA,EAAA,CAAA,EAAA,SAAA,EAAA;AACP,aAAA,KAAA,CAAA,KAAA,CAAA,GAAA,OAAA,CAAA,EAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,iBAAA,SAAA,CAAA,KAAA,EAAA;AAAmC,cAAA;AAAM,YAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;AAA+B,WAArC,CAAqC,OAAA,CAAA,EAAA;AAAY,YAAA,MAAA,CAAA,CAAA,CAAA;AAAa;AAAA;;AACjG,iBAAA,QAAA,CAAA,KAAA,EAAA;AAAkC,cAAA;AAAM,YAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AAAmC,WAAzC,CAAyC,OAAA,CAAA,EAAA;AAAY,YAAA,MAAA,CAAA,CAAA,CAAA;AAAa;AAAA;;AACpG,iBAAA,IAAA,CAAA,MAAA,EAAA;AAA+B,UAAA,MAAA,CAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,IAAA,CAAA,CAAA,UAAA,OAAA,EAAA;AAAiE,YAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAAyB,WAA1F,EAA0F,IAA1F,CAA0F,SAA1F,EAA0F,QAA1F,CAAA;AAAsH;;AACrJ,QAAA,IAAA,CAAA,CAAA,SAAA,GAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EAAA,UAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AACK,OALL,CAAA;AAMA;;AAEO,aAAA,WAAA,CAAA,OAAA,EAAA,IAAA,EAAA;AACP,UAAA,CAAA,GAAA;AAAa,QAAA,KAAA,EAAA,CAAb;AAAa,QAAA,IAAA,EAAA,gBAAA;AAA6B,cAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAA0B,iBAAA,CAAA,CAAA,CAAA,CAAA;AAAe,SAAnF;AAAmF,QAAA,IAAA,EAAA,EAAnF;AAAmF,QAAA,GAAA,EAAA;AAAnF,OAAA;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AACA,aAAA,CAAA,GAAA;AAAgB,QAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAhB;AAAgB,iBAAA,IAAA,CAAA,CAAA,CAAhB;AAAgB,kBAAA,IAAA,CAAA,CAAA;AAAhB,OAAA,EAAqE,OAAA,MAAA,KAAA,UAAA,KAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,YAAA;AAAoE,eAAA,IAAA;AAAe,OAAnF,CAArE,EAAwJ,CAAxJ;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,eAAA,UAAA,CAAA,EAAA;AAAsB,iBAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAAqB,SAA3C;AAA8C;;AACpE,eAAA,IAAA,CAAA,EAAA,EAAA;AACA,YAAA,CAAA,EAAA,MAAA,IAAA,SAAA,CAAA,iCAAA,CAAA;;AACA,eAAA,CAAA;AAAA,cAAA;AACA,gBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAAA;;AACA,oBAAA,EAAA,CAAA,CAAA,CAAA;AACA,mBAAA,CAAA;AAAA,mBAAA,CAAA;AAAA,gBAAA,CAAA,GAAA,EAAA;AAAuC;;AACvC,mBAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAkC,uBAAA;AAAS,kBAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAT;AAAS,kBAAA,IAAA,EAAA;AAAT,iBAAA;;AAClC,mBAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAkC,gBAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAW,gBAAA,EAAA,GAAA,CAAA,CAAA,CAAA;AAAU;;AACvD,mBAAA,CAAA;AAAA,gBAAA,EAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,EAAA;;AAAyC,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AAAc;;AACvD;AACA,oBAAA,EAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA,GAAA,CAAA,CAAA,MAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,GAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AAA6G,kBAAA,CAAA,GAAA,CAAA;AAAO;AAAU;;AAC9H,oBAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAAgF,kBAAA,CAAA,CAAA,KAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAiB;AAAO;;AACxG,oBAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAAwD,kBAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAgB,kBAAA,CAAA,GAAA,EAAA;AAAQ;AAAO;;AACvF,oBAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAA8C,kBAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;;AAAgB,kBAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA;;AAAgB;AAAO;;AACrF,oBAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,GAAA;;AACA,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AAAiC;AAXjC;;AAaA,YAAA,EAAA,GAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,CAAA;AACS,WAjBT,CAiBS,OAAA,CAAA,EAAA;AAAY,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAa,YAAA,CAAA,GAAA,CAAA;AAAS,WAjB3C,SAiB2C;AAAU,YAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAW;AAjBhE;;AAkBA,YAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAAmC,eAAA;AAAS,UAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAT;AAAS,UAAA,IAAA,EAAA;AAAT,SAAA;AACnC;AACA;;AAEO,aAAA,YAAA,CAAA,CAAA,EAAA,OAAA,EAAA;AACP,WAAA,IAAA,CAAA,IAAA,CAAA;AAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AACA;;AAEO,aAAA,QAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,OAAA,MAAA,KAAA,UAAA,IAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,CAAA,GAAA,CAAA;AACA,UAAA,CAAA,EAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,gBAAA;AACA,cAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA,KAAA,CAAA;AACA,iBAAA;AAAoB,YAAA,KAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAApB;AAAoB,YAAA,IAAA,EAAA,CAAA;AAApB,WAAA;AACA;AAJA,OAAA;AAMA;;AAEO,aAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,OAAA,MAAA,KAAA,UAAA,IAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,CAAA,CAAA,EAAA,OAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,EAAA,GAAA,EAAA;AAAA,UAAA,CAAA;;AACA,UAAA;AACA,eAAA,CAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,EAAA,IAAA;AAAA,UAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA;AAAA;AACA,OAFA,CAGA,OAAA,KAAA,EAAA;AAAmB,QAAA,CAAA,GAAA;AAAM,UAAA,KAAA,EAAA;AAAN,SAAA;AAAsB,OAHzC,SAIA;AACA,YAAA;AACA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,SAFA,SAGA;AAAiB,cAAA,CAAA,EAAA,MAAA,CAAA,CAAA,KAAA;AAAsB;AACvC;;AACA,aAAA,EAAA;AACA;;AAEO,aAAA,QAAA,GAAA;AACP,WAAA,IAAA,EAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,EAA4B,CAAA,GAAA,SAAA,CAAA,MAA5B,EAAkD,CAAA,EAAlD;AACA,QAAA,EAAA,GAAA,EAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AADA;;AAEA,aAAA,EAAA;AACA;;AAEO,aAAA,cAAA,GAAA;AACP,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAAA,EAAiD,CAAA,GAAA,EAAjD,EAAyD,CAAA,EAAzD;AAAyD,QAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AAAzD;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAwC,CAAA,GAAA,EAAxC,EAAgD,CAAA,EAAhD;AACA,aAAA,IAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA,MAAA,EAAwD,CAAA,GAAA,EAAxD,EAAgE,CAAA,IAAA,CAAA,EAAhE;AACA,UAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AADA;AADA;;AAGA,aAAA,CAAA;AACA;;AAAA;;AAEO,aAAA,OAAA,CAAA,CAAA,EAAA;AACP,aAAA,gBAAA,OAAA,IAAA,KAAA,CAAA,GAAA,CAAA,EAAA,IAAA,IAAA,IAAA,OAAA,CAAA,CAAA,CAAA;AACA;;AAEO,aAAA,gBAAA,CAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA;AACP,UAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,IAAA,SAAA,CAAA,sCAAA,CAAA;AACA,UAAA,CAAA,GAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EAAA,UAAA,IAAA,EAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,CAAA,GAAA,EAAA;AACA,aAAA,CAAA,GAAA,EAAA,EAAiB,IAAA,CAAA,MAAA,CAAjB,EAAiB,IAAA,CAAA,OAAA,CAAjB,EAAiB,IAAA,CAAA,QAAA,CAAjB,EAAiB,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA,GAAA,YAAA;AAAsF,eAAA,IAAA;AAAe,OAAtH,EAAsH,CAAtH;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAAgC,iBAAA,IAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAqC,YAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAA4C,WAAjF,CAAA;AAAmF,SAAnH;AAAsH;;AAC5I,eAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAA2B,YAAA;AAAM,UAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAiB,SAAvB,CAAuB,OAAA,CAAA,EAAA;AAAY,UAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAsB;AAAA;;AACpF,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,QAAA,CAAA,CAAA,KAAA,YAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,OAAA,EAAA,MAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAoG;;AAC1H,eAAA,OAAA,CAAA,KAAA,EAAA;AAA6B,QAAA,MAAA,CAAA,MAAA,EAAA,KAAA,CAAA;AAAuB;;AACpD,eAAA,MAAA,CAAA,KAAA,EAAA;AAA4B,QAAA,MAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AAAwB;;AACpD,eAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAA2B,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA,MAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAyD;AACpF;;AAEO,aAAA,gBAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,EAAA,CAAA;AACA,aAAA,CAAA,GAAA,EAAA,EAAiB,IAAA,CAAA,MAAA,CAAjB,EAAiB,IAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAA4C,cAAA,CAAA;AAAW,OAAvD,CAAjB,EAAwE,IAAA,CAAA,QAAA,CAAxE,EAAwE,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,YAAA;AAAqD,eAAA,IAAA;AAAe,OAA5I,EAA4I,CAA5I;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAyB,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAA6B,iBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA;AAAoB,YAAA,KAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAApB;AAAoB,YAAA,IAAA,EAAA,CAAA,KAAA;AAApB,WAAA,GAAoE,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAApE;AAAsF,SAAnH,GAAmH,CAAnH;AAAwH;AACjJ;;AAEO,aAAA,aAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,IAAA,SAAA,CAAA,sCAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA;AAAA,UAAA,CAAA;AACA,aAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,OAAA,QAAA,KAAA,UAAA,GAAA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAA2G,IAAA,CAAA,MAAA,CAA3G,EAA2G,IAAA,CAAA,OAAA,CAA3G,EAA2G,IAAA,CAAA,QAAA,CAA3G,EAA2G,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA,GAAA,YAAA;AAAsF,eAAA,IAAA;AAAe,OAAhN,EAAgN,CAAhN,CAAA;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,UAAA,CAAA,EAAA;AAA8B,iBAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AAAgD,YAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,KAAA,CAAA;AAAyD,WAAzG,CAAA;AAA2G,SAAzI;AAA4I;;AAClK,eAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AAA4C,QAAA,OAAA,CAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AAAsC,UAAA,OAAA,CAAA;AAAU,YAAA,KAAA,EAAA,CAAV;AAAU,YAAA,IAAA,EAAA;AAAV,WAAA,CAAA;AAAkC,SAAxE,EAAwE,MAAxE;AAAkF;AAC9H;;AAEO,aAAA,oBAAA,CAAA,MAAA,EAAA,GAAA,EAAA;AACP,UAAA,MAAA,CAAA,cAAA,EAAA;AAAgC,QAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,KAAA,EAAA;AAAuC,UAAA,KAAA,EAAA;AAAvC,SAAA;AAAwD,OAAxF,MAAwF;AAAO,QAAA,MAAA,CAAA,GAAA,GAAA,GAAA;AAAkB;;AACjH,aAAA,MAAA;AACA;;AAAA;;AAEO,aAAA,YAAA,CAAA,GAAA,EAAA;AACP,UAAA,GAAA,IAAA,GAAA,CAAA,UAAA,EAAA,OAAA,GAAA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,GAAA,IAAA,IAAA,EAAA,KAAA,IAAA,CAAA,IAAA,GAAA;AAAA,YAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AAAA;AACA,MAAA,MAAA,CAAA,OAAA,GAAA,GAAA;AACA,aAAA,MAAA;AACA;;AAEO,aAAA,eAAA,CAAA,GAAA,EAAA;AACP,aAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,GAAA;AAA4C,QAAA,OAAA,EAAA;AAA5C,OAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/KA,QAAM,MAAM,GAAW,CACrB;AAAC,MAAA,IAAI,EAAE,EAAP;AAAW,MAAA,SAAS,EAAE,MAAtB;AAA8B,MAAA,UAAU,EAAE;AAA1C,KADqB,EAErB;AAAC,MAAA,IAAI,EAAE,cAAP;AAAuB,MAAA,SAAS,EAAE,qFAAA,CAAA,sBAAA,CAAlC;AAAwD,MAAA,WAAW,EAAE,CAAC,yFAAA,CAAA,uBAAA,CAAD;AAArE,KAFqB,EAGrB;AAAC,MAAA,IAAI,EAAE,qBAAP;AAA8B,MAAA,SAAS,EAAE,6EAAA,CAAA,mBAAA;AAAzC,KAHqB,EAIrB;AAAC,MAAA,IAAI,EAAE,oBAAP;AAA6B,MAAA,SAAS,EAAE,wFAAA,CAAA,uBAAA,CAAxC;AAA+D,MAAA,WAAW,EAAE,CAAC,yFAAA,CAAA,uBAAA,CAAD;AAA5E,KAJqB,EAKrB;AAAC,MAAA,IAAI,EAAE,WAAP;AAAoB,MAAA,SAAS,EAAE,gFAAA,CAAA,oBAAA,CAA/B;AAAmD,MAAA,WAAW,EAAE,CAAC,yFAAA,CAAA,uBAAA,CAAD;AAAhE,KALqB,EAMrB;AAAC,MAAA,IAAI,EAAE,oBAAP;AAA6B,MAAA,SAAS,EAAE,gGAAA,CAAA,2BAAA;AAAxC,KANqB,EAOrB;AAAC,MAAA,IAAI,EAAE,QAAP;AAAiB,MAAA,SAAS,EAAE,qEAAA,CAAA,iBAAA,CAA5B;AAA6C,MAAA,WAAW,EAAE,CAAC,wFAAA,CAAA,sBAAA,CAAD;AAA1D,KAPqB,EAQrB;AAAC,MAAA,IAAI,EAAE,MAAP;AAAe,MAAA,SAAS,EAAE,sEAAA,CAAA,eAAA,CAA1B;AAAyC,MAAA,WAAW,EAAE,CAAC,wFAAA,CAAA,sBAAA,CAAD;AAAtD,KARqB,EASrB;AAAC,MAAA,IAAI,EAAE,QAAP;AAAiB,MAAA,SAAS,EAAE,0EAAA,CAAA,iBAAA,CAA5B;AAA6C,MAAA,WAAW,EAAE,CAAC,wFAAA,CAAA,sBAAA,CAAD;AAA1D,KATqB,EAUrB;AAAC,MAAA,IAAI,EAAE,cAAP;AAAuB,MAAA,SAAS,EAAE,oFAAA,CAAA,uBAAA;AAAlC,KAVqB,EAWrB;AAAC,MAAA,IAAI,EAAE,WAAP;AAAoB,MAAA,SAAS,EAAE,iFAAA,CAAA,oBAAA,CAA/B;AAAmD,MAAA,WAAW,EAAE,CAAC,yFAAA,CAAA,uBAAA,CAAD;AAAhE,KAXqB,EAYrB;AAAC,MAAA,IAAI,EAAE,eAAP;AAAwB,MAAA,SAAS,EAAE,yFAAA,CAAA,uBAAA,CAAnC;AAA0D,MAAA,WAAW,EAAE,CAAC,yFAAA,CAAA,uBAAA,CAAD;AAAvE,KAZqB,EAarB;AAAC,MAAA,IAAI,EAAE,kBAAP;AAA2B,MAAA,SAAS,EAAE,wGAAA,CAAA,4BAAA,CAAtC;AAAkE,MAAA,WAAW,EAAE,CAAC,yFAAA,CAAA,uBAAA,CAAD;AAA/E,KAbqB,EAcrB;AAAC,MAAA,IAAI,EAAE,gBAAP;AAAyB,MAAA,SAAS,EAAE,oGAAA,CAAA,0BAAA,CAApC;AAA8D,MAAA,WAAW,EAAE,CAAC,yFAAA,CAAA,uBAAA,CAAD;AAA3E,KAdqB,EAerB;AAAC,MAAA,IAAI,EAAE,YAAP;AAAqB,MAAA,SAAS,EAAE,4FAAA,CAAA,uBAAA,CAAhC;AAAuD,MAAA,WAAW,EAAE,CAAC,yFAAA,CAAA,uBAAA,CAAD;AAApE,KAfqB,CAAvB;;AAsBA,QAAa,gBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ5B,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,OAAb,CAAqB,MAArB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAI4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;AC1Cb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,YAAb,GALA,wBAAA;AAAA;;AAME,WAAA,KAAA,GAAQ,mBAAR;AACD,KAFD;;AAAa,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALxB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0EAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKwB,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqDb,QAAa,SAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,SAAS,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAlCrB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CACZ,2CAAA,CAAA,cAAA,CADY,EAEZ,gFAAA,CAAA,oBAAA,CAFY,EAGZ,gEAAA,CAAA,iBAAA,CAHY,EAIZ,mFAAA,CAAA,uBAAA,CAJY,EAKZ,mEAAA,CAAA,gBAAA,CALY,EAMZ,sEAAA,CAAA,iBAAA,CANY,EAOZ,iGAAA,CAAA,2BAAA,CAPY,EAQZ,sFAAA,CAAA,sBAAA,CARY,EASZ,8EAAA,CAAA,mBAAA,CATY,EAUZ,wFAAA,CAAA,uBAAA,CAVY,EAWZ,sEAAA,CAAA,eAAA,CAXY,EAYZ,0EAAA,CAAA,iBAAA,CAZY,EAaZ,iFAAA,CAAA,oBAAA,CAbY,EAcZ,yFAAA,CAAA,uBAAA,CAdY,EAeZ,6FAAA,CAAA,yBAAA,CAfY,EAgBZ,qEAAA,CAAA,kBAAA,CAhBY,EAiBZ,wGAAA,CAAA,4BAAA,CAjBY,EAkBZ,oGAAA,CAAA,0BAAA,CAlBY,EAmBZ,4FAAA,CAAA,uBAAA,CAnBY,CADN;AAsBR,MAAA,OAAO,EAAE,CACP,sDAAA,CAAA,eAAA,CADO,EAEP,2CAAA,CAAA,aAAA,CAFO,EAGP,iDAAA,CAAA,kBAAA,CAHO,EAIP,iDAAA,CAAA,kBAAA,CAJO,CAtBD;AA4BR,MAAA,SAAS,EAAE,CACT;AAAC,QAAA,OAAO,EAAE,iDAAA,CAAA,mBAAA,CAAV;AAA6B,QAAA,QAAQ,EAAE,uFAAA,CAAA,8BAAA,CAAvC;AAAqE,QAAA,KAAK,EAAE;AAA5E,OADS,CA5BH;AA+BR,MAAA,SAAS,EAAE,CAAC,2CAAA,CAAA,cAAA,CAAD;AA/BH,KAAT,CAkCqB,CAAA,EAAT,SAAS,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDb,QAAa,qBAAb;AAAA;AAAA;AAEE,qCAAoB,MAApB,EACoB,WADpB,EACsD;AAAA;;AADlC,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACnB;;AAJH;AAAA;AAAA,oCAMc,KANd,EAM6C,KAN7C,EAMuE;AACnE,cAAM,OAAO,GAAG,KAAK,WAAL,CAAiB,WAAjB,EAAhB;;AACA,cAAI,OAAJ,EAAa;AACX,mBAAO,IAAP;AACD;;AACD,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACA,iBAAO,KAAP;AACD;AAbH;;AAAA;AAAA,OAAA;;;;cAE8B,4CAAA,CAAA,QAAA;;cACK,oDAAA,CAAA,uBAAA;;;;AAHtB,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHjC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAa,oBAAb;AAAA;AAAA;AAEE,oCAAoB,MAApB,EACoB,WADpB,EACsD;AAAA;;AADlC,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,WAAA,GAAA,WAAA;AACnB;;AAJH;AAAA;AAAA,oCAMc,KANd,EAM6C,KAN7C,EAMuE;AACnE,cAAI,KAAK,WAAL,CAAiB,cAAjB,EAAJ,EAAuC;AACrC,mBAAO,IAAP;AACD;;AACD,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACA,iBAAO,KAAP;AACD;AAZH;;AAAA;AAAA,OAAA;;;;cAE8B,4CAAA,CAAA,QAAA;;cACK,oDAAA,CAAA,uBAAA;;;;AAHtB,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHhC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGb,QAAa,qBAAb;AAAA;AAAA;AAEE,qCAAoB,MAApB,EACoB,UADpB,EAC0C;AAAA;;AADtB,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,UAAA,GAAA,UAAA;AAEnB;;AALH;AAAA;AAAA,qCAOe,QAPf,EAOyB,QAPzB,EAOiC;AAC7B,iBAAO,KAAK,UAAL,CAAgB,IAAhB,CAA0B,iCAA1B,EAA6D;AAAC,YAAA,QAAQ,EAAR,QAAD;AAAW,YAAA,QAAQ,EAAR;AAAX,WAA7D,EAAmF,IAAnF,CACL,MAAA,CAAA,2CAAA,CAAA,KAAA,CAAA,CAAA,CACE,UAAA,QAAQ,EAAG;AACT,gBAAM,QAAQ,GAAG,YAAY,QAAQ,CAAC,KAAtC;AACA,gBAAM,OAAO,GAAG,QAAQ,CAAC,KAAzB;AAEA,YAAA,cAAc,CAAC,OAAf,CAAuB,UAAvB,EAAmC,QAAnC;AACA,YAAA,cAAc,CAAC,OAAf,CAAuB,OAAvB,EAAgC,QAAhC;AACA,YAAA,cAAc,CAAC,OAAf,CAAuB,SAAvB,EAAkC,OAAlC;AACA,mBAAO,QAAP;AACD,WATH,CADK,CAAP;AAaD;AArBH;AAAA;AAAA,0CAuBiB;AACb,cAAI,KAAK,WAAL,EAAJ,EAAwB;AACtB,gBAAI,YAAY,GAAG,cAAc,CAAC,OAAf,CAAuB,aAAvB,CAAnB;;AACA,gBAAI,YAAY,IAAI,IAAhB,IAAwB,YAAY,KAAK,OAA7C,EAAsD;AACpD,cAAA,YAAY,GAAG,MAAf;AACD,aAFD,MAEO;AACL,cAAA,YAAY,GAAG,OAAf;AACD;;AACD,iBAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACA,YAAA,cAAc,CAAC,OAAf,CAAuB,aAAvB,EAAsC,YAAtC;AACD;AACF;AAlCH;AAAA;AAAA,yCAoCgB;AACZ,cAAM,IAAI,GAAG,cAAc,CAAC,OAAf,CAAuB,UAAvB,CAAb;AACA,iBAAO,EAAE,IAAI,KAAK,IAAX,CAAP;AACD;AAvCH;AAAA;AAAA,sCAyCa;AACT,cAAM,QAAQ,GAAG,cAAc,CAAC,OAAf,CAAuB,SAAvB,CAAjB;AACA,iBAAO,KAAK,cAAL,MAA0B,QAAQ,KAAK,MAA9C;AACD;AA5CH;AAAA;AAAA,sCA8Ca;AACT,cAAM,YAAY,GAAG,cAAc,CAAC,OAAf,CAAuB,aAAvB,CAArB;AACA,iBAAO,KAAK,WAAL,MAAuB,YAAY,KAAK,MAA/C;AACD;AAjDH;AAAA;AAAA,iCAmDQ;AACJ,UAAA,cAAc,CAAC,UAAf,CAA0B,MAA1B;AACA,UAAA,cAAc,CAAC,UAAf,CAA0B,QAA1B;AACA,UAAA,cAAc,CAAC,UAAf,CAA0B,UAA1B;AACA,UAAA,cAAc,CAAC,KAAf;AACD;AAxDH;AAAA;AAAA,wCA0DuB;AACnB,cAAI,KAAK,cAAL,EAAJ,EAA2B;AACzB,gBAAM,GAAG,GAAG,wCAAZ;AACA,gBAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,OAArB,EAA8B,cAAc,CAAC,OAAf,CAAuB,OAAvB,CAA9B,CAAd;AAEA,mBAAO,KAAK,UAAL,CAAgB,GAAhB,CAA6B,GAA7B,EAAkC;AAAC,cAAA,MAAM,EAAE;AAAT,aAAlC,CAAP;AACD;AACF;AAjEH;AAAA;AAAA,qCAmEmB;AAAA;;AACf,eAAK,aAAL,GAAqB,SAArB,CACE,UAAA,GAAG,EAAG;AACJ,gBAAI,CAAC,GAAL,EAAU;AACR,cAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD;AACF,WALH;AAOD;AA3EH;AAAA;AAAA,sCA6Ea;AACT,iBAAO,cAAc,CAAC,OAAf,CAAuB,UAAvB,CAAP;AACD;AA/EH;;AAAA;AAAA,OAAA;;;;cAE8B,4CAAA,CAAA,QAAA;;cACI,iDAAA,CAAA,YAAA;;;;AAHrB,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHjC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJb,QAAa,4BAAb;AAAA;AAAA;AAEE,8CAAA;AAAA;AACC;;AAHH;AAAA;AAAA,kCAKY,GALZ,EAKmC,IALnC,EAKoD;AAChD,cAAI,cAAc,CAAC,OAAf,CAAuB,UAAvB,KAAsC,cAAc,CAAC,OAAf,CAAuB,OAAvB,CAA1C,EAA2E;AACzE,YAAA,GAAG,GAAG,GAAG,CAAC,KAAJ,CAAU;AACd,cAAA,UAAU,EAAE;AACV,gBAAA,aAAa,EAAE,cAAc,CAAC,OAAf,CAAuB,OAAvB;AADL;AADE,aAAV,CAAN;AAKD;;AACD,iBAAO,IAAI,CAAC,MAAL,CAAY,GAAZ,CAAP;AACD;AAdH;;AAAA;AAAA,OAAA;;AAAa,IAAA,4BAA4B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHxC,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGwC,CAAA,EAA5B,4BAA4B,CAA5B;;;;;;;;;;;;;;;;ACNb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQf,QAAa,qBAAb;AAAA;AAAA;AAEE,qCAAoB,MAApB,EAAkC;AAAA;;AAAd,aAAA,MAAA,GAAA,MAAA;AACnB;;AAHH;AAAA;AAAA,mCAKU;AACN,UAAA,UAAU,CAAC,UAAC,MAAD,EAAmB;AAC5B,YAAA,MAAM,CAAC,QAAP,CAAgB,CAAC,SAAD,CAAhB;AACD,WAFS,EAEP,IAAI,IAFG,EAEG,KAAK,MAFR,CAAV;AAGD;AATH;;AAAA;AAAA,OAAA;;;;cAE8B,4CAAA,CAAA,QAAA;;;;AAFjB,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,cAAb;AAAA;AAAA;AAOE,8BAAoB,MAApB,EACoB,YADpB,EAEoB,mBAFpB,EAE4D;AAAA;;AAFxC,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,YAAA,GAAA,YAAA;AACA,aAAA,mBAAA,GAAA,mBAAA;AANpB,aAAA,YAAA,GAAe,KAAf;AACA,aAAA,YAAA,GAAe,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAf;AACU,aAAA,aAAA,GAAgB,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAhB;AAKT;;AAVH;AAAA;AAAA,mCAYU,CACP;AAbH;AAAA;AAAA,8CAeqB;AACjB,eAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB;AACD;AAjBH;AAAA;AAAA,qCAmBY;AAAA;;AACR,cAAI,KAAK,QAAL,IAAiB,IAAjB,IAAyB,KAAK,QAAL,IAAiB,IAA9C,EAAoD;AAClD,iBAAK,YAAL,CAAkB,QAAlB,CAA2B,6BAA3B;AACD,WAFD,MAEO;AACL,iBAAK,YAAL,CAAkB,UAAlB;AACC,iBAAK,YAAL,CAAkB,YAAlB,CAA+B,KAAK,QAApC,EAA8C,KAAK,QAAnD,EAA6D,SAA7D,CACG,UAAA,IAAI,EAAG;AACL,cAAA,MAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,EAAD,CAArB;;AACA,cAAA,MAAI,CAAC,YAAL,GAAoB,KAApB;;AACA,cAAA,MAAI,CAAC,YAAL,CAAkB,UAAlB;;AACA,cAAA,MAAI,CAAC,mBAAL,CAAyB,gBAAzB;;AACA,cAAA,MAAI,CAAC,mBAAL;;AACA,cAAA,MAAI,CAAC,QAAL,GAAgB,EAAhB;AACA,cAAA,MAAI,CAAC,QAAL,GAAgB,EAAhB;;AACA,cAAA,MAAI,CAAC,YAAL;AACD,aAVJ,EAWG,UAAA,KAAK,EAAG;AACN,cAAA,MAAI,CAAC,YAAL,GAAoB,IAApB;;AACA,cAAA,MAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,mCAA3B;AACD,aAdJ,CAAD;AAiBD;AACF;AA1CH;AAAA;AAAA,uCA4Cc;AACV,UAAA,UAAU,CAAC,UAAC,KAAD,EAAqB;AAC9B,YAAA,KAAK,CAAC,OAAN;AACD,WAFS,EAEP,IAFO,EAED,KAAK,YAFJ,CAAV;AAGD;AAhDH;;AAAA;AAAA,OAAA;;;;cAO8B,4CAAA,CAAA,QAAA;;cACM,6DAAA,CAAA,uBAAA;;cACO,qEAAA,CAAA,qBAAA;;;;AAJ/B,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,wBAAA,E,eAAA,E,KAA4C,CAA5C;AALC,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;ACXb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSf,QAAa,eAAb;AAAA;AAAA;AAEE,+BACU,YADV,EAEU,MAFV,EAEwB;AAAA;;AADd,aAAA,YAAA,GAAA,YAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACL;;AALP;AAAA;AAAA,mCAOU;AACN,eAAK,YAAL,CAAkB,MAAlB;AACA,UAAA,cAAc,CAAC,KAAf;AACA,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,EAAD,CAArB;AACD;AAXH;;AAAA;AAAA,OAAA;;;;cAG0B,6DAAA,CAAA,uBAAA;;cACN,4CAAA,CAAA,QAAA;;;;AAJP,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAa,eAAb;AAAA;AAAA;AAGE,+BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAFZ,aAAA,QAAA,GAAW,qCAAX;AAGP;;AAJH;AAAA;AAAA,4BAMa,EANb,EAMuB;AACnB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,MAAd,CAAZ;AACA,cAAM,UAAU,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,IAArB,EAA2B,EAA3B,CAAnB;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA2B,GAA3B,EAAgC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAhC,CAAP;AACD;AAVH;AAAA;AAAA,iCAYkB,IAZlB,EAYqC,OAZrC,EAYoD;AAChD,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,SAAd,CAAZ;AACA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,SAArB,EAAgC,OAAhC,CAAd;AACA,cAAM,IAAI,GAAG,IAAb;AACA,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAuB,GAAvB,EAA4B,IAA5B,EAAkC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAlC,CAAP;AACD;AAjBH;AAAA;AAAA,+BAmBa;AACT,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,OAAd,CAAZ;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA6B,GAA7B,CAAP;AACD;AAtBH;AAAA;AAAA,iCAwBmB,WAxBnB,EAwBsC;AAClC,iBAAO,KAAK,QAAL,GAAgB,WAAvB;AACD;AA1BH;;AAAA;AAAA,OAAA;;;;cAG4B,iDAAA,CAAA,YAAA;;;;AAHf,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH3B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6NAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,kBAAb;AAAA;AAAA;AAKE,kCAAoB,gBAApB,EAAqD;AAAA;;AAAjC,aAAA,gBAAA,GAAA,gBAAA;AAHpB,aAAA,YAAA,GAAe,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAf;AACA,aAAA,SAAA,GAA2B,EAA3B;AAGC;;AANH;AAAA;AAAA,mCAQU;AAAA;;AACN,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,gBAAL,CAAsB,IAAtB,GAA6B,SAA7B,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,MAAI,CAAC,SAAL,GAAiB,GAAjB;;AACA,YAAA,MAAI,CAAC,YAAL,CAAkB,UAAlB;AACD,WAJH,EAKE,UAAA,GAAG;AAAA,mBAAI,MAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,WALL;AAOD;AAjBH;;AAAA;AAAA,OAAA;;;;cAKwC,uDAAA,CAAA,iBAAA;;;;AAL3B,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,+GAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACVb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWf,QAAa,yBAAb;AAAA;AAAA;AAOE,yCACU,eADV,EAC0C;AAAA;;AAAhC,aAAA,eAAA,GAAA,eAAA;AAPV,aAAA,WAAA,GAA2B,IAAI,+CAAA,CAAA,aAAA,CAAJ,EAA3B;AAGA,aAAA,YAAA,GAAe,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAf;AACU,aAAA,gBAAA,GAAmB,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAnB;AAIT;;AATH;AAAA;AAAA,mCAWU,CACP;AAZH;AAAA;AAAA,oCAcW;AAAA;;AACP,cAAI,KAAK,SAAL,EAAJ,EAAsB;AACpB,iBAAK,YAAL,CAAkB,UAAlB;AACA,iBAAK,eAAL,CAAqB,QAArB,CAA8B,KAAK,WAAnC,EAAgD,KAAK,WAArD,EAAkE,SAAlE,CACE,UAAA,GAAG,EAAG;AACJ,cAAA,MAAI,CAAC,YAAL,CAAkB,UAAlB;;AACA,cAAA,MAAI,CAAC,0BAAL;;AACA,cAAA,MAAI,CAAC,YAAL;;AACA,cAAA,MAAI,CAAC,WAAL,GAAmB,IAAI,+CAAA,CAAA,aAAA,CAAJ,EAAnB;AACA,cAAA,MAAI,CAAC,kBAAL,GAA0B,EAA1B;AACA,cAAA,MAAI,CAAC,WAAL,GAAmB,EAAnB;AACD,aARH,EASE,UAAA,GAAG,EAAG;AACJ,cAAA,MAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,oBAA3B;;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,aAZH;AAcD;AACF;AAhCH;AAAA;AAAA,qDAkC4B;AACxB,eAAK,gBAAL,CAAsB,IAAtB,CAA2B,IAA3B;AACD;AApCH;AAAA;AAAA,oCAsCW;AACP,cAAI,KAAK,WAAL,CAAiB,IAAjB,IAAyB,IAAzB,IAAiC,KAAK,WAAL,CAAiB,QAAjB,IAA6B,IAA9D,IACF,KAAK,WAAL,CAAiB,KAAjB,IAA0B,IADxB,IACgC,KAAK,WAAL,CAAiB,OAAjB,IAA4B,IAD5D,IAEF,KAAK,WAAL,IAAoB,IAFlB,IAE0B,KAAK,kBAAL,IAA2B,IAFzD,EAE+D;AAC7D,iBAAK,YAAL,CAAkB,QAAlB,CAA2B,6BAA3B;AACA,mBAAO,KAAP;AACD;;AACD,cAAI,CAAC,KAAK,aAAL,CAAmB,KAAK,WAAL,CAAiB,KAApC,CAAL,EAAiD;AAC/C,iBAAK,YAAL,CAAkB,QAAlB,CAA2B,uBAA3B;AACA,mBAAO,KAAP;AACD;;AACD,cAAI,KAAK,WAAL,KAAqB,KAAK,kBAA9B,EAAkD;AAChD,iBAAK,YAAL,CAAkB,QAAlB,CAA2B,wBAA3B;AACA,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;AAtDH;AAAA;AAAA,sCAwDgB,KAxDhB,EAwD6B;AACzB,cAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,wJAAX,CAAf;AACA,iBAAO,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAP;AACD;AA3DH;AAAA;AAAA,uCA6Dc;AACV,UAAA,UAAU,CAAC,UAAC,KAAD,EAAqB;AAC9B,YAAA,KAAK,CAAC,OAAN;AACD,WAFS,EAEP,IAFO,EAED,KAAK,YAFJ,CAAV;AAGD;AAjEH;;AAAA;AAAA,OAAA;;;;cAQ6B,uDAAA,CAAA,iBAAA;;;;AAHjB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,mCAAA,E,kBAAA,E,KAA+C,CAA/C;AALC,IAAA,yBAAyB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALrC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,uBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,+HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKqC,CAAA,EAAzB,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAa,gBAAb;AAAA;AAAA;AAGE,gCAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAFZ,aAAA,QAAA,GAAW,qCAAX;AAGP;;AAJH;AAAA;AAAA,uCAMiB,IANjB,EAMkC;AAC9B,cAAI,GAAG,GAAG,IAAI,CAAC,SAAL,CAAe,IAAf,CAAV;AACA,cAAM,SAAS,GAAG,GAAG,CAAC,MAAJ,CAAW,GAAG,CAAC,MAAJ,CAAW,UAAX,IAAyB,EAAzB,GAA8B,EAAzC,EAA6C,EAA7C,CAAlB;AACA,UAAA,GAAG,GAAG,GAAG,CAAC,OAAJ,CAAY,SAAZ,EAAuB,EAAvB,CAAN;AACA,UAAA,GAAG,GAAG,GAAG,CAAC,OAAJ,CAAY,SAAZ,EAAuB,EAAvB,CAAN;AACA,iBAAO,GAAP;AACD;AAZH;AAAA;AAAA,+BAcS,QAdT,EAc8B;AAC1B,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,SAAd,CAAZ;AACA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,gBAArB,EAAuC,KAAK,cAAL,CAAoB,QAApB,CAAvC,CAAd;AAEA,iBAAO,KAAK,IAAL,CAAU,IAAV,CAA4B,GAA5B,EAAiC,IAAjC,EAAuC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAvC,CAAP;AACD;AAnBH;AAAA;AAAA,6BAqBO,QArBP,EAqB4B;AACxB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,OAAd,CAAZ;AACA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,gBAArB,EAAuC,KAAK,cAAL,CAAoB,QAApB,CAAvC,CAAd;AAEA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA2B,GAA3B,EAAgC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAhC,CAAP;AACD;AA1BH;AAAA;AAAA,+BA4BM;AACF,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,OAAd,CAAZ;AAEA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA6B,GAA7B,CAAP;AACD;AAhCH;AAAA;AAAA,iCAkCmB,WAlCnB,EAkCsC;AAClC,iBAAO,KAAK,QAAL,GAAgB,WAAvB;AACD;AApCH;AAAA;AAAA,8CAsCwB,IAtCxB,EAsCyC;AACrC,cAAM,GAAG,GAAG,IAAZ;AACA,UAAA,GAAG,CAAC,QAAJ,GAAe,IAAI,IAAJ,CAAS,IAAI,CAAC,QAAd,CAAf;AACA,UAAA,GAAG,CAAC,MAAJ,GAAa,IAAI,IAAJ,CAAS,IAAI,CAAC,MAAd,CAAb;AACA,iBAAO,GAAP;AACD;AA3CH;AAAA;AAAA,8CA6CwB,IA7CxB,EA6CkC;AAC9B,iBAAO,IAAI,CAAC,OAAL,KAAiB,IAAjB,IAAyB,IAAI,CAAC,QAAL,KAAkB,CAA3C,IAAgD,IAAhD,GAAuD,IAAI,CAAC,WAAL,EAA9D;AACD;AA/CH;AAAA;AAAA,gCAiDS,UAjDT,EAiD2B;AACvB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,SAAd,CAAZ;AACA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,YAArB,EAAmC,IAAI,CAAC,SAAL,CAAe,UAAf,CAAnC,CAAd;AAEA,iBAAO,KAAK,IAAL,CAAU,MAAV,CAAuB,GAAvB,EAA4B;AAAC,YAAA,MAAM,EAAE;AAAT,WAA5B,CAAP;AACD;AAtDH;AAAA;AAAA,sCAwDgB,QAxDhB,EAwDqC;AACjC,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,SAAd,CAAZ;AACA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,gBAArB,EAAuC,KAAK,cAAL,CAAoB,QAApB,CAAvC,CAAd;AAEA,iBAAO,KAAK,IAAL,CAAU,KAAV,CAAsB,GAAtB,EAA2B,IAA3B,EAAiC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAjC,CAAP;AACD;AA7DH;;AAAA;AAAA,OAAA;;;;cAG4B,iDAAA,CAAA,YAAA;;;;AAHf,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH5B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCTA,oB;;;AAAb,sCAAA;AAAA;;AAIU,aAAA,KAAA,GAAQ,CAAR;AAyBT;;;;oCAvBiB;AACd,eAAK,KAAL,GAAa,oBAAoB,CAAC,MAAlC;AACD;;;yCAEoB;AACnB,eAAK,KAAL,GAAa,oBAAoB,CAAC,OAAlC;AACD;;;kDAE6B;AAC5B,eAAK,KAAL,GAAa,oBAAoB,CAAC,WAAlC;AACD;;;mCAEc;AACb,iBAAO,KAAK,KAAL,KAAe,oBAAoB,CAAC,MAApC,IAA8C,KAAK,aAAL,EAArD;AACD;;;wCAEmB;AAClB,iBAAO,KAAK,KAAL,KAAe,oBAAoB,CAAC,OAA3C;AACD;;;iDAE4B;AAC3B,iBAAO,KAAK,KAAL,KAAe,oBAAoB,CAAC,WAA3C;AACD;;;;;;AA3Bc,IAAA,oBAAA,CAAA,MAAA,GAAS,CAAT;AACA,IAAA,oBAAA,CAAA,OAAA,GAAU,CAAV;AACA,IAAA,oBAAA,CAAA,WAAA,GAAc,CAAd;;;;;;;;;;;;;;;;ACHjB,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcf,QAAa,qBAAb;AAAA;AAAA;AAeE,qCAAoB,eAApB,EACoB,gBADpB,EAEoB,MAFpB,EAEkC;AAAA;;AAFd,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,gBAAA,GAAA,gBAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAhBpB,aAAA,YAAA,GAA0B,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAA1B;AACA,aAAA,cAAA,GAAuC,IAAI,kDAAA,CAAA,sBAAA,CAAJ,EAAvC;AACA,aAAA,QAAA,GAAyB,EAAzB;AAQA,aAAA,GAAA,GAAc,IAAI,IAAJ,GAAW,MAAX,GAAoB,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,CAAd;AACA,aAAA,QAAA,GAAmB,KAAK,GAAxB;AACA,aAAA,MAAA,GAAiB,KAAK,GAAtB;AAKC;;AAlBH;AAAA;AAAA,mCAoBU;AAAA;;AACN,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,eAAL,CAAqB,OAArB,CAA6B,IAA7B,EAAmC,SAAnC,CACE,UAAA,QAAQ,EAAG;AACT,YAAA,MAAI,CAAC,QAAL,GAAgB,QAAhB;;AACA,YAAA,MAAI,CAAC,YAAL,CAAkB,UAAlB;;AACA,YAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,QAAL,CAAc,CAAd,CAAvB;AACD,WALH,EAME,UAAA,GAAG;AAAA,mBAAI,MAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,WANL;AAQA,eAAK,eAAL,GAAuB,CAAvB;AACA,eAAK,cAAL,CAAoB,SAApB;AACD;AAhCH;AAAA;AAAA,0CAkCoB,IAlCpB,EAkCgC;AAC5B,iBAAO,IAAI,IAAJ,CAAS,IAAT,CAAP;AACD;AApCH;AAAA;AAAA,8CAsCwB,KAtCxB,EAsCkC;AAC9B,cAAM,SAAS,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAN,CAAa,KAAd,EAAqB,EAArB,CAAlC;AACA,eAAK,eAAL,GAAuB,KAAK,QAAL,CAAc,IAAd,CAAmB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,SAAb;AAAA,WAApB,CAAvB;AACA,eAAK,2BAAL;AACD;AA1CH;AAAA;AAAA,sDA4C6B;AACzB,eAAK,aAAL,GAAqB,KAAK,eAAL,CAAqB,KAArB,GAA8B,KAAK,eAAL,CAAqB,KAArB,GAA6B,KAAK,eAAlC,GAAoD,GAAvG;AACD;AA9CH;AAAA;AAAA,uCAgDiB,KAhDjB,EAgD2B;AACvB,eAAK,eAAL,GAAuB,QAAQ,CAAC,KAAK,CAAC,MAAN,CAAa,KAAd,EAAqB,EAArB,CAA/B;AACA,eAAK,aAAL,GAAsB,KAAK,eAAL,CAAqB,KAArB,IAA8B,IAAK,KAAK,eAAL,GAAuB,GAA1D,CAAtB;AACD;AAnDH;AAAA;AAAA,sCAqDa;AACT,cAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,KAAK,QAAd,CAAb;AACA,cAAM,EAAE,GAAG,IAAI,IAAJ,CAAS,KAAK,MAAd,CAAX;;AACA,cAAI,IAAI,GAAG,EAAX,EAAe;AACb,iBAAK,MAAL,GAAc,KAAK,QAAnB;AACD;AACF;AA3DH;AAAA;AAAA,yCA6DgB;AAAA;;AACZ,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,SAAL,EAAZ;AACA,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,eAAjB;;AACA,cAAI,KAAK,SAAL,MAAoB,KAAK,eAAL,GAAuB,CAA/C,EAAkD;AAChD,gBAAM,QAAQ,GAAG,IAAI,+CAAA,CAAA,aAAA,CAAJ,EAAjB;AACA,YAAA,QAAQ,CAAC,SAAT,GAAqB,KAAK,eAAL,CAAqB,EAA1C;AACA,YAAA,QAAQ,CAAC,OAAT,GAAmB,KAAK,eAAxB;AACA,YAAA,QAAQ,CAAC,MAAT,GAAkB,IAAI,IAAJ,CAAS,KAAK,MAAd,CAAlB;AACA,YAAA,QAAQ,CAAC,QAAT,GAAoB,IAAI,IAAJ,CAAS,KAAK,QAAd,CAApB;AAEA,iBAAK,YAAL,CAAkB,UAAlB;AACA,iBAAK,gBAAL,CAAsB,MAAtB,CAA6B,QAA7B,EAAuC,SAAvC,CACE,UAAA,GAAG,EAAG;AACJ,cAAA,MAAI,CAAC,YAAL,CAAkB,UAAlB;;AACA,cAAA,MAAI,CAAC,gBAAL,GAAwB,MAAI,CAAC,gBAAL,CAAsB,qBAAtB,CAA4C,GAA5C,CAAxB;AACA,cAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,UAAA,CAAC;AAAA,uBAAI,CAAC,CAAC,EAAF,KAAS,MAAI,CAAC,gBAAL,CAAsB,SAAnC;AAAA,eAApB,CAAvB;AACA,cAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,gBAAL,CAAsB,OAA7C;;AACA,cAAA,MAAI,CAAC,2BAAL;;AACA,cAAA,MAAI,CAAC,cAAL,CAAoB,uBAApB;;AACA,cAAA,MAAI,CAAC,OAAL;AACD,aATH,EAUE,UAAA,GAAG,EAAG;AACJ,cAAA,MAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B;;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,aAbH;AAeD,WAvBD,MAuBO;AACL,iBAAK,cAAL,CAAoB,cAApB;AACD;AACF;AA1FH;AAAA;AAAA,oCA4FW;AACP,cAAM,IAAI,GAAG,IAAI,IAAJ,CAAS,KAAK,QAAd,CAAb;AACA,cAAM,EAAE,GAAG,IAAI,IAAJ,CAAS,KAAK,MAAd,CAAX;AACA,cAAM,GAAG,GAAG,IAAI,IAAJ,CAAS,IAAI,CAAC,SAAL,CAAe,IAAI,IAAJ,EAAf,EAA2B,MAA3B,CAAkC,CAAlC,EAAqC,EAArC,CAAT,CAAZ;;AACA,cAAI,IAAI,CAAC,OAAL,KAAiB,EAAE,CAAC,OAAH,EAAjB,IAAiC,IAAI,CAAC,OAAL,KAAiB,GAAG,CAAC,OAAJ,EAAlD,IAAmE,EAAE,CAAC,OAAH,KAAe,GAAG,CAAC,OAAJ,EAAtF,EAAqG;AACnG,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;AArGH;AAAA;AAAA,kCAuGS;AACL,UAAA,UAAU,CAAC,UAAC,MAAD,EAAmB;AAC5B,YAAA,MAAM,CAAC,QAAP,CAAgB,CAAC,WAAD,CAAhB;AAA+B,WADvB,EACyB,IADzB,EAC+B,KAAK,MADpC,CAAV;AAGD;AA3GH;;AAAA;AAAA,OAAA;;;;cAeuC,gEAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,kBAAA;;cACV,4CAAA,CAAA,QAAA;;;;AAjBjB,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,uHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACdb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,uBAAb;AAAA;AAAA;AAWE,uCAAoB,gBAApB,EACoB,eADpB,EACoD;AAAA;;AADhC,aAAA,gBAAA,GAAA,gBAAA;AACA,aAAA,eAAA,GAAA,eAAA;AAXpB,aAAA,YAAA,GAA0B,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAA1B;AAGU,aAAA,qBAAA,GAAwB,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAxB;AACA,aAAA,OAAA,GAAU,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAV;AAIV,aAAA,GAAA,GAAc,IAAI,IAAJ,GAAW,MAAX,GAAoB,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,CAAd;AAIC;;AAbH;AAAA;AAAA,mCAeU;AACN,eAAK,eAAL,GAAuB,KAAK,gBAA5B;AACA,eAAK,aAAL,GAAqB,KAAK,iBAAL,CAAuB,KAAvB,IAAgC,IAAK,KAAK,eAAL,CAAqB,OAArB,GAA+B,GAApE,CAArB;AACD;AAlBH;AAAA;AAAA,uCAoBiB,KApBjB,EAoB2B;AACvB,eAAK,eAAL,CAAqB,OAArB,GAA+B,QAAQ,CAAC,KAAK,CAAC,MAAN,CAAa,KAAd,EAAqB,EAArB,CAAvC;AACA,eAAK,aAAL,GAAqB,KAAK,iBAAL,CAAuB,KAAvB,IAAgC,IAAK,KAAK,eAAL,CAAqB,OAArB,GAA+B,GAApE,CAArB;AACD;AAvBH;AAAA;AAAA,uCAyBiB,KAzBjB,EAyB2B;AACvB,eAAK,eAAL,CAAqB,QAArB,GAAgC,IAAI,IAAJ,CAAS,KAAK,CAAC,MAAN,CAAa,KAAtB,CAAhC;AACA,eAAK,WAAL;AACD;AA5BH;AAAA;AAAA,sCA8BqB;AACjB,cAAI,KAAK,eAAL,CAAqB,QAArB,GAAgC,KAAK,eAAL,CAAqB,MAAzD,EAAiE;AAC/D,iBAAK,eAAL,CAAqB,MAArB,GAA8B,KAAK,eAAL,CAAqB,QAAnD;AACD;AACF;AAlCH;AAAA;AAAA,qCAoCe,KApCf,EAoCyB;AACrB,eAAK,eAAL,CAAqB,MAArB,GAA8B,IAAI,IAAJ,CAAS,KAAK,CAAC,MAAN,CAAa,KAAtB,CAA9B;AACD;AAtCH;AAAA;AAAA,uCAwCc;AACV,iBAAO,KAAK,eAAL,CAAqB,QAArB,CAA8B,MAA9B,GAAuC,KAAvC,CAA6C,CAA7C,EAAgD,EAAhD,CAAP;AACD;AA1CH;AAAA;AAAA,wCA4Ce;AAAA;;AACX,eAAK,gBAAL,CAAsB,aAAtB,CAAoC,KAAK,eAAzC,EAA0D,SAA1D,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,MAAI,CAAC,YAAL,CAAkB,UAAlB;;AACA,YAAA,MAAI,CAAC,qBAAL,CAA2B,IAA3B,CAAgC,MAAI,CAAC,eAArC;;AACA,YAAA,UAAU,CAAC,UAAC,OAAD,EAAmC;AAC5C,cAAA,OAAO,CAAC,IAAR,CAAa,IAAb;AACD,aAFS,EAEP,IAFO,EAED,MAAI,CAAC,OAFJ,CAAV;AAGD,WAPH,EAQE,UAAA,GAAG;AAAA,mBAAI,MAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,WARL;AAUD;AAvDH;AAAA;AAAA,2CAyDkB;AACd,eAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB;AACD;AA3DH;;AAAA;AAAA,OAAA;;;;cAWwC,wDAAA,CAAA,kBAAA;;cACD,gEAAA,CAAA,iBAAA;;;;AAVX,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAzB,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,CAAM,iBAAN,CAAyB,CAAA,E,iCAAA,E,kBAAA,E,KAA8B,CAA9B;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAzB,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,CAAM,iBAAN,CAAyB,CAAA,E,iCAAA,E,mBAAA,E,KAA8B,CAA9B;AAChB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,iCAAA,E,uBAAA,E,KAAwD,CAAxD;AACA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,iCAAA,E,SAAA,E,KAAsC,CAAtC;AALC,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,qBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,2HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKmC,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACZb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6NAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,kBAAb;AAAA;AAAA;AAcE,kCAAoB,eAApB,EACoB,gBADpB,EACsD;AAAA;;AADlC,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,gBAAA,GAAA,gBAAA;AAdpB,aAAA,YAAA,GAA0B,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAA1B;AACA,aAAA,QAAA,GAAyB,EAAzB;AAEA,aAAA,gBAAA,GAAkC,EAAlC;AACA,aAAA,aAAA,GAA+B,EAA/B;AACA,aAAA,eAAA,GAAiC,EAAjC;AACA,aAAA,YAAA,GAA8B,EAA9B;AASC;;AAhBH;AAAA;AAAA,mCAkBU;AAAA;;AACN,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,gBAAL,CAAsB,IAAtB,GAA6B,SAA7B,CACE,UAAA,SAAS,EAAG;AACV,YAAA,SAAS,CAAC,GAAV,CAA2B,UAAA,CAAC;AAAA,qBAAI,MAAI,CAAC,gBAAL,CAAsB,qBAAtB,CAA4C,CAA5C,CAAJ;AAAA,aAA5B,EACG,OADH,CACW,UAAA,CAAC,EAAG;AACX,cAAA,MAAI,CAAC,WAAL,CAAiB,CAAjB;;AACA,cAAA,MAAI,CAAC,YAAL,CAAkB,IAAlB,CAAuB,CAAvB;AACD,aAJH;;AAKA,YAAA,MAAI,CAAC,eAAL,CAAqB,OAArB,CAA6B,IAA7B,EAAmC,SAAnC,CACE,UAAA,QAAQ,EAAG;AACT,cAAA,MAAI,CAAC,QAAL,GAAgB,QAAhB;;AACA,cAAA,MAAI,CAAC,YAAL,CAAkB,UAAlB;;AACA,cAAA,MAAI,CAAC,eAAL,GAAuB,MAAI,CAAC,QAAL,CAAc,CAAd,CAAvB;AACD,aALH,EAME,UAAA,GAAG;AAAA,qBAAI,MAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,aANL;AAQD,WAfH,EAgBE,UAAA,GAAG;AAAA,mBAAI,MAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,WAhBL;AAkBA,eAAK,eAAL,GAAuB,CAAvB;AACD;AAvCH;AAAA;AAAA,+CAyCyB,QAzCzB,EAyC8C;AAC1C,eAAK,eAAL,GAAuB,QAAQ,CAAC,OAAhC;AACA,eAAK,eAAL,GAAuB,KAAK,QAAL,CAAc,IAAd,CAAmB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,QAAQ,CAAC,SAAtB;AAAA,WAApB,CAAvB;AACA,eAAK,aAAL,GAAqB,KAAK,eAAL,CAAqB,KAArB,GAA8B,KAAK,eAAL,CAAqB,KAArB,GAA6B,KAAK,eAAlC,GAAoD,GAAvG;AACD;AA7CH;AAAA;AAAA,sCA+CgB,UA/ChB,EA+CkC;AAAA;;AAC9B,eAAK,eAAL,GAAuB,KAAK,eAAL,CAAqB,IAArB,CAA0B,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,UAAb;AAAA,WAA3B,CAAvB;AACA,eAAK,eAAL,GAAuB,KAAK,QAAL,CAAc,IAAd,CAAmB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,MAAI,CAAC,eAAL,CAAqB,SAAlC;AAAA,WAApB,CAAvB;AACA,eAAK,eAAL,GAAuB,IAAvB;AACD;AAnDH;AAAA;AAAA,yCAqDmB,MArDnB,EAqDsC;AAClC,cAAM,YAAY,GAAG,MAArB;AACA,cAAM,QAAQ,GAAG,KAAK,eAAL,CAAqB,IAArB,CAA0B,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,YAAY,CAAC,EAA1B;AAAA,WAA3B,CAAjB;AAEA,UAAA,QAAQ,CAAC,OAAT,GAAmB,YAAY,CAAC,OAAhC;AACA,UAAA,QAAQ,CAAC,QAAT,GAAoB,YAAY,CAAC,QAAjC;AACA,UAAA,QAAQ,CAAC,MAAT,GAAkB,YAAY,CAAC,MAA/B;AACD;AA5DH;AAAA;AAAA,yCA8DmB,MA9DnB,EA8DkC;AAC9B,eAAK,eAAL,GAAuB,KAAvB;AACD;AAhEH;AAAA;AAAA,oCAkEc,QAlEd,EAkEmC;AAC/B,cAAM,KAAK,GAAG,IAAI,IAAJ,CAAS,IAAI,IAAJ,GAAW,MAAX,GAAoB,KAApB,CAA0B,CAA1B,EAA6B,EAA7B,CAAT,CAAd;;AACA,cAAI,QAAQ,CAAC,QAAT,IAAqB,KAAzB,EAAgC;AAC9B,gBAAI,QAAQ,CAAC,MAAT,IAAmB,KAAvB,EAA8B;AAC5B,mBAAK,gBAAL,CAAsB,IAAtB,CAA2B,QAA3B;AACD,aAFD,MAEO;AACL,mBAAK,aAAL,CAAmB,IAAnB,CAAwB,QAAxB;AACD;AACF,WAND,MAMO;AACL,iBAAK,eAAL,CAAqB,IAArB,CAA0B,QAA1B;AACD;AACF;AA7EH;AAAA;AAAA,2CA+EqB,UA/ErB,EA+EuC;AACnC,eAAK,eAAL,GAAuB,KAAK,eAAL,CAAqB,IAArB,CAA0B,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,UAAb;AAAA,WAA3B,CAAvB;AACD;AAjFH;AAAA;AAAA,uCAmFiB,UAnFjB,EAmFmC;AAAA;;AAC/B,eAAK,gBAAL,CAAsB,MAAtB,CAA6B,UAA7B,EAAyC,SAAzC,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,eAAL,CAAqB,MAArB,CACE,OAAI,CAAC,eAAL,CAAqB,SAArB,CAA+B,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,EAAF,KAAS,UAAb;AAAA,aAAhC,CADF,EAC4D,CAD5D;AAGD,WALH;AAOD;AA3FH;AAAA;AAAA,6CA6FuB,KA7FvB,EA6FiC;AAAA;;AAC7B,cAAM,SAAS,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAN,CAAa,KAAd,EAAqB,EAArB,CAAlC;AACA,eAAK,eAAL,GAAuB,EAAvB;AACA,eAAK,gBAAL,GAAwB,EAAxB;AACA,eAAK,aAAL,GAAqB,EAArB;;AACA,cAAI,SAAS,IAAI,CAAjB,EAAoB;AAClB,iBAAK,YAAL,CAAkB,MAAlB,CAAyB,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,SAAF,KAAgB,SAApB;AAAA,aAA1B,EACG,OADH,CACW,UAAA,CAAC;AAAA,qBAAI,OAAI,CAAC,WAAL,CAAiB,CAAjB,CAAJ;AAAA,aADZ;AAED,WAHD,MAGO;AACL,iBAAK,YAAL,CAAkB,OAAlB,CAA0B,UAAA,CAAC;AAAA,qBAAI,OAAI,CAAC,WAAL,CAAiB,CAAjB,CAAJ;AAAA,aAA3B;AACD;AACF;AAxGH;;AAAA;AAAA,OAAA;;;;cAcuC,gEAAA,CAAA,iBAAA;;cACC,wDAAA,CAAA,kBAAA;;;;AAf3B,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,eADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,+GAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACZb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yMAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,eAAb;AAAA;AAAA;AAQE,+BAAoB,YAApB,EACoB,mBADpB,EAEoB,MAFpB,EAEkC;AAAA;;AAAA;;AAFd,aAAA,YAAA,GAAA,YAAA;AACA,aAAA,mBAAA,GAAA,mBAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAClB,aAAK,mBAAL,CAAyB,WAAzB,CAAqC,SAArC,CAA+C,UAAA,WAAW;AAAA,iBAAI,OAAI,CAAC,WAAL,GAAmB,WAAvB;AAAA,SAA1D;AACD;;AAZH;AAAA;AAAA,mCAcU;AAAA;;AACN,cAAI,KAAK,YAAL,CAAkB,cAAlB,EAAJ,EAAwC;AACtC,iBAAK,UAAL;AACA,iBAAK,WAAL,GAAmB,KAAK,mBAAL,CAAyB,cAAzB,EAAnB;AACA,iBAAK,mBAAL,CAAyB,WAAzB,CAAqC,SAArC,CAA+C,UAAA,WAAW;AAAA,qBAAI,OAAI,CAAC,WAAL,GAAmB,WAAvB;AAAA,aAA1D;AACD;AACF;AApBH;AAAA;AAAA,8CAsBwB,MAtBxB,EAsB8B;AAC1B,cAAI,MAAJ,EAAY;AACV,YAAA,UAAU,CAAC,UAAC,WAAD,EAA4B;AACnC,cAAA,WAAW,CAAC,aAAZ,CAA0B,KAA1B;AACD,aAFO,EAGN,IAHM,EAGA,KAAK,oBAHL,CAAV;AAID;AACF;AA7BH;AAAA;AAAA,iDA+B2B,MA/B3B,EA+BiC;AAC7B,cAAI,MAAJ,EAAY;AACV,YAAA,UAAU,CAAC,UAAC,WAAD,EAA0B,UAA1B,EAAoD;AAC3D,cAAA,WAAW,CAAC,aAAZ,CAA0B,KAA1B;AACA,cAAA,UAAU,CAAC,aAAX,CAAyB,KAAzB;AACD,aAHO,EAIN,IAJM,EAIA,KAAK,uBAJL,EAI8B,KAAK,mBAJnC,CAAV;AAKD;AACF;AAvCH;AAAA;AAAA,0CAyCiB;AACb,eAAK,YAAL,CAAkB,eAAlB;AACD;AA3CH;AAAA;AAAA,qCA6CY;AACR,eAAK,YAAL,CAAkB,UAAlB;AACA,UAAA,UAAU,CAAC,SAAS,IAAT,CAAc,YAAd,EAAiD;AAC1D,gBAAI,YAAY,CAAC,cAAb,EAAJ,EAAmC;AACjC,cAAA,YAAY,CAAC,UAAb;AACD;;AACD,YAAA,UAAU,CAAC,IAAD,EAAO,OAAO,EAAd,EAAkB,YAAlB,CAAV;AACD,WALS,EAMR,OAAO,EANC,EAMG,KAAK,YANR,CAAV;AAOD;AAtDH;;AAAA;AAAA,OAAA;;;;cAQoC,kEAAA,CAAA,uBAAA;;cACO,qEAAA,CAAA,qBAAA;;cACb,4CAAA,CAAA,QAAA;;;;AARgB,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAA3C,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,wDAAA,CAAA,gBAAA,CAAV,EAA0B;AAAC,MAAA,MAAM,EAAE;AAAT,KAA1B,CAA2C,CAAA,E,yBAAA,E,WAAA,E,KAAU,CAAV;AACW,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAtD,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,qFAAA,CAAA,2BAAA,CAAV,EAAqC;AAAC,MAAA,MAAM,EAAE;AAAT,KAArC,CAAsD,CAAA,E,yBAAA,E,cAAA,E,KAAa,CAAb;AACJ,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAlD,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,sBAAV,EAAkC;AAAC,MAAA,MAAM,EAAE;AAAT,KAAlC,CAAkD,CAAA,E,yBAAA,E,sBAAA,E,KAAiC,CAAjC;AACG,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAArD,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,yBAAV,EAAqC;AAAC,MAAA,MAAM,EAAE;AAAT,KAArC,CAAqD,CAAA,E,yBAAA,E,yBAAA,E,KAAoC,CAApC;AACH,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAlD,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU,qBAAV,EAAiC;AAAC,MAAA,MAAM,EAAE;AAAT,KAAjC,CAAkD,CAAA,E,yBAAA,E,qBAAA,E,KAAgC,CAAhC;AANxC,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,+FAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLb,QAAa,mBAAb;AAAA;AAAA;AAGE,mCAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAFZ,aAAA,QAAA,GAAW,wCAAX;AAGP;;AAJH;AAAA;AAAA,iCAMmB,WANnB,EAMsC;AAClC,iBAAO,KAAK,QAAL,GAAgB,WAAvB;AACD;AARH;AAAA;AAAA,4BAUa,EAVb,EAUuB;AACnB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,MAAd,CAAZ;AACA,cAAM,UAAU,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,IAArB,EAA2B,EAA3B,CAAnB;AAEA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA6B,GAA7B,EAAkC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAlC,CAAP;AACD;AAfH;AAAA;AAAA,4BAiBa,IAjBb,EAiBgC;AAC5B,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,MAAd,CAAZ;AAEA,iBAAO,KAAK,IAAL,CAAU,IAAV,CAA8B,GAA9B,EAAmC,IAAnC,CAAP;AACD;AArBH;AAAA;AAAA,+BAuBgB,IAvBhB,EAuBmC;AAC/B,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,SAAd,CAAZ;AAEA,iBAAO,KAAK,IAAL,CAAU,KAAV,CAAsB,GAAtB,EAA2B,IAA3B,CAAP;AACD;AA3BH;AAAA;AAAA,+BA6Ba;AACT,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,OAAd,CAAZ;AAEA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA+B,GAA/B,CAAP;AACD;AAjCH;AAAA;AAAA,iCAmCkB,EAnClB,EAmC8B,OAnC9B,EAmC8C;AAC1C,cAAI,GAAG,GAAG,KAAK,QAAL,CAAc,WAAd,CAAV;;AACA,cAAI,OAAJ,EAAa;AACX,YAAA,GAAG,IAAI,UAAP;AACD,WAFD,MAEO;AACL,YAAA,GAAG,IAAI,aAAP;AACD;;AACD,cAAM,UAAU,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,IAArB,EAA2B,EAA3B,CAAnB;AAEA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,GAAtB,EAA2B;AAAC,YAAA,MAAM,EAAE;AAAT,WAA3B,CAAP;AACD;AA7CH;;AAAA;AAAA,OAAA;;;;cAG4B,iDAAA,CAAA,YAAA;;;;AAHf,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH/B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yPAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,wBAAb;AAAA;AAAA;AAOE,wCACU,mBADV,EAEU,MAFV,EAEwB;AAAA;;AADd,aAAA,mBAAA,GAAA,mBAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAPF,aAAA,YAAA,GAAe,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAf;AACA,aAAA,YAAA,GAAe,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAf;AACA,aAAA,WAAA,GAAc,IAAI,iDAAA,CAAA,eAAA,CAAJ,EAAd;AAOP;;AAXH;AAAA;AAAA,mCAaU;AAAA;;AACN,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,mBAAL,CAAyB,IAAzB,GAAgC,SAAhC,CACE,UAAA,EAAE,EAAG;AACH,YAAA,OAAI,CAAC,gBAAL,GAAwB,EAAxB;;AACA,YAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;;AACA,YAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;AACD,WALH,EAME,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B;AACD,WARH;AAUD;AAzBH;AAAA;AAAA,oCA2BW;AACP,cAAI,KAAK,WAAL,CAAiB,QAAjB,IAA6B,IAA7B,IAAqC,KAAK,WAAL,CAAiB,QAAjB,CAA0B,OAA1B,CAAkC,KAAlC,EAAyC,EAAzC,MAAiD,EAA1F,EAA8F;AAC5F,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;AAjCH;AAAA;AAAA,oCAmCW;AAAA;;AACP,cAAI,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,UAAA,EAAE;AAAA,mBAAI,EAAE,CAAC,QAAH,KAAgB,OAAI,CAAC,WAAL,CAAiB,QAArC;AAAA,WAA7B,KAA+E,IAAnF,EAAyF;AACvF,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;AAzCH;AAAA;AAAA,oCA2CW;AAAA;;AACP,cAAI,CAAC,KAAK,SAAL,EAAL,EAAuB;AACrB,iBAAK,YAAL,CAAkB,QAAlB,CAA2B,wDAA3B;AACA;AACD;;AACD,cAAI,CAAC,KAAK,SAAL,EAAL,EAAuB;AACrB,iBAAK,YAAL,CAAkB,QAAlB,CAA2B,wCAA3B;AACA;AACD;;AACD,eAAK,mBAAL,CAAyB,GAAzB,CAA6B,KAAK,WAAlC,EAA+C,SAA/C,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;AACD,WAHH;AAKA,eAAK,MAAL;AACD;AA1DH;AAAA;AAAA,iCA4DgB;AACZ,UAAA,UAAU,CAAC,UAAC,MAAD,EAAmB;AAC5B,YAAA,MAAM,CAAC,QAAP,CAAgB,CAAC,aAAD,CAAhB;AACD,WAFS,EAEP,IAFO,EAED,KAAK,MAFJ,CAAV;AAGD;AAhEH;;AAAA;AAAA,OAAA;;;;cAQiC,4DAAA,CAAA,qBAAA;;cACb,4CAAA,CAAA,QAAA;;;;AATP,IAAA,wBAAwB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALpC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,uBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kIAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKoC,CAAA,EAAxB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACZb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6PAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,0BAAb;AAAA;AAAA;AAOE,0CAAoB,mBAApB,EAA4D;AAAA;;AAAxC,aAAA,mBAAA,GAAA,mBAAA;AAJZ,aAAA,YAAA,GAAe,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAf;AACA,aAAA,aAAA,GAAgB,CAAC,CAAjB;AACA,aAAA,SAAA,GAAY,CAAC,CAAb;AAIP;;AATH;AAAA;AAAA,mCAWU;AAAA;;AACN,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,mBAAL,CAAyB,IAAzB,GAAgC,SAAhC,CACE,UAAA,MAAM,EAAG;AACP,YAAA,OAAI,CAAC,YAAL,GAAoB,MAApB;;AACA,YAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;AACD,WAJH,EAKE,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,WALL;AAOD;AApBH;AAAA;AAAA,qCAsBe,KAtBf,EAsB8B,GAtB9B,EAsBsC;AAClC,iBAAO,KAAP;AACD;AAxBH;AAAA;AAAA,qCA0Be,KA1Bf,EA0B4B;AACxB,eAAK,aAAL,GAAqB,KAArB;AACD;AA5BH;AAAA;AAAA,oCA8Bc,KA9Bd,EA8B2B;AAAA;;AACvB,cAAM,IAAI,GAAG,KAAK,YAAL,CAAkB,KAAlB,CAAb;AACA,eAAK,SAAL,GAAiB,KAAjB;AACA,eAAK,mBAAL,CAAyB,MAAzB,CAAgC,IAAhC,EAAsC,SAAtC,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,SAAL,GAAiB,CAAC,CAAlB;AACA,YAAA,OAAI,CAAC,aAAL,GAAqB,CAAC,CAAtB;AACD,WAJH;AAMD;AAvCH;;AAAA;AAAA,OAAA;;;;cAO2C,4DAAA,CAAA,qBAAA;;;;AAP9B,IAAA,0BAA0B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALtC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,yBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sIAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKsC,CAAA,EAA1B,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACVb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,qBAAb;AAAA;AAAA;AAEE,uCAAA;AAAA;AAAiB;;AAFnB;AAAA;AAAA,mCAIU,CACP;AALH;;AAAA;AAAA,OAAA;;AAAa,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0HAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCb,QAAa,eAAb;AAAA;AAAA;AAGE,+BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAFZ,aAAA,QAAA,GAAW,oCAAX;AAGP;;AAJH;AAAA;AAAA,4BAMa,EANb,EAMuB;AACnB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,MAAd,CAAZ;AACA,cAAM,UAAU,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,IAArB,EAA2B,EAA3B,CAAnB;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA0B,GAA1B,EAA+B;AAAC,YAAA,MAAM,EAAE;AAAT,WAA/B,CAAP;AACD;AAVH;AAAA;AAAA,4BAYa,IAZb,EAY6B;AACzB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,MAAd,CAAZ;AAEA,iBAAO,KAAK,IAAL,CAAU,IAAV,CAA2B,GAA3B,EAAgC,IAAhC,CAAP;AACD;AAhBH;AAAA;AAAA,6BAkBc,UAlBd,EAkBkC,KAlBlC,EAkBiD,aAlBjD,EAkBwE,OAlBxE,EAkBwF;AACpF,cAAI,GAAG,GAAG,KAAK,QAAL,CAAc,OAAd,CAAV;;AACA,cAAI,OAAJ,EAAa;AACX,YAAA,GAAG,IAAI,iBAAP;AACD,WAFD,MAEO;AACL,YAAA,GAAG,IAAI,oBAAP;AACD;;AACD,cAAI,UAAU,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,YAArB,EAAmC,UAAnC,CAAjB;AACA,UAAA,UAAU,GAAG,UAAU,CAAC,GAAX,CAAe,OAAf,EAAwB,KAAxB,CAAb;AACA,UAAA,UAAU,GAAG,UAAU,CAAC,GAAX,CAAe,eAAf,EAAgC,aAAhC,CAAb;AAEA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA4B,GAA5B,EAAiC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAjC,CAAP;AACD;AA9BH;AAAA;AAAA,gCA+BiB,OA/BjB,EA+BiC;AAC7B,cAAI,GAAG,GAAG,KAAK,QAAL,CAAc,OAAd,CAAV;;AAAiC,cAAI,OAAJ,EAAa;AAC5C,YAAA,GAAG,IAAI,UAAP;AACD,WAFgC,MAE1B;AACL,YAAA,GAAG,IAAI,aAAP;AACD;;AAED,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA4B,GAA5B,CAAP;AACD;AAvCH;AAAA;AAAA,iCAyCmB,WAzCnB,EAyCsC;AAClC,iBAAO,KAAK,QAAL,GAAgB,WAAvB;AACD;AA3CH;AAAA;AAAA,sCA6CuB,OA7CvB,EA6C0C;AACtC,cAAM,GAAG,GAAG,OAAO,CAAC,UAApB;AACA,cAAM,MAAM,GAAG,uFAAf;;AACA,cAAI,GAAG,IAAI,IAAP,IAAe,CAAC,GAAG,CAAC,KAAJ,CAAU,MAAV,CAApB,EAAuC;AACrC,mBAAO,0DAAP;AACD,WAFD,MAEO;AACL,mBAAO,OAAO,CAAC,UAAf;AACD;AACF;AArDH;AAAA;AAAA,qCAuDe,SAvDf,EAuDgC;AAC5B,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,eAAd,CAAZ;AACA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,WAArB,EAAkC,IAAI,CAAC,SAAL,CAAe,SAAf,CAAlC,CAAd;AAEA,iBAAO,KAAK,IAAL,CAAU,KAAV,CAAsB,GAAtB,EAA2B,IAA3B,EAAiC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAjC,CAAP;AACD;AA5DH;AAAA;AAAA,kCA8DY,SA9DZ,EA8D6B;AACzB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,YAAd,CAAZ;AACA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,WAArB,EAAkC,IAAI,CAAC,SAAL,CAAe,SAAf,CAAlC,CAAd;AAEA,iBAAO,KAAK,IAAL,CAAU,KAAV,CAAsB,GAAtB,EAA2B,IAA3B,EAAiC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAjC,CAAP;AACD;AAnEH;AAAA;AAAA,qCAqEe,OArEf,EAqEkC;AAC9B,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,SAAd,CAAZ;AAEA,iBAAO,KAAK,IAAL,CAAU,KAAV,CAAsB,GAAtB,EAA2B,OAA3B,CAAP;AACD;AAzEH;;AAAA;AAAA,OAAA;;;;cAG4B,iDAAA,CAAA,YAAA;;;;AAHf,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH3B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;ACRb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,qBAAb;AAAA;AAAA;AASE,qCAAoB,eAApB,EACoB,mBADpB,EAEoB,cAFpB,EAEkD;AAAA;;AAF9B,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,mBAAA,GAAA,mBAAA;AACA,aAAA,cAAA,GAAA,cAAA;AATV,aAAA,OAAA,GAAU,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAV;AAEF,aAAA,cAAA,GAA6B,IAAI,8CAAA,CAAA,YAAA,CAAJ,EAA7B;AACA,aAAA,YAAA,GAA0B,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAA1B;AACA,aAAA,YAAA,GAA0B,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAA1B;AACE,aAAA,oBAAA,GAAuB,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAvB;AAMT;;AAbH;AAAA;AAAA,mCAeU;AAAA;;AACN,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,cAAL,CAAoB,MAApB,CAA2B,SAA3B,CAAqC,UAAA,MAAM,EAAG;AAC5C,YAAA,OAAI,CAAC,eAAL,CAAqB,GAArB,CAAyB,MAAM,CAAC,EAAhC,EAAoC,SAApC,CACE,UAAA,OAAO,EAAG;AACR,cAAA,OAAI,CAAC,cAAL,GAAsB,OAAtB;;AACA,cAAA,OAAI,CAAC,mBAAL,CAAyB,IAAzB,GAAgC,SAAhC,CACE,UAAA,GAAG,EAAG;AACJ,gBAAA,OAAI,CAAC,YAAL,GAAoB,GAApB;;AACA,gBAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;AACD,eAJH,EAKE,UAAA,GAAG,EAAG;AACJ,gBAAA,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B;AACD,eAPH;AASD,aAZH,EAaE,UAAA,GAAG;AAAA,qBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,aAbL;AAeD,WAhBD;AAiBD;AAlCH;AAAA;AAAA,+BAoCM;AACF,UAAA,OAAO,CAAC,GAAR,CAAY,KAAK,eAAjB;AACD;AAtCH;AAAA;AAAA,0CAwCiB;AACb,eAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB;AACD;AA1CH;AAAA;AAAA,0CA4CoB,KA5CpB,EA4C8B;AAC1B,eAAK,cAAL,CAAoB,aAApB,GAAoC,QAAQ,CAAC,KAAK,CAAC,MAAN,CAAa,KAAd,EAAqB,EAArB,CAA5C;AACD;AA9CH;AAAA;AAAA,uCAgDc;AAAA;;AACV,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,eAAL,CAAqB,YAArB,CAAkC,KAAK,cAAvC,EAAuD,SAAvD,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB,GADI,CAEJ;;AACA;;;;AAGD,WAPH,EASE,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,WATL;AAWD;AA7DH;;AAAA;AAAA,OAAA;;;;cASuC,uDAAA,CAAA,iBAAA;;cACI,yEAAA,CAAA,qBAAA;;cACL,4CAAA,CAAA,gBAAA;;;;AAVX,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAxB,MAAA,CAAA,0CAAA,CAAA,OAAA,CAAA,CAAA,CAAM,gBAAN,CAAwB,CAAA,E,+BAAA,E,iBAAA,E,KAA4B,CAA5B;AACf,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,+BAAA,E,SAAA,E,KAAsC,CAAtC;AAKA,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,+BAAA,E,sBAAA,E,KAAsD,CAAtD;AAPC,IAAA,qBAAqB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALjC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,mBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,sHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKiC,CAAA,EAArB,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qOAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaf,QAAa,oBAAb;AAAA;AAAA;AAME,oCACU,eADV,EAEU,mBAFV,EAGU,MAHV,EAGwB;AAAA;;AAFd,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,mBAAA,GAAA,mBAAA;AACA,aAAA,MAAA,GAAA,MAAA;AARV,aAAA,OAAA,GAAsB,IAAI,8CAAA,CAAA,YAAA,CAAJ,EAAtB;AAEA,aAAA,YAAA,GAAe,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAf;AAQC;;AAXH;AAAA;AAAA,mCAaU;AAAA;;AACN,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,mBAAL,CAAyB,IAAzB,GAAgC,SAAhC,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,YAAL,GAAoB,GAApB;AACD,WAHH,EAIE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B;AACD,WANH;AAQD;AAvBH;AAAA;AAAA,oCAyBW;AACP,cAAI,KAAK,OAAL,CAAa,IAAb,IAAqB,IAArB,IAA6B,KAAK,OAAL,CAAa,KAAb,IAAsB,IAAnD,IAA2D,KAAK,OAAL,CAAa,UAAb,IAA2B,IAAtF,IAA8F,KAAK,OAAL,CAAa,KAAb,IAAsB,CAAxH,EAA2H;AACzH,mBAAO,KAAP;AACD;;AACD,iBAAO,IAAP;AACD;AA9BH;AAAA;AAAA,0CAgCoB,KAhCpB,EAgC8B;AAC1B,eAAK,OAAL,CAAa,aAAb,GAA6B,QAAQ,CAAC,KAAK,CAAC,MAAN,CAAa,KAAd,EAAqB,EAArB,CAArC;AACD;AAlCH;AAAA;AAAA,oCAoCW;AAAA;;AACP,cAAI,KAAK,OAAL,CAAa,EAAjB,EAAqB;AACnB,YAAA,OAAO,CAAC,GAAR,CAAY,4CAAZ;AACA;AACD;;AACD,cAAI,CAAC,KAAK,SAAL,EAAL,EAAuB;AACrB,iBAAK,YAAL,CAAkB,QAAlB,CAA2B,yDAA3B;AACD,WAFD,MAEO;AACL,iBAAK,YAAL,CAAkB,UAAlB;AACA,iBAAK,eAAL,CAAqB,GAArB,CAAyB,KAAK,OAA9B,EAAuC,SAAvC,CACE,UAAA,GAAG,EAAG;AACJ,cAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;;AACA,cAAA,OAAI,CAAC,MAAL,CAAY,GAAZ;AACD,aAJH,EAKE,UAAA,GAAG,EAAG;AACJ,cAAA,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,4BAA3B;;AACA,cAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,aARH;AAUD;AACF;AAxDH;AAAA;AAAA,+BA0DiB,eA1DjB,EA0D4C;AACxC,eAAK,QAAL,GAAgB,IAAhB;AACA,eAAK,OAAL,GAAe,eAAf;AACA,UAAA,UAAU,CAAC,UAAC,MAAD,EAAmB;AAC5B,YAAA,MAAM,CAAC,QAAP,CAAgB,CAAC,aAAD,CAAhB;AACD,WAFS,EAEP,IAFO,EAED,KAAK,MAFJ,CAAV;AAGD;AAhEH;;AAAA;AAAA,OAAA;;;;cAO6B,uDAAA,CAAA,iBAAA;;cACI,yEAAA,CAAA,qBAAA;;cACb,4CAAA,CAAA,QAAA;;;;AATP,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALhC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,kBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oHAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKgC,CAAA,EAApB,oBAAoB,CAApB;;;;;;;;;;;;;;;;ACbb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkBf,QAAa,iBAAb;AAAA;AAAA;AAgBE,iCAAoB,cAApB,EACoB,mBADpB,EAEoB,mBAFpB,EAGoB,YAHpB,EAIoB,cAJpB,EAKoB,MALpB,EAKkC;AAAA;;AALd,aAAA,cAAA,GAAA,cAAA;AACA,aAAA,mBAAA,GAAA,mBAAA;AACA,aAAA,mBAAA,GAAA,mBAAA;AACA,aAAA,YAAA,GAAA,YAAA;AACA,aAAA,cAAA,GAAA,cAAA;AACA,aAAA,MAAA,GAAA,MAAA;AApBpB,aAAA,YAAA,GAAe,CAAf;AAGQ,aAAA,mBAAA,GAAsB,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAtB;AACA,aAAA,gBAAA,GAAmB,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAnB;AACA,aAAA,wBAAA,GAA2B,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAA3B;AACA,aAAA,QAAA,GAAyB,EAAzB;AACA,aAAA,aAAA,GAA8B,EAA9B;AACA,aAAA,KAAA,GAAkB,EAAlB;AACA,aAAA,iBAAA,GAAoB,KAApB;AAEA,aAAA,WAAA,GAAc,CAAd;AAWP;;AAvBH;AAAA;AAAA,mCAyBU;AACN,eAAK,iBAAL,GAAyB,KAAzB;AACA,eAAK,OAAL;AACD;AA5BH;AAAA;AAAA,kCA8BS;AAAA;;AACL,eAAK,gBAAL,CAAsB,UAAtB;AACA,eAAK,mBAAL,CAAyB,UAAzB;AACA,eAAK,cAAL,CAAoB,MAApB,CAA2B,SAA3B,CACE,UAAA,MAAM,EAAG;AACP,YAAA,OAAI,CAAC,mBAAL,CAAyB,GAAzB,CAA6B,MAAM,CAAC,SAApC,EAA+C,SAA/C,CACE,UAAA,WAAW,EAAG;AACZ,cAAA,OAAI,CAAC,WAAL,GAAmB,WAAnB;;AACA,cAAA,OAAI,CAAC,mBAAL,CAAyB,QAAzB,CAAkC,IAAI,CAAC,SAAL,CAAe,OAAI,CAAC,WAAL,CAAiB,EAAhC,CAAlC,EAAuE,CAAC,OAAI,CAAC,iBAA7E,EAAgG,SAAhG,CACE,UAAA,KAAK,EAAG;AACN,gBAAA,OAAI,CAAC,SAAL,CAAe,KAAf;;AACA,gBAAA,OAAI,CAAC,QAAL,CAAc,CAAd;;AACA,gBAAA,OAAI,CAAC,gBAAL,CAAsB,UAAtB;AACD,eALH,EAME,UAAA,GAAG;AAAA,uBAAI,OAAI,CAAC,gBAAL,CAAsB,QAAtB,CAA+B,GAA/B,CAAJ;AAAA,eANL;AAQD,aAXH,EAYE,UAAA,GAAG;AAAA,qBAAI,OAAI,CAAC,gBAAL,CAAsB,QAAtB,CAA+B,GAA/B,CAAJ;AAAA,aAZL;AAcD,WAhBH,EAiBE,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,gBAAL,CAAsB,QAAtB,CAA+B,GAA/B,CAAJ;AAAA,WAjBL;AAmBD;AApDH;AAAA;AAAA,kDAsDyB;AACrB,eAAK,iBAAL,GAAyB,CAAC,KAAK,iBAA/B;AACA,eAAK,OAAL;AACD;AAzDH;AAAA;AAAA,qCA2DuB,UA3DvB,EA2D2C,KA3D3C,EA2DwD;AACpD,iBAAO,KAAK,cAAL,CAAoB,IAApB,CACL,IAAI,CAAC,SAAL,CAAe,UAAf,CADK,EAEL,IAAI,CAAC,SAAL,CAAe,KAAf,CAFK,EAGL,IAAI,CAAC,SAAL,CAAe,KAAK,WAAL,CAAiB,EAAhC,CAHK,EAGgC,CAAC,KAAK,iBAHtC,CAAP;AAID;AAhEH;AAAA;AAAA,mCAkEU;AAAA;;AACN,cAAM,KAAK,GAAI,KAAK,WAAN,GAAqB,KAAK,YAAxC;AACA,eAAK,wBAAL,CAA8B,UAA9B;AACA,eAAK,YAAL,CAAkB,KAAlB,EAAyB,KAAK,YAA9B,EAA4C,SAA5C,CACE,UAAA,QAAQ,EAAG;AAAA;AAAA;AAAA;;AAAA;AACT,mCAAsB,QAAtB,8HAAgC;AAAA,oBAArB,OAAqB;;AAC9B,gBAAA,OAAI,CAAC,QAAL,CAAc,IAAd,CAAmB,OAAnB;AACD;AAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIT,YAAA,OAAI,CAAC,WAAL;;AACA,YAAA,OAAI,CAAC,wBAAL,CAA8B,UAA9B;AACD,WAPH;AASD;AA9EH;AAAA;AAAA,iCAgFW,IAhFX,EAgFuB;AAAA;;AACnB,eAAK,WAAL,GAAmB,IAAnB;AACA,eAAK,QAAL,GAAgB,EAAhB;AACA,cAAM,KAAK,GAAG,CAAC,IAAI,GAAG,CAAR,IAAa,KAAK,YAAhC;AACA,eAAK,mBAAL,CAAyB,UAAzB;AACA,eAAK,YAAL,CAAkB,KAAlB,EAAyB,KAAK,YAA9B,EAA4C,SAA5C,CACE,UAAA,QAAQ,EAAG;AACT,YAAA,OAAI,CAAC,QAAL,GAAgB,QAAhB;;AACA,YAAA,OAAI,CAAC,mBAAL,CAAyB,UAAzB;AACD,WAJH;AAMD;AA3FH;AAAA;AAAA,kCA6FY,UA7FZ,EA6F8B;AAC1B,eAAK,KAAL,GAAa,EAAb;;AACA,eAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,UAAU,GAAG,KAAK,YAAtC,EAAoD,CAAC,EAArD,EAAyD;AACvD,iBAAK,KAAL,CAAW,IAAX,CAAgB,CAAC,GAAG,CAApB;AACD;AACF;AAlGH;AAAA;AAAA,qCAoGe,SApGf,EAoGgC;AAC5B,eAAK,cAAL,GAAsB,KAAK,QAAL,CAAc,IAAd,CAAmB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,SAAb;AAAA,WAApB,CAAtB;;AACA,cAAI,KAAK,cAAL,IAAuB,IAA3B,EAAiC;AAC/B,iBAAK,cAAL,GAAsB,KAAK,aAAL,CAAmB,IAAnB,CAAwB,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,EAAF,KAAS,SAAb;AAAA,aAAzB,CAAtB;AACD;;AACD,eAAK,WAAL,GAAmB,CAAnB;AACD;AA1GH;AAAA;AAAA,oCA4GW;AACP,eAAK,mBAAL,CAAyB,OAAzB,CAAiC,KAAK,cAAL,CAAoB,EAArD,EAAyD,KAAK,WAA9D;AACD;AA9GH;AAAA;AAAA,8CAgHwB,GAhHxB,EAgHmC;AAC/B,cAAI,SAAJ;AACA,cAAI,OAAJ;;AACA,cAAI,KAAK,QAAL,CAAc,SAAd,CAAwB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,GAAb;AAAA,WAAzB,IAA6C,CAAjD,EAAoD;AAClD,YAAA,SAAS,GAAG,KAAK,aAAjB;AACA,YAAA,OAAO,GAAG,KAAK,QAAf;AACD,WAHD,MAGO;AACL,YAAA,SAAS,GAAG,KAAK,QAAjB;AACA,YAAA,OAAO,GAAG,KAAK,aAAf;AACD;;AACD,cAAM,WAAW,GAAe,SAAS,CAAC,IAAV,CAAe,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,GAAb;AAAA,WAAhB,CAAhC;AACA,UAAA,WAAW,CAAC,OAAZ,GAAsB,CAAC,WAAW,CAAC,OAAnC;AACA,UAAA,SAAS,CAAC,MAAV,CAAiB,SAAS,CAAC,SAAV,CAAoB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,GAAb;AAAA,WAArB,CAAjB,EAAyD,CAAzD;AACA,UAAA,OAAO,CAAC,IAAR,CAAa,WAAb,EAb+B,CAc/B;;AACA,eAAK,QAAL,CAAc,KAAK,WAAnB;AACD;AAhIH;AAAA;AAAA,wCAkIe;AAAA;;AACX,eAAK,cAAL,CAAoB,YAApB,CAAiC,KAAK,cAAL,CAAoB,EAArD,EAAyD,SAAzD,CACE,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,qBAAL,CAA2B,OAAI,CAAC,cAAL,CAAoB,EAA/C,CAAJ;AAAA,WADL,EAEE,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,mBAAL,CAAyB,QAAzB,CAAkC,GAAlC,CAAJ;AAAA,WAFL;AAID;AAvIH;AAAA;AAAA,yCAyIgB;AAAA;;AACZ,eAAK,cAAL,CAAoB,SAApB,CAA8B,KAAK,cAAL,CAAoB,EAAlD,EAAsD,SAAtD,CACE,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,qBAAL,CAA2B,OAAI,CAAC,cAAL,CAAoB,EAA/C,CAAJ;AAAA,WADL,EAEE,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,mBAAL,CAAyB,QAAzB,CAAkC,GAAlC,CAAJ;AAAA,WAFL;AAID;AA9IH;AAAA;AAAA,qCAgJe,SAhJf,EAgJgC;AAC5B,eAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,gBAAD,EAAmB,SAAnB,CAArB;AACD;AAlJH;AAAA;AAAA,wCAoJe;AACX,cAAI,KAAK,WAAL,GAAmB,CAAnB,IAAwB,KAAK,WAAL,IAAoB,IAAhD,EAAsD;AACpD,iBAAK,WAAL,GAAmB,CAAnB;AACD;;AACD,eAAK,UAAL,GAAkB,KAAK,cAAL,CAAoB,aAApB,GAAoC,KAAK,WAA3D;AACD;AAzJH;;AAAA;AAAA,OAAA;;;;cAgBsC,uDAAA,CAAA,iBAAA;;cACK,yEAAA,CAAA,qBAAA;;cACA,qEAAA,CAAA,qBAAA;;cACP,kEAAA,CAAA,uBAAA;;cACE,4CAAA,CAAA,gBAAA;;cACR,4CAAA,CAAA,QAAA;;;;AArBjB,IAAA,iBAAiB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL7B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4GAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK6B,CAAA,EAAjB,iBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPb,QAAa,aAAb;AAAA;AAAA;AAGE,6BAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAFZ,aAAA,QAAA,GAAW,kCAAX;AAGP;;AAJH;AAAA;AAAA,4BAMa,OANb,EAM4B;AACxB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,MAAd,CAAZ;AACA,cAAM,UAAU,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,SAArB,EAAgC,OAAhC,CAAnB;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAwB,GAAxB,EAA6B;AAAC,YAAA,MAAM,EAAE;AAAT,WAA7B,CAAP;AACD;AAVH;AAAA;AAAA,yCAYuB;AACnB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,YAAd,CAAZ;AACA,cAAM,UAAU,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,UAArB,EAAiC,cAAc,CAAC,OAAf,CAAuB,UAAvB,CAAjC,CAAnB;AACA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAsB,GAAtB,EAA2B;AAAC,YAAA,MAAM,EAAE;AAAT,WAA3B,CAAP;AACD;AAhBH;AAAA;AAAA,oCAkBkB;AACd,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,YAAd,CAAZ;AACA,cAAM,KAAK,GAAe,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,UAArB,EAAiC,cAAc,CAAC,OAAf,CAAuB,UAAvB,CAAjC,CAA1B;AAEA,eAAK,IAAL,CAAU,MAAV,CAAiB,GAAjB,EAAsB;AAAC,YAAA,MAAM,EAAE;AAAT,WAAtB,EAAuC,SAAvC;AACD;AAvBH;AAAA;AAAA,yCAyBuB;AACnB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,iBAAd,CAAZ;AACA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,UAArB,EAAiC,cAAc,CAAC,OAAf,CAAuB,UAAvB,CAAjC,CAAd;AAEA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA0B,GAA1B,EAA+B;AAAC,YAAA,MAAM,EAAE;AAAT,WAA/B,CAAP;AACD;AA9BH;AAAA;AAAA,sCAgCuB,OAhCvB,EAgCsC;AAClC,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,YAAd,CAAZ;AAEA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,SAArB,EAAgC,OAAhC,CAAd;AAEA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAAkC,GAAlC,EAAuC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAvC,CAAP;AACD;AAtCH;AAAA;AAAA,uCAwCqB;AACjB,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,iBAAd,CAAZ;AAEA,iBAAO,KAAK,IAAL,CAAU,GAAV,CAA0B,GAA1B,CAAP;AACD;AA5CH;AAAA;AAAA,kCA8CmB,QA9CnB,EA8C6C;AACzC,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,YAAd,CAAZ;AACA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,UAArB,EAAiC,cAAc,CAAC,OAAf,CAAuB,UAAvB,CAAjC,CAAd;AAEA,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAuB,GAAvB,EAA4B,QAA5B,EAAsC;AAAC,YAAA,MAAM,EAAE;AAAT,WAAtC,CAAP;AACD;AAnDH;AAAA;AAAA,6CAqD8B,SArD9B,EAqDiD,SArDjD,EAqDkE;AAC9D,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,uBAAd,CAAZ;AACA,cAAM,KAAK,GAAe,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,UAArB,EAAiC,cAAc,CAAC,OAAf,CAAuB,UAAvB,CAAjC,EACvB,MADuB,CAChB,WADgB,EACH,SADG,EAEvB,MAFuB,CAEhB,WAFgB,EAEH,SAFG,CAA1B;AAIA,eAAK,IAAL,CAAU,KAAV,CAAgB,GAAhB,EAAqB,IAArB,EAA2B;AAAC,YAAA,MAAM,EAAE;AAAT,WAA3B,EAA4C,SAA5C;AACD;AA5DH;AAAA;AAAA,kCA8DmB,OA9DnB,EA8DuC;AACnC,cAAM,GAAG,GAAG,KAAK,QAAL,CAAc,QAAd,CAAZ;AACA,cAAM,IAAI,GAAG,OAAb;AACA,cAAM,KAAK,GAAG,IAAI,iDAAA,CAAA,YAAA,CAAJ,GAAiB,GAAjB,CAAqB,UAArB,EAAiC,cAAc,CAAC,OAAf,CAAuB,UAAvB,CAAjC,CAAd;AAEA,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAyB,GAAzB,EAA8B,IAA9B,EAAoC;AAAC,YAAA,MAAM,EAAE;AAAT,WAApC,CAAP;AACD;AApEH;AAAA;AAAA,iCAsEmB,WAtEnB,EAsEsC;AAClC,iBAAO,KAAK,QAAL,GAAgB,WAAvB;AACD;AAxEH;;AAAA;AAAA,OAAA;;;;cAG4B,iDAAA,CAAA,YAAA;;;;AAHf,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAHzB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAGyB,CAAA,EAAb,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDb,QAAa,mBAAb;AAAA;AAAA;AAKE,mCAAoB,eAApB,EACoB,aADpB,EAEoB,YAFpB,EAEuD;AAAA;;AAFnC,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,YAAA,GAAA,YAAA;AALZ,aAAA,iBAAA,GAAoB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAAoB,KAAK,cAAL,EAApB,CAApB;AACR,aAAA,WAAA,GAAc,KAAK,iBAAL,CAAuB,YAAvB,EAAd;;AAKE,YAAI,KAAK,YAAL,CAAkB,cAAlB,EAAJ,EAAwC;AACtC,eAAK,UAAL;AACD;AACF;;AAXH;AAAA;AAAA,4CAa2B;AACvB,eAAK,iBAAL,CAAuB,IAAvB,CAA4B,KAAK,cAAL,EAA5B;AACD;AAfH;AAAA;AAAA,yCAiBuB;AACnB,cAAM,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,OAAf,CAAuB,MAAvB,CAAX,CAAb;;AACA,cAAI,IAAI,IAAI,IAAZ,EAAkB;AAChB,mBAAO,CAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAI,CAAC,MAAZ;AACD;AACF;AAGD;;;;;;;;;;;AA3BF;AAAA;AAAA,wCAsCsB;AAClB,iBAAO,KAAK,aAAL,CAAmB,aAAnB,CAAiC,cAAc,CAAC,OAAf,CAAuB,QAAvB,CAAjC,CAAP;AACD;AAxCH;AAAA;AAAA,6CA0C2B;AACvB,iBAAO,IAAI,CAAC,KAAL,CAAW,cAAc,CAAC,OAAf,CAAuB,MAAvB,CAAX,CAAP;AACD;AA5CH;AAAA;AAAA,qCA8CmB;AAAA;;AACf,eAAK,aAAL,GAAqB,SAArB,CACE,UAAA,IAAI;AAAA,mBAAI,OAAI,CAAC,QAAL,CAAc,IAAd,CAAJ;AAAA,WADN,EAEE,UAAA,GAAG;AAAA,mBAAI,cAAc,CAAC,UAAf,CAA0B,MAA1B,CAAJ;AAAA,WAFL;AAID;AAnDH;AAAA;AAAA,iCAqDmB,IArDnB,EAqDgD;AAC5C,UAAA,cAAc,CAAC,OAAf,CAAuB,MAAvB,EAA+B,IAAI,CAAC,SAAL,CAAe,IAAf,CAA/B;AACA,eAAK,iBAAL;AACD;AAxDH;AAAA;AAAA,2CA0DyB;AAAA;;AACrB,eAAK,aAAL,CAAmB,cAAnB,GAAoC,SAApC,CACE,UAAA,MAAM,EAAG;AACP,YAAA,cAAc,CAAC,OAAf,CAAuB,QAAvB,EAAiC,MAAM,CAAC,QAAP,CAAgB,EAAhB,CAAjC;;AACA,YAAA,OAAI,CAAC,UAAL;AACD,WAJH;AAMD;AAjEH;AAAA;AAAA,uCAmEqB;AACjB,cAAM,IAAI,GAAG,cAAc,CAAC,OAAf,CAAuB,MAAvB,CAAb;;AACA,cAAI,IAAI,IAAI,IAAR,IAAgB,IAAI,CAAC,KAAL,CAAW,IAAX,EAAiB,MAAjB,KAA4B,CAAhD,EAAmD;AACjD,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;AA1EH;AAAA;AAAA,gCA4EiB,SA5EjB,EA4EoC,MA5EpC,EA4EkD;AAAA;;AAC9C,cAAM,MAAM,GAAG,cAAc,CAAC,OAAf,CAAuB,QAAvB,CAAf;AAEA,cAAM,QAAQ,GAAG,IAAI,oDAAA,CAAA,kBAAA,CAAJ,EAAjB;AACA,UAAA,QAAQ,CAAC,EAAT,GAAc,IAAd;AACA,UAAA,QAAQ,CAAC,MAAT,GAAkB,MAAlB;AACA,UAAA,QAAQ,CAAC,SAAT,GAAqB,SAArB;AACA,UAAA,QAAQ,CAAC,OAAT,GAAmB,QAAQ,CAAC,MAAD,EAAS,EAAT,CAA3B;AACA,UAAA,QAAQ,CAAC,eAAT,GAA2B,IAA3B;AAEA,eAAK,aAAL,CAAmB,SAAnB,CAA6B,QAA7B,EAAuC,SAAvC,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,QAAQ,CAAC,EAAT,GAAc,GAAd;;AACA,YAAA,OAAI,CAAC,iBAAL,CAAuB,QAAvB;;AACA,YAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACD,WALH;AAOD;AA7FH;AAAA;AAAA,0CA+F4B,QA/F5B,EA+FsD;AAClD,cAAM,IAAI,GAAG,KAAK,kBAAL,EAAb;AACA,cAAM,KAAK,GAAG,IAAI,CAAC,SAAL,CAAe,UAAA,EAAE;AAAA,mBAAI,EAAE,CAAC,SAAH,KAAiB,QAAQ,CAAC,SAA9B;AAAA,WAAjB,CAAd;;AACA,cAAI,KAAK,GAAG,CAAZ,EAAe;AACb,YAAA,IAAI,CAAC,IAAL,CAAU,QAAV;AACD,WAFD,MAEO;AACL,YAAA,IAAI,CAAC,KAAD,CAAJ,CAAY,MAAZ,IAAsB,QAAQ,CAAC,MAA/B;AACD;;AACD,UAAA,cAAc,CAAC,OAAf,CAAuB,MAAvB,EAA+B,IAAI,CAAC,SAAL,CAAe,IAAf,CAA/B;AACA,eAAK,iBAAL;AACD;AAzGH;AAAA;AAAA,oCA2GkB;AACd,eAAK,aAAL,CAAmB,SAAnB;AACA,cAAM,IAAI,GAAuB,EAAjC;AACA,UAAA,cAAc,CAAC,OAAf,CAAuB,MAAvB,EAA+B,IAAI,CAAC,SAAL,CAAe,IAAf,CAA/B;AAEA,eAAK,iBAAL;AACD;AAjHH;AAAA;AAAA,yCAmH0B,UAnH1B,EAmH8C,SAnH9C,EAmH+D;AAC3D,cAAM,SAAS,GAAG,QAAQ,CAAC,UAAD,EAAa,EAAb,CAA1B;AACA,cAAM,IAAI,GAAG,KAAK,kBAAL,EAAb;AACA,cAAM,KAAK,GAAG,IAAI,CAAC,SAAL,CAAe,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,SAAF,KAAgB,SAApB;AAAA,WAAhB,CAAd;;AACA,cAAI,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,gBAAI,SAAS,IAAI,CAAjB,EAAoB;AAClB,cAAA,IAAI,CAAC,MAAL,CAAY,KAAZ,EAAmB,CAAnB;AACD,aAFD,MAEO;AACL,cAAA,IAAI,CAAC,KAAD,CAAJ,CAAY,MAAZ,GAAqB,SAArB;AACD;;AACD,YAAA,cAAc,CAAC,OAAf,CAAuB,MAAvB,EAA+B,IAAI,CAAC,SAAL,CAAe,IAAf,CAA/B;AACA,iBAAK,iBAAL;AACA,iBAAK,aAAL,CAAmB,oBAAnB,CAAwC,UAAxC,EAAoD,IAAI,CAAC,SAAL,CAAe,SAAf,CAApD;AACD;AACF;AAjIH;;AAAA;AAAA,OAAA;;;;cAKuC,gEAAA,CAAA,iBAAA;;cACF,4CAAA,CAAA,eAAA;;cACD,kEAAA,CAAA,uBAAA;;;;AAPvB,IAAA,mBAAmB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH/B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG+B,CAAA,EAAnB,mBAAmB,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCPA,a;;;AAAb,+BAAA;AAAA;;AAKU,aAAA,KAAA,GAAQ,CAAR;AAiCT;;;;sCA/BmB;AAChB,eAAK,KAAL,GAAa,aAAa,CAAC,QAA3B;AACD;;;qCAEgB;AACf,eAAK,KAAL,GAAa,aAAa,CAAC,OAA3B;AACD;;;wCAEmB;AAClB,eAAK,KAAL,GAAa,aAAa,CAAC,UAA3B;AACD;;;sCAEiB;AAChB,eAAK,KAAL,GAAa,aAAa,CAAC,QAA3B;AACD;;;qCAEgB;AACf,iBAAO,KAAK,KAAL,KAAe,aAAa,CAAC,QAApC;AACD;;;oCAEe;AACd,iBAAO,KAAK,KAAL,KAAe,aAAa,CAAC,OAApC;AACD;;;uCAEkB;AACjB,iBAAO,KAAK,KAAL,KAAe,aAAa,CAAC,UAApC;AACD;;;qCAEgB;AACf,iBAAO,KAAK,KAAL,KAAe,aAAa,CAAC,QAApC;AACD;;;;;;AApCc,IAAA,aAAA,CAAA,QAAA,GAAW,CAAX;AACA,IAAA,aAAA,CAAA,OAAA,GAAU,CAAV;AACA,IAAA,aAAA,CAAA,UAAA,GAAa,CAAb;AACA,IAAA,aAAA,CAAA,QAAA,GAAW,CAAX;;;;;;;;;;;;;;;;ACPjB,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBf,QAAa,aAAb;AAAA;AAAA;AAaE,6BAAoB,mBAApB,EACoB,eADpB,EAEoB,aAFpB,EAGoB,MAHpB,EAGkC;AAAA;;AAHd,aAAA,mBAAA,GAAA,mBAAA;AACA,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,MAAA,GAAA,MAAA;AAfpB,aAAA,YAAA,GAAe,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAf;AAKA,aAAA,QAAA,GAAyB,EAAzB;AACA,aAAA,cAAA,GAAgC,IAAI,2CAAA,CAAA,eAAA,CAAJ,EAAhC;AAUC;;AAjBH;AAAA;AAAA,mCAmBU;AAAA;;AACN,cAAI,KAAK,mBAAL,CAAyB,YAAzB,EAAJ,EAA6C;AAC3C,iBAAK,YAAL,CAAkB,UAAlB;AACA,iBAAK,mBAAL,CAAyB,UAAzB;AACA,iBAAK,UAAL,GAAkB,CAAlB;AACA,iBAAK,SAAL,GAAiB,IAAI,+CAAA,CAAA,aAAA,CAAJ,EAAjB;AACA,iBAAK,cAAL,CAAoB,WAApB;AACA,iBAAK,UAAL,GAAkB,KAAlB;AACA,iBAAK,IAAL,GAAY,KAAK,mBAAL,CAAyB,kBAAzB,EAAZ;AACA,iBAAK,eAAL,CAAqB,OAArB,CAA6B,IAA7B,EAAmC,SAAnC,CACE,UAAA,GAAG,EAAG;AACJ,cAAA,OAAI,CAAC,QAAL,GAAgB,GAAhB;;AACA,cAAA,OAAI,CAAC,gBAAL;;AACA,cAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;AACD,aALH,EAME,UAAA,GAAG;AAAA,qBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,aANL;AAQD;AACF;AArCH;AAAA;AAAA,oCAuCc,SAvCd,EAuCuB;AACnB,eAAK,aAAL,GAAqB,KAAK,QAAL,CAAc,IAAd,CAAmB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,SAAb;AAAA,WAApB,CAArB;AACD;AAzCH;AAAA;AAAA,2CA2CkB;AAAA;;AACd,eAAK,UAAL,GAAkB,CAAlB;AACA,eAAK,IAAL,CAAU,OAAV,CAAkB,UAAA,EAAE;AAAA,mBAClB,OAAI,CAAC,UAAL,IAAmB,OAAI,CAAC,QAAL,CACjB,OAAI,CAAC,QAAL,CAAc,SAAd,CAAwB,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,EAAF,KAAS,EAAE,CAAC,SAAhB;AAAA,aAAzB,CADiB,EAEf,aAFe,GAEC,EAAE,CAAC,MAHL;AAAA,WAApB;AAKD;AAlDH;AAAA;AAAA,sCAoDa;AAAA;;AACT,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,aAAL,CAAmB,SAAnB,CAA6B,KAAK,SAAlC,EAA6C,SAA7C,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,WAAL,GAAmB,GAAG,CAAC,EAAvB;;AACA,YAAA,OAAI,CAAC,mBAAL,CAAyB,SAAzB;;AACA,YAAA,OAAI,CAAC,mBAAL,CAAyB,gBAAzB;;AACA,YAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;;AACA,YAAA,OAAI,CAAC,cAAL,CAAoB,WAApB;;AACA,YAAA,OAAI,CAAC,YAAL;AACD,WARH,EASE,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,WATL;AAWD;AAjEH;AAAA;AAAA,wCAmEe;AAAA;;AACX,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,aAAL,CAAmB,aAAnB,CAAiC,KAAK,WAAL,CAAiB,QAAjB,CAA0B,EAA1B,CAAjC,EAAgE,SAAhE,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,IAAL,GAAY,GAAZ;;AACA,YAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;;AACA,YAAA,OAAI,CAAC,aAAL;AACD,WALH,EAME,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,WANL;AAQD;AA7EH;AAAA;AAAA,oCA+Ec,SA/Ed,EA+E+B;AAC3B,eAAK,cAAL,GAAsB,KAAK,QAAL,CAAc,IAAd,CAAmB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,SAAb;AAAA,WAApB,CAAtB;AACA,eAAK,aAAL,GAAqB,KAAK,IAAL,CAAU,IAAV,CAAe,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,SAAF,KAAgB,SAApB;AAAA,WAAhB,EAA+C,MAApE;AACD;AAlFH;AAAA;AAAA,wCAoFe;AACX,cAAI,KAAK,aAAL,GAAqB,CAArB,IAA0B,KAAK,aAAL,IAAsB,IAApD,EAA0D;AACxD,iBAAK,aAAL,GAAqB,CAArB;AACD;AACF;AAxFH;AAAA;AAAA,6CA0FoB;AAChB,eAAK,mBAAL,CAAyB,gBAAzB,CAA0C,IAAI,CAAC,SAAL,CAAe,KAAK,cAAL,CAAoB,EAAnC,CAA1C,EAAkF,KAAK,aAAvF;AACA,eAAK,IAAL,GAAY,KAAK,mBAAL,CAAyB,kBAAzB,EAAZ;AACA,eAAK,gBAAL;AACD;AA9FH;AAAA;AAAA,qCAgGY;AACR,eAAK,mBAAL,CAAyB,SAAzB;AACD;AAlGH;AAAA;AAAA,uCAoGc;AACV,UAAA,UAAU,CAAC,UAAC,MAAD,EAAmB;AAC1B,YAAA,MAAM,CAAC,QAAP,CAAgB,CAAC,UAAD,CAAhB;AACD,WAFO,EAEL,IAFK,EAEC,KAAK,MAFN,CAAV;AAID;AAzGH;;AAAA;AAAA,OAAA;;;;cAa2C,4DAAA,CAAA,qBAAA;;cACJ,gEAAA,CAAA,iBAAA;;cACF,qDAAA,CAAA,eAAA;;cACP,4CAAA,CAAA,QAAA;;;;AAhBjB,IAAA,aAAa,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALzB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,UADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAKyB,CAAA,EAAb,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCjBA,c;;;AAAb,gCAAA;AAAA;;AAGU,aAAA,KAAA,GAAQ,CAAR;AAyBT;;;;qCAvBkB;AACf,eAAK,KAAL,GAAa,cAAc,CAAC,OAA5B;AACD;;;qCAEgB;AACf,eAAK,KAAL,GAAa,cAAc,CAAC,OAA5B;AACD;;;oCAEe;AACd,cAAI,KAAK,KAAL,KAAe,cAAc,CAAC,OAAlC,EAA2C;AACzC,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,mBAAO,KAAP;AACD;AACF;;;oCAEe;AACd,cAAI,KAAK,KAAL,KAAe,cAAc,CAAC,OAAlC,EAA2C;AACzC,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,mBAAO,KAAP;AACD;AACF;;;;;;AA1Bc,IAAA,cAAA,CAAA,OAAA,GAAU,CAAV;AACA,IAAA,cAAA,CAAA,OAAA,GAAU,CAAV;;;;;;;;;;;;;;;;ACFjB,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,qNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkBf,QAAa,eAAb;AAAA;AAAA;AAWE,+BAAoB,aAApB,EACoB,eADpB,EAEoB,YAFpB,EAGoB,eAHpB,EAGoD;AAAA;;AAHhC,aAAA,aAAA,GAAA,aAAA;AACA,aAAA,eAAA,GAAA,eAAA;AACA,aAAA,YAAA,GAAA,YAAA;AACA,aAAA,eAAA,GAAA,eAAA;AAbpB,aAAA,UAAA,GAA0B,EAA1B;AACA,aAAA,eAAA,GAA+B,EAA/B;AACA,aAAA,SAAA,GAA2B,EAA3B;AAEA,aAAA,YAAA,GAA0B,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAA1B;AACA,aAAA,cAAA,GAAiC,IAAI,4CAAA,CAAA,gBAAA,CAAJ,EAAjC;AACA,aAAA,QAAA,GAAyB,EAAzB;AAQC;;AAfH;AAAA;AAAA,mCAiBU;AAAA;;AACN,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,cAAL,CAAoB,UAApB;AACA,eAAK,aAAL,CAAmB,cAAnB,GAAoC,SAApC,CACE,UAAA,MAAM,EAAG;AACP,gBAAI,cAAc,GAAG,CAArB;AACA,YAAA,MAAM,CAAC,OAAP,CAAe,UAAA,CAAC,EAAG;AACf,kBAAM,IAAI,GAAG,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAb;AACA,cAAA,IAAI,CAAC,KAAL,GAAa,CAAb;;AACA,cAAA,OAAI,CAAC,aAAL,CAAmB,aAAnB,CAAiC,CAAC,CAAC,EAAF,CAAK,QAAL,CAAc,EAAd,CAAjC,EAAoD,SAApD,CACE,UAAA,GAAG,EAAG;AACJ,gBAAA,cAAc;AACd,gBAAA,IAAI,CAAC,KAAL,GAAa,GAAb;;AACA,gBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,IAArB;;AACA,oBAAI,cAAc,KAAK,MAAM,CAAC,MAA9B,EAAsC;AACpC,kBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,UAAC,GAAD,EAAM,GAAN;AAAA,2BAAc,GAAG,CAAC,KAAJ,CAAU,EAAV,GAAe,GAAG,CAAC,KAAJ,CAAU,EAAvC;AAAA,mBAArB;;AACA,kBAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;AACD;AACF,eATH,EAUE,UAAA,GAAG;AAAA,uBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,eAVL;AAYD,aAfH;AAgBD,WAnBH,EAoBE,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,WApBL;AAuBA,eAAK,YAAL,CAAkB,UAAlB;AACA,eAAK,eAAL,CAAqB,OAArB,CAA6B,IAA7B,EAAmC,SAAnC,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,QAAL,GAAgB,GAAhB;;AACA,YAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;AACD,WAJH,EAKE,UAAA,GAAG;AAAA,mBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,WALL;;AAQA,cAAI,KAAK,YAAL,CAAkB,WAAlB,EAAJ,EAAqC;AACnC,iBAAK,YAAL,CAAkB,UAAlB;AACA,iBAAK,aAAL,CAAmB,YAAnB,GAAkC,SAAlC,CACE,UAAA,MAAM,EAAG;AACP,kBAAI,cAAc,GAAG,CAArB;AACA,cAAA,MAAM,CAAC,OAAP,CAAe,UAAA,CAAC,EAAG;AACjB,oBAAM,IAAI,GAAG,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAb;AACA,gBAAA,IAAI,CAAC,KAAL,GAAa,CAAb;;AACA,gBAAA,OAAI,CAAC,aAAL,CAAmB,aAAnB,CAAiC,CAAC,CAAC,EAAF,CAAK,QAAL,CAAc,EAAd,CAAjC,EAAoD,SAApD,CACE,UAAA,GAAG,EAAG;AACJ,kBAAA,cAAc;AACd,kBAAA,IAAI,CAAC,KAAL,GAAa,GAAb;;AACA,kBAAA,OAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B,IAA1B;;AACA,sBAAI,cAAc,KAAK,MAAM,CAAC,MAA9B,EAAsC;AACpC,oBAAA,OAAI,CAAC,UAAL,CAAgB,IAAhB,CAAqB,UAAC,GAAD,EAAM,GAAN;AAAA,6BAAc,GAAG,CAAC,KAAJ,CAAU,EAAV,GAAe,GAAG,CAAC,KAAJ,CAAU,EAAvC;AAAA,qBAArB;;AACA,oBAAA,OAAI,CAAC,YAAL,CAAkB,UAAlB;AACD;AACF,iBATH,EAUE,UAAA,GAAG;AAAA,yBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,iBAVL;AAYD,eAfD;AAgBD,aAnBH,EAoBE,UAAA,GAAG;AAAA,qBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,aApBL;AAsBA,iBAAK,eAAL,CAAqB,IAArB,GAA4B,SAA5B,CACE,UAAA,GAAG;AAAA,qBAAI,OAAI,CAAC,SAAL,GAAiB,GAArB;AAAA,aADL,EAEE,UAAA,GAAG;AAAA,qBAAI,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B,CAAJ;AAAA,aAFL;AAID;AACF;AAjFH;AAAA;AAAA,2CAmF6B,cAnF7B,EAmF+D;AAC3D,cAAI,UAAU,GAAG,CAAjB;AACA,UAAA,cAAc,CAAC,OAAf,CAAuB,UAAA,EAAE;AAAA,mBAAI,UAAU,IAAI,EAAE,CAAC,eAAH,GAAqB,EAAE,CAAC,MAA1C;AAAA,WAAzB;AACA,iBAAO,UAAP;AACD;AAvFH;AAAA;AAAA,wCAyFyB,OAzFzB,EAyF6C;AACzC,iBAAO,OAAO,CAAC,MAAR,GAAiB,IAAjB,GAAwB,OAAO,CAAC,IAAhC,GAAuC,IAAvC,GAA8C,OAAO,CAAC,GAA7D;AACD;AA3FH;AAAA;AAAA,iCA6FmB,OA7FnB,EA6FkC;AAAA;;AAC9B,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,cAAL,CAAoB,UAApB;;AACA,cAAI,KAAK,YAAL,CAAkB,WAAlB,EAAJ,EAAqC;AACnC,iBAAK,eAAL,GAAuB,KAAK,SAAL,CAAe,IAAf,CACrB,UAAA,CAAC;AAAA,qBAAI,CAAC,CAAC,EAAF,KAAS,OAAI,CAAC,eAAL,CAAqB,IAArB,CACZ,UAAA,EAAE;AAAA,uBAAI,EAAE,CAAC,KAAH,CAAS,EAAT,KAAgB,OAAI,CAAC,OAAzB;AAAA,eADU,EAEZ,KAFY,CAEN,UAFP;AAAA,aADoB,CAAvB;AAID;AACF;AAtGH;AAAA;AAAA,0CAwGyB;AAAA;;AACrB,cAAI,KAAK,UAAL,CAAgB,SAAhB,CAA0B,UAAA,EAAE;AAAA,mBAAI,EAAE,CAAC,KAAH,CAAS,EAAT,KAAgB,OAAI,CAAC,OAAzB;AAAA,WAA5B,IAAgE,CAApE,EAAuE;AACrE,mBAAO,KAAK,eAAL,CAAqB,KAAK,eAAL,CAAqB,SAArB,CAA+B,UAAA,EAAE;AAAA,qBAAI,EAAE,CAAC,KAAH,CAAS,EAAT,KAAgB,OAAI,CAAC,OAAzB;AAAA,aAAjC,CAArB,EAAyF,KAAhG;AACD,WAFD,MAEO;AACL,mBAAO,KAAK,UAAL,CAAgB,KAAK,UAAL,CAAgB,SAAhB,CAA0B,UAAA,EAAE;AAAA,qBAAI,EAAE,CAAC,KAAH,CAAS,EAAT,KAAgB,OAAI,CAAC,OAAzB;AAAA,aAA5B,CAAhB,EAA+E,KAAtF;AACD;AACF;AA9GH;AAAA;AAAA,oCAgHc,SAhHd,EAgHuB;AACnB,eAAK,cAAL,GAAsB,KAAK,QAAL,CAAc,IAAd,CAAmB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,SAAb;AAAA,WAApB,CAAtB;AACD;AAlHH;AAAA;AAAA,uCAoHc;AACV,eAAK,cAAL,CAAoB,UAApB;AACA,eAAK,OAAL,GAAe,IAAf;AACD;AAvHH;AAAA;AAAA,8CAyHwB,UAzHxB,EAyH0C;AACtC,cAAM,QAAQ,GAAgB,KAAK,SAAL,CAAe,IAAf,CAAoB,UAAA,CAAC;AAAA,mBAAI,CAAC,CAAC,EAAF,KAAS,UAAb;AAAA,WAArB,CAA9B;AACA,iBAAO,QAAQ,CAAC,IAAT,GAAgB,GAAhB,GAAsB,QAAQ,CAAC,OAAtC;AACD;AA5HH;;AAAA;AAAA,OAAA;;;;cAWqC,qDAAA,CAAA,eAAA;;cACE,gEAAA,CAAA,iBAAA;;cACH,kEAAA,CAAA,uBAAA;;cACG,iEAAA,CAAA,iBAAA;;;;AAd1B,IAAA,eAAe,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL3B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,wGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK2B,CAAA,EAAf,eAAe,CAAf;;;;;;;;;;;;;;;;AClBb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUf,QAAa,gBAAb;AAAA;AAAA;AAIE,gCAAoB,mBAApB,EAA4D;AAAA;;AAAxC,aAAA,mBAAA,GAAA,mBAAA;AAFZ,aAAA,YAAA,GAAe,IAAI,6CAAA,CAAA,WAAA,CAAJ,EAAf;AAEyD;;AAJnE;AAAA;AAAA,mCAMU;AAAA;;AACN,eAAK,mBAAL,CAAyB,IAAzB,GAAgC,SAAhC,CACE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,YAAL,GAAoB,GAApB;AACD,WAHH,EAIE,UAAA,GAAG,EAAG;AACJ,YAAA,OAAI,CAAC,YAAL,CAAkB,QAAlB,CAA2B,GAA3B;AACD,WANH;AAQD;AAfH;;AAAA;AAAA,OAAA;;;;cAI2C,yEAAA,CAAA,qBAAA;;;;AAJ9B,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL5B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,cADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,mGAAA,CAAA,EAAA,OAFS;;;;AAAA,KAAV,CAK4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCVA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCAA,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCAA,S;;;AAAb,2BAAA;AAAA;;AAIU,aAAA,KAAA,GAAQ,CAAR;AAmCT;;;;qCAhCkB;AACf,eAAK,KAAL,GAAa,SAAS,CAAC,OAAvB;AACD;;;qCAEgB;AACf,eAAK,KAAL,GAAa,SAAS,CAAC,OAAvB;AACD;;;oCAEe;AACd,iBAAO,KAAK,KAAL,KAAe,SAAS,CAAC,OAAhC;AACD;;;oCAEe;AACd,iBAAO,KAAK,KAAL,KAAe,SAAS,CAAC,OAAhC;AACD;;;kCAEa;AACZ,iBAAO,KAAK,KAAL,KAAe,SAAS,CAAC,KAAhC;AACD;;;iCAEe,K,EAAU;AACxB,eAAK,GAAL,GAAW,IAAI,CAAC,SAAL,CAAe,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAX;AACA,eAAK,KAAL,GAAa,SAAS,CAAC,KAAvB;AACD;;;mCAEc;AACb,iBAAO,KAAK,GAAZ;AACD;;;kCAEa;AACZ,eAAK,KAAL,GAAa,CAAb;AACD;;;;;;AArCc,IAAA,SAAA,CAAA,OAAA,GAAU,CAAV;AACA,IAAA,SAAA,CAAA,OAAA,GAAU,CAAV;AACA,IAAA,SAAA,CAAA,KAAA,GAAQ,CAAR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCHJ,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCGA,S;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCHA,gB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCAA,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCAA,U;;;;;;;;;;;;;;;;;;;ACAb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA,C,CAAA;AACA;AACA;;;AAEO,QAAM,WAAW,GAAG;AACzB,MAAA,UAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA,QAAI,sDAAA,CAAA,aAAA,CAAA,CAAY,UAAhB,EAA4B;AAC1B,MAAA,MAAA,CAAA,0CAAA,CAAA,gBAAA,CAAA,CAAA;AACD;;AAED,IAAA,MAAA,CAAA,8DAAA,CAAA,wBAAA,CAAA,CAAA,GAAyB,eAAzB,CAAyC,4CAAA,CAAA,WAAA,CAAzC,EACG,KADH,CACS,UAAA,GAAG;AAAA,aAAI,OAAO,CAAC,KAAR,CAAc,GAAd,CAAJ;AAAA,KADZ","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-header></app-header>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-1\\\"></div>\\n      <app-side-nav></app-side-nav>\\n    <div class=\\\"col-1\\\">\\n    </div>\\n    <div class=\\\"col-8\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n  </div>\\n</div>\\n\\n\"","export default \"<div class=\\\"alert alert-warning\\\">\\n Přihlášení vypršelo\\n</div>\\n\"","export default \"<div *ngIf=\\\"loadingState.isError()\\\" class=\\\"alert alert-danger\\\">{{loadingState.getError().substr(1, loadingState.getError().length-2)}}</div>\\n<div *ngIf=\\\"!(loadingState.isWorking()||loadingState.isSuccess())\\\">\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"loginUsername\\\" class=\\\"form-label\\\">Uživatelské jméno</label>\\n      <input id=\\\"loginUsername\\\" name=\\\"loginUsername\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"username\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"loginPassword\\\" class=\\\"form-label\\\">Heslo</label>\\n      <input id=\\\"loginPassword\\\" name=\\\"loginPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\"/>\\n    </div>\\n    <button type=\\\"button\\\" (click)=checkLogin() class=\\\"btn btn-primary\\\">Přihlásit</button>\\n  </form>\\n</div>\\n<div *ngIf=\\\"loadingState.isWorking()\\\">Přihlašování...</div>\\n<div *ngIf=\\\"loadingState.isSuccess()\\\" class=\\\"alert alert-success\\\">Úspěšně příhlášen</div>\\n\"","export default \"<p>logout works!</p>\\n\"","export default \"<div class=\\\"container\\\">\\n  <h1 class=\\\"text-secondary text-center\\\">Registrovaní zákaznící</h1>\\n  <div *ngIf=\\\"loadingState.isWorking()\\\">\\n    Loading...\\n  </div>\\n  <div *ngIf=\\\"loadingState.isError()\\\">\\n        <pre>\\n          {{loadingState.getError()}}\\n        </pre>\\n  </div>\\n  <div *ngIf=\\\"loadingState.isSuccess()\\\">\\n    <table class=\\\"table table-dark table-hover\\\">\\n      <thead>\\n        <tr>\\n          <th>ID</th>\\n          <th>Uživatelské jméno</th>\\n          <th>Jméno</th>\\n          <th>Příjmení</th>\\n          <th>E-mail</th>\\n          <th>Admin</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let customer of customers\\\" data-toggle=\\\"tooltip\\\" title=\\\"password hash: {{customer.passwordHash}}\\\">\\n          <td>{{customer.id}}</td>\\n          <td>{{customer.username}}</td>\\n          <td>{{customer.name}}</td>\\n          <td>{{customer.surname}}</td>\\n          <td>{{customer.email}}</td>\\n          <td *ngIf=\\\"customer.admin\\\">Ano</td>\\n          <td *ngIf=\\\"!customer.admin\\\">Ne</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\"","export default \"<div *ngIf=\\\"!(loadingState.isWorking()||loadingState.isSuccess())\\\">\\n  <form (ngSubmit)=\\\"insertNew()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"registerName\\\" class=\\\"form-label\\\">Jméno</label>\\n      <input id=\\\"registerName\\\" name=\\\"registerName\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customerNew.name\\\" required/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"surname\\\" class=\\\"form-label\\\">Příjmení</label>\\n      <input id=\\\"surname\\\" name=\\\"surname\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customerNew.surname\\\" required/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"registerUsername\\\" class=\\\"form-label\\\">Uživatelské jméno</label>\\n      <input id=\\\"registerUsername\\\" name=\\\"registerUsername\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customerNew.username\\\" required/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\" class=\\\"form-label\\\">E-mail</label>\\n      <input id=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"customerNew.email\\\" required/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"registerPassword\\\" class=\\\"form-label\\\">Heslo</label>\\n      <input id=\\\"registerPassword\\\" name=\\\"registerPassword\\\" type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"rawPassword\\\" required/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"registerPassword\\\" class=\\\"form-label\\\">Kontrolní Heslo</label>\\n      <input id=\\\"registerPasswordControl\\\" name=\\\"registerPasswordControl\\\" type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"rawPasswordControl\\\" required/>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary form-control\\\">Registrovat</button>\\n  </form>\\n</div>\\n<div *ngIf=\\\"loadingState.isWorking()\\\">Registruji...</div>\\n<div *ngIf=\\\"loadingState.isSuccess()\\\" class=\\\"alert alert-success\\\">Úspěšně registrován</div>\\n<div *ngIf=\\\"loadingState.isError()\\\" class=\\\"alert alert-danger\\\">{{loadingState.getError()}}</div>\\n\"","export default \"<div *ngIf=\\\"componentState.isCreate()\\\">\\n  <div *ngIf=\\\"componentState.isBadDiscount()\\\" class=\\\"alert alert-danger\\\">\\n    Špatně vyplněný formulář. Prosím vyplňte slevu a zvolte správně datum\\n  </div>\\n  <h2 class=\\\"text-primary text-center mb-5\\\">Tvorba slev</h2>\\n  <h4 class=\\\"text-secondary\\\">Produkt: </h4>\\n  <select class=\\\"form-control mb-3\\\" id=\\\"test\\\" name=\\\"product\\\" (change)=\\\"selectProductCreating($event)\\\">\\n    <option id=\\\"{{product.id}}\\\" *ngFor=\\\"let product of products\\\" [value]=\\\"product.id\\\">{{product.name}}</option>\\n  </select>\\n  <div *ngIf=\\\"selectedProduct!=null\\\">\\n    <div class=\\\"row mb-5\\\">\\n      <div class=\\\"col-md-7\\\">\\n        <div class=\\\"row\\\">\\n          <h4 class=\\\"text-secondary\\\">Náhled</h4>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\"><h4>Sleva číslo #</h4></div>\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"card-text\\\">Sleva: {{discountPercent}}%</div>\\n                  <div class=\\\"card-text\\\">Datum\\n                    od: {{discountsService.dateToUserFriendlyStr(getDateFromString(dateFrom))}}</div>\\n                  <div class=\\\"card-text\\\">Datum\\n                    do: {{discountsService.dateToUserFriendlyStr(getDateFromString(dateTo))}}</div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-7\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-header\\\">{{selectedProduct.name}}</div>\\n              <div class=\\\"card-body\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col\\\">\\n                    <img src=\\\"{{productsService.getPictureUrl(selectedProduct)}}\\\" alt=\\\"{{selectedProduct.name}}\\\"\\n                         height=\\\"100\\\"\\n                         width=\\\"100\\\">\\n                    <div *ngIf=\\\"discountPercent>0\\\">\\n                      <p class=\\\"card-text\\\">\\n                        <del>{{selectedProduct.price.toFixed(2)}} CZK</del>\\n                      </p>\\n                      <h5 class=\\\"card-text text-warning\\\">{{discountPrice.toFixed(2)}} CZK</h5>\\n                    </div>\\n                    <div *ngIf=\\\"!discountPercent>0\\\">\\n                      <p>{{selectedProduct.price.toFixed(2)}} CZK</p>\\n                    </div>\\n                    <button class=\\\"btn btn-success\\\">Objednat</button>\\n                  </div>\\n                  <div class=\\\"col\\\" *ngIf=\\\"discountPercent>0\\\">\\n                    <h4 class=\\\"card-text text-warning\\\">Sleva!</h4>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5 float-right\\\">\\n        <h3 class=\\\"text-info\\\">Sleva: </h3>\\n        <h4 class=\\\"text-secondary\\\">Procenta: </h4>\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"90\\\" (keyup)=\\\"updateDiscount($event)\\\">\\n        <h4 class=\\\"text-secondary\\\">Datum slevy</h4>\\n        <label for=\\\"dateFrom\\\" class=\\\"form-label\\\">Od</label>\\n        <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"dateFrom\\\" name=\\\"dateFrom\\\" (change)=\\\"checkDateTo()\\\"\\n               [(ngModel)]=\\\"dateFrom\\\" min=\\\"{{min}}\\\"><br>\\n        <label for=\\\"dateFrom\\\" class=\\\"form-label\\\">Do</label>\\n        <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"dateTo\\\" name=\\\"dateTo\\\" [(ngModel)]=\\\"dateTo\\\"\\n               min=\\\"{{dateFrom}}\\\">\\n      </div>\\n    </div>\\n    <button (click)=\\\"createDiscount()\\\" class=\\\"btn btn-success\\\">Vytvořit slevu</button>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"componentState.isShowFinishedDiscount()\\\">\\n  <div class=\\\"alert alert-success\\\">Sleva úspěšně vytvořena</div>\\n  <h2>Vytvořená sleva:</h2>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\"><h4>Sleva číslo {{finishedDiscount.id}}</h4></div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"card-text\\\">Sleva: {{finishedDiscount.percent}}%</div>\\n          <div class=\\\"card-text\\\">Datum od: {{discountsService.dateToUserFriendlyStr(finishedDiscount.datefrom)}}</div>\\n          <div class=\\\"card-text\\\">Datum do: {{discountsService.dateToUserFriendlyStr(finishedDiscount.dateto)}}</div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\"><h4>{{selectedProduct.name}}</h4></div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <img src=\\\"{{productsService.getPictureUrl(selectedProduct)}}\\\" alt=\\\"{{selectedProduct.name}}\\\" height=\\\"100\\\"\\n                   width=\\\"100\\\">\\n              <p class=\\\"card-text\\\">\\n                <del>{{selectedProduct.price.toFixed(2)}} CZK</del>\\n              </p>\\n              <h5 class=\\\"card-text text-warning\\\">{{discountPrice.toFixed(2)}} CZK</h5>\\n              <button class=\\\"btn btn-success\\\">Objednat</button>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <h4 class=\\\"card-text text-warning\\\">Sleva!</h4>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"","export default \"<h2 class=\\\"text-center text-primary mb-5\\\">Upravit slevu</h2>\\n<div *ngIf=\\\"loadingState.isSuccess()\\\" class=\\\"alert alert-success\\\">Produkt úspěšně upraven</div>\\n<div *ngIf=\\\"loadingState.isError()\\\" class=\\\"alert alert-danger\\\">Při úpravě nastala chyba</div>\\n<div class=\\\"row mb-5\\\">\\n  <div class=\\\"col-md-7\\\">\\n    <div class=\\\"row\\\">\\n      <h3 class=\\\"text-info\\\">Náhled</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-5\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-header\\\"><h4>Sleva číslo {{alteredDiscount.id}}</h4></div>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"card-text\\\">Sleva: {{alteredDiscount.percent}}%</div>\\n              <div class=\\\"card-text\\\">Datum\\n                od: {{discountsService.dateToUserFriendlyStr(alteredDiscount.datefrom)}}</div>\\n              <div class=\\\"card-text\\\">Datum do: {{discountsService.dateToUserFriendlyStr(alteredDiscount.dateto)}}</div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-7\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\"><h4>{{productToDiscount.name}}</h4></div>\\n          <div class=\\\"card-body\\\">\\n            <img src=\\\"{{productsService.getPictureUrl(productToDiscount)}}\\\" alt=\\\"{{productToDiscount.name}}\\\"\\n                 height=\\\"100\\\"\\n                 width=\\\"100\\\">\\n            <p class=\\\"card-text\\\">\\n              <del>{{productToDiscount.price.toFixed(2)}} CZK</del>\\n            </p>\\n            <p class=\\\"card-text\\\">{{discountPrice.toFixed(2)}} CZK</p>\\n            <button class=\\\"btn btn-success\\\">Objednat</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-5\\\">\\n    <h3 class=\\\"text-info\\\">Sleva: </h3>\\n    <h4 class=\\\"text-secondary\\\">Procenta: </h4>\\n    <input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"90\\\" (keyup)=\\\"updateDiscount($event)\\\">\\n    <h4 class=\\\"text-secondary\\\">Datum slevy</h4>\\n    <label for=\\\"dateFrom\\\" class=\\\"form-label\\\">Od</label>\\n    <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"dateFrom\\\" name=\\\"dateFrom\\\" (change)=\\\"changeDateFrom($event)\\\"\\n           min=\\\"{{min}}\\\"><br>\\n    <label for=\\\"dateFrom\\\" class=\\\"form-label\\\">Do</label>\\n    <input class=\\\"form-control\\\" type=\\\"date\\\" id=\\\"dateTo\\\" name=\\\"dateTo\\\" (change)=\\\"changeDateTo($event)\\\"\\n           min=\\\"{{getMinDateTo()}}\\\">\\n  </div>\\n</div>\\n<div class=\\\"row mb-3\\\">\\n  <button class=\\\"btn btn-warning\\\" (click)=\\\"alterDiscount()\\\">Dokončit úpravu</button>\\n</div>\\n<div class=\\\"row mb-3\\\">\\n  <button class=\\\"btn btn-primary\\\" (click)=\\\"showAllDiscounts()\\\">Zpět na výpis slev</button>\\n</div>\\n\"","export default \"<div *ngIf=\\\"loadingState.isWorking()\\\">\\n  <span class=\\\"spinner-border spinner-border-sm\\\"></span> Loading...\\n</div>\\n<div *ngIf=\\\"loadingState.isError()\\\">\\n  <div class=\\\"alert alert-danger\\\">Spojení se serverem selhalo.</div>\\n</div>\\n<div *ngIf=\\\"!isAlterDiscount\\\">\\n  <div *ngIf=\\\"loadingState.isSuccess()\\\">\\n    <h1 class=\\\"text-primary text-center mb-5\\\">Seznam slev</h1>\\n    <h2 class=\\\"text-secondary mb-3\\\">Produkt</h2>\\n    <select class=\\\"form-control mb-5\\\" id=\\\"test\\\" name=\\\"product\\\" (change)=\\\"loadProductDiscounts($event)\\\">\\n      <option value=\\\"-1\\\">Všechny produkty</option>\\n      <option id=\\\"{{product.id}}\\\" *ngFor=\\\"let product of products\\\" [value]=\\\"product.id\\\">{{product.name}}</option>\\n    </select>\\n    <div *ngIf=\\\"discountsFuture.length>0\\\">\\n      <h2 class=\\\"text-secondary mt-5 mb-3\\\">Nadcházející slevy</h2>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\" *ngFor=\\\"let discount of discountsFuture\\\">\\n          {{updateSelectedDiscount(discount)}}\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-5\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"card mb-4\\\">\\n                  <div class=\\\"card-header\\\"><h4>Sleva číslo {{discount.id}}</h4></div>\\n                  <div class=\\\"card-body\\\">\\n                    <div class=\\\"card-text\\\">Sleva: {{discount.percent}}%</div>\\n                    <div class=\\\"card-text\\\">Datum od: {{discountsService.dateToUserFriendlyStr(discount.datefrom)}}</div>\\n                    <div class=\\\"card-text\\\">Datum do: {{discountsService.dateToUserFriendlyStr(discount.dateto)}}</div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <button class=\\\"btn btn-primary mb-2\\\" (click)=\\\"alterDiscount(discount.id)\\\">Změnit slevu</button>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <button class=\\\"btn btn-danger mb-2\\\" data-toggle=\\\"modal\\\" data-target=\\\"#confirmDeleteDiscount\\\"\\n                        (click)=\\\"prepareModalDelete(discount.id)\\\">Zrušit slevu\\n                </button>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n              <div class=\\\"card mb-4\\\">\\n                <div class=\\\"card-header\\\"><h4>{{selectedProduct.name}}</h4></div>\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                      <img src=\\\"{{productsService.getPictureUrl(selectedProduct)}}\\\" alt=\\\"{{selectedProduct.name}}\\\"\\n                           height=\\\"100\\\"\\n                           width=\\\"100\\\">\\n                      <p class=\\\"card-text\\\">\\n                        <del>{{selectedProduct.price.toFixed(2)}} CZK</del>\\n                      </p>\\n                      <h5 class=\\\"card-text text-warning\\\">{{discountPrice.toFixed(2)}} CZK</h5>\\n                      <button class=\\\"btn btn-success\\\">Objednat</button>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                      <h4 class=\\\"card-text text-warning\\\">Sleva!</h4>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"discountsOnGoing.length>0\\\">\\n      <h2 class=\\\"text-secondary mb-3\\\">Právě probíhající slevy</h2>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\" *ngFor=\\\"let discount of discountsOnGoing\\\">\\n          {{updateSelectedDiscount(discount)}}\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-5\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"card\\\">\\n                  <div class=\\\"card-header\\\"><h4>Sleva číslo {{discount.id}}</h4></div>\\n                  <div class=\\\"card-body\\\">\\n                    <div class=\\\"card-text\\\">Sleva: {{discount.percent}}%</div>\\n                    <div class=\\\"card-text\\\">Datum od: {{discountsService.dateToUserFriendlyStr(discount.datefrom)}}</div>\\n                    <div class=\\\"card-text\\\">Datum do: {{discountsService.dateToUserFriendlyStr(discount.dateto)}}</div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\"><h4>{{selectedProduct.name}}</h4></div>\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                      <img src=\\\"{{productsService.getPictureUrl(selectedProduct)}}\\\" alt=\\\"{{selectedProduct.name}}\\\"\\n                           height=\\\"100\\\"\\n                           width=\\\"100\\\">\\n                      <p class=\\\"card-text\\\">\\n                        <del>{{selectedProduct.price.toFixed(2)}} CZK</del>\\n                      </p>\\n                      <h5 class=\\\"card-text text-warning\\\">{{discountPrice.toFixed(2)}} CZK</h5>\\n                      <button class=\\\"btn btn-success\\\">Objednat</button>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                      <h4 class=\\\"card-text text-warning\\\">Sleva!</h4>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"discountsPast.length>0\\\">\\n      <h2 class=\\\"text-secondary mb-3\\\">Již uběhlé slevy</h2>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\" *ngFor=\\\"let discount of discountsPast\\\">\\n          {{updateSelectedDiscount(discount)}}\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-5\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"card\\\">\\n                  <div class=\\\"card-header\\\"><h4>Sleva číslo {{discount.id}}</h4></div>\\n                  <div class=\\\"card-body\\\">\\n                    <div class=\\\"card-text\\\">Sleva: {{discount.percent}}%</div>\\n                    <div class=\\\"card-text\\\">Datum od: {{discountsService.dateToUserFriendlyStr(discount.datefrom)}}</div>\\n                    <div class=\\\"card-text\\\">Datum do: {{discountsService.dateToUserFriendlyStr(discount.dateto)}}</div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-7\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\"><h4>{{selectedProduct.name}}</h4></div>\\n                <div class=\\\"card-body\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col\\\">\\n                      <img src=\\\"{{productsService.getPictureUrl(selectedProduct)}}\\\" alt=\\\"{{selectedProduct.name}}\\\"\\n                           height=\\\"100\\\"\\n                           width=\\\"100\\\">\\n                      <p class=\\\"card-text\\\">\\n                        <del>{{selectedProduct.price.toFixed(2)}} CZK</del>\\n                      </p>\\n                      <h5 class=\\\"card-text text-warning\\\">{{discountPrice.toFixed(2)}} CZK</h5>\\n                      <button class=\\\"btn btn-success\\\">Objednat</button>\\n                    </div>\\n                    <div class=\\\"col\\\">\\n                      <h4 class=\\\"card-text text-warning\\\">Sleva!</h4>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div *ngIf=\\\"isAlterDiscount\\\">\\n  <app-discounts-alter [discountToAlter]=\\\"focusedDiscount\\\"\\n                       [selectedProduct]=\\\"selectedProduct\\\"\\n                       (finishedAlterDiscount)=\\\"finishAlteration($event)\\\"\\n                       (showAll)=\\\"showAllDiscounts($event)\\\"\\n  >\\n  </app-discounts-alter>\\n</div>\\n\\n<div id=\\\"confirmDeleteDiscount\\\" class=\\\"modal fade\\\" *ngIf=\\\"focusedDiscount!=null\\\">\\n  <div class=\\\"modal-dialog modal-md\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h2 class=\\\"modal-title text-secondary\\\">Smazat slevu</h2>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <h4 class=\\\"text-primary\\\">Opravdu si přejede vymazat slevu čislo {{focusedDiscount.id}}?</h4>\\n        <button type=\\\"button\\\" class=\\\"btn btn-md btn-success\\\" data-dismiss=\\\"modal\\\"\\n                (click)=\\\"deleteDiscount(focusedDiscount.id)\\\">Ano\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-md btn-danger float-right\\\" data-dismiss=\\\"modal\\\">Ne</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<header>\\n    <a routerLink=\\\"\\\" class=\\\"mr-auto\\\"> <img\\n      src=\\\"https://ae01.alicdn.com/kf/HTB1_gUhRVXXXXbXXpXXq6xXFXXX8/Top-Tees-Custom-Any-Logo-Size-M4-SHERMAN-TANK-M-4-decals-kit-US-model-M4A1.jpg\\\"\\n      height=\\\"100\\\" width=\\\"100\\\">\\n    </a>\\n</header>\\n\\n<nav id=\\\"nav\\\" class=\\\"navbar navbar-expand-md bg-dark navbar-dark sticky-top\\\">\\n  <ul class=\\\"navbar-nav mr-auto\\\">\\n    <li class=\\\"nav-item\\\" *ngIf=\\\"loginService.isAdminMode()\\\">\\n      <a class=\\\"nav-link cursor\\\" routerLink=\\\"customers\\\">Zákazníci</a>\\n    </li>\\n    <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"loginService.isAdminMode()\\\">\\n      <a href=\\\"#\\\" class=\\\"nav-link cursor\\\" routerLink=\\\"products/add\\\">Přidat produkt</a>\\n    </li>\\n    <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"loginService.isAdminMode()\\\">\\n      <a href=\\\"#\\\" class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbardrop1\\\" data-toggle=\\\"dropdown\\\">Kategorie</a>\\n      <div class=\\\"dropdown-menu\\\">\\n        <a class=\\\"dropdown-item cursor\\\" routerLink=\\\"categories\\\">Kategorie</a>\\n        <a class=\\\"dropdown-item cursor\\\" routerLink=\\\"categories/add\\\">Přidat</a>\\n        <a class=\\\"dropdown-item cursor\\\" routerLink=\\\"categories/alter\\\">Upravit</a>\\n      </div>\\n    </li>\\n\\n    <li class=\\\"nav-item\\\" *ngIf=\\\"loginService.isUserLoggedIn()\\\">\\n      <a class=\\\"nav-link cursor\\\" routerLink=\\\"orders\\\">Objednávky</a>\\n    </li>\\n    <li class=\\\"nav-item dropdown\\\" *ngIf=\\\"loginService.isAdminMode()\\\">\\n      <a href=\\\"#\\\" class=\\\"nav-link dropdown-toggle\\\" id=\\\"navbardrop2\\\" data-toggle=\\\"dropdown\\\">Slevy</a>\\n      <div class=\\\"dropdown-menu\\\">\\n        <a class=\\\"dropdown-item cursor\\\" routerLink=\\\"discounts\\\">Výpis</a>\\n        <a class=\\\"dropdown-item cursor\\\" routerLink=\\\"discounts/add\\\">Přidat</a>\\n      </div>\\n    </li>\\n  </ul>\\n  <ul class=\\\"navbar-nav\\\" *ngIf=\\\"loginService.isUserLoggedIn()\\\">\\n    <li class=\\\"nav-item dropdown\\\">\\n      <a class=\\\"nav-link dropdown-toggle cursor\\\" data-toggle=\\\"dropdown\\\">{{loginService.getUsername()}}</a>\\n      <div class=\\\"dropdown-menu dropdown-menu-right\\\">\\n        <a class=\\\"dropdown-item cursor\\\" routerLink=\\\"logout\\\">Odhlásit</a>\\n        <a class=\\\"dropdown-item cursor\\\" *ngIf=\\\"loginService.isUserAdmin()&&!loginService.isAdminMode()\\\"\\n           (click)=\\\"changeAdminMode()\\\">Zapnout režim admina</a>\\n        <a class=\\\"dropdown-item cursor\\\" *ngIf=\\\"loginService.isUserAdmin()&&loginService.isAdminMode()\\\"\\n           (click)=\\\"changeAdminMode()\\\">Vypnout režim admina</a>\\n      </div>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link cursor\\\" routerLink=\\\"cart\\\"><i class=\\\"material-icons\\\">shopping_cart</i>{{itemsInCart}}\\n      </a>\\n    </li>\\n  </ul>\\n  <ul class=\\\"navbar-nav\\\" *ngIf=\\\"!loginService.isUserLoggedIn()\\\">\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link cursor\\\" data-toggle=\\\"modal\\\" data-target=\\\"#LoginForm\\\" #loginFormOpenButton>Přihlásit</a>\\n    </li>\\n    <li class=\\\"nav-item\\\">\\n      <a class=\\\"nav-link cursor\\\" data-toggle=\\\"modal\\\" data-target=\\\"#RegisterForm\\\">Registrovat</a>\\n    </li>\\n  </ul>\\n</nav>\\n\\n<div id=\\\"LoginForm\\\" class=\\\"modal fade\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Přihlášení</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #loginFormCloseButton>\\n          &times;\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <app-login (loginFinished)=\\\"closeLoginFormMessage($event)\\\"></app-login>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div id=\\\"RegisterForm\\\" class=\\\"modal fade\\\">\\n  <div class=\\\"modal-dialog modal-sm\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Registrace</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #registerFormCloseButton>&times;</button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <app-register-customer (registerFinished)=\\\"closeRegisterFormMessage($event)\\\"></app-register-customer>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!--div *ngIf=\\\"loginService.isUserLoggedIn()\\\">\\n  {{checkToken()}}\\n</div-->\\n<!--h5>Upravit</h5>\\n<dl>\\n  <dt>Mezery</dt>\\n  <dd>- skoro všude</dd>\\n  <dt>Nadpisy a texty</dt>\\n  <dd>- chce to hezčí</dd>\\n</dl-->\\n\\n\"","export default \"<div *ngIf=\\\"loadingState.isError()\\\" class=\\\"alert alert-danger\\\">Spojení se serverem selhalo</div>\\n<div *ngIf=\\\"loadingState.isWorking()\\\"><span class=\\\"spinner-border spinner-border-sm\\\"></span></div>\\n<div *ngIf=\\\"loadingState.isSuccess()\\\">\\n  <div *ngIf=\\\"workinsState.isError()\\\" class=\\\"alert alert-danger\\\">{{workinsState.getError()}}</div>\\n  <div *ngIf=\\\"workinsState.isSuccess()\\\" class=\\\"alert alert-success\\\">Kategorie úspěšně přidána</div>\\n  <h2 class=\\\"text-center text-secondary\\\"> Přidat kategorii</h2>\\n\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"name\\\" classw=\\\"form-label\\\">Název</label>\\n      <input id=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"productType.typeName\\\" required/>\\n    </div>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"insertNew()\\\">Přidat</button>\\n  </form>\\n</div>\\n\"","export default \"<h2 class=\\\"text-secondary text-center\\\">Seznam kategorií</h2>\\n<div *ngIf=\\\"loadingState.isError()\\\">\\n  <div class=\\\"alert alert-danger\\\">Spojení se serverem selhalo.</div>\\n</div>\\n<div *ngIf=\\\"loadingState.isWorking()\\\">\\n  <span class=\\\"spinner-border spinner-border-sm\\\"></span>\\n</div>\\n<div *ngIf=\\\"loadingState.isSuccess()\\\">\\n  <table class=\\\"table table-light table-hover\\\">\\n    <thead class=\\\"thead-dark\\\">\\n    <tr>\\n      <th>ID</th>\\n      <th>Název</th>\\n      <th></th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let pt of productTypes; let index = index;trackBy:trackByIndex\\\">\\n      <td>{{pt.id}}</td>\\n\\n      <td *ngIf=\\\"changingIndex!=index\\\">{{pt.typeName}}</td>\\n      <td *ngIf=\\\"changingIndex==index\\\"><input type=\\\"text\\\" [(ngModel)]=\\\"productTypes[index].typeName\\\"></td>\\n\\n      <td *ngIf=\\\"changingIndex!=index\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"changingType(index)\\\">Změnit název</button>\\n      </td>\\n      <td *ngIf=\\\"changingIndex==index\\\">\\n        <button *ngIf=\\\"workingOn!=index\\\" class=\\\"btn btn-success\\\" (click)=\\\"saveChanges(index)\\\">Uložit změny</button>\\n        <span *ngIf=\\\"workingOn==index\\\">Loading...</span>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","export default \"<h1 class=\\\"text-primary text-center\\\">Kategorie</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-6\\\"><app-product-types-alter></app-product-types-alter></div>\\n  <div class=\\\"col-6\\\"><app-product-types-add></app-product-types-add></div>\\n</div>\\n\"","export default \"<h1 class=\\\"text-primary text-center\\\">Upravit produkt</h1>\\n<div *ngIf=\\\"sendingState.isSuccess()\\\" class=\\\"alert alert-success\\\">Produkt úspěšně upraven</div>\\n<div *ngIf=\\\"sendingState.isError()\\\" class=\\\"alert alert-danger\\\">Při úpravě nastala chyba</div>\\n<h3 class=\\\"text-secondary\\\">Náhled: </h3>\\n<div *ngIf=\\\"loadingState.isWorking()\\\">\\n  <span class=\\\"spinner-border spinner-border-sm\\\"></span>\\n</div>\\n<div *ngIf=\\\"loadingState.isSuccess()\\\" class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">{{this.productToAlter.name}}</div>\\n      <div class=\\\"card-body\\\">\\n        <img id=\\\"{{productToAlter.id}}\\\" src=\\\"{{productsService.getPictureUrl(productToAlter)}}\\\"\\n             alt=\\\"{{productToAlter.name}}\\\" height=\\\"100\\\"\\n             width=\\\"100\\\">\\n        <p class=\\\"card-text\\\">{{productToAlter.price.toFixed(2)}} CZK</p>\\n        <button class=\\\"btn btn-success btn-md\\\" (click)=\\\"test()\\\">Objednat</button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-8\\\">\\n    <form>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\" class=\\\"form-label\\\">Název</label>\\n        <input id=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"productToAlter.name\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"price\\\" class=\\\"form-label\\\">Cena</label>\\n        <input id=\\\"price\\\" name=\\\"price\\\" class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"productToAlter.price\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"imgURL\\\" class=\\\"form-label\\\">Adresa obrázku</label>\\n        <input id=\\\"imgURL\\\" name=\\\"imgURL\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"productToAlter.pictureUrl\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"category\\\" class=\\\"form-label\\\">Kategorie</label>\\n        <select class=\\\"form-control\\\" id=\\\"category\\\" name=\\\"productType\\\" (change)=\\\"changeProductType($event)\\\">\\n          <option *ngFor=\\\"let productType of productTypes\\\" [value]=\\\"productType.id\\\"\\n                  id=\\\"{{productType.id}}\\\"\\n                  [selected]=\\\"productType.id == productToAlter.productTypeId\\\">{{productType.typeName}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label *ngIf=\\\"productToAlter.selling\\\" for=\\\"selling\\\" class=\\\"form-label alert-success\\\">Je v prodeji</label>\\n        <label *ngIf=\\\"!productToAlter.selling\\\" for=\\\"selling\\\" class=\\\"form-label alert-danger\\\">Není v prodeji</label>\\n        <input id=\\\"selling\\\" name=\\\"selling\\\" class=\\\"form-control btn btn-primary\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"productToAlter.selling\\\">\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n<div class=\\\"row mb-3\\\">\\n  <button class=\\\"btn-warning btn\\\" (click)=\\\"alterProduct()\\\">Uložit změny</button>\\n</div>\\n<!--div class=\\\"row mb-3\\\">\\n  <button class=\\\"btn-primary btn\\\" (click)=\\\"showAllProducts()\\\">Zpět</button>\\n</div-->\\n\"","export default \"<div *ngIf=\\\"loadingState.isError()\\\" class=\\\"alert alert-danger text-center\\\">{{loadingState.getError()}}</div>\\n<div *ngIf=\\\"loadingState.isSuccess()\\\" class=\\\"alert alert-success\\\">Produkt úspěšně přidán</div>\\n<h1 class=\\\"text-center text-primary\\\">Přidat produkt</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md\\\">\\n    <h2>Náhled</h2>\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\" *ngIf=\\\"product.name!=null\\\">{{product.name}}</div>\\n      <div class=\\\"card-body\\\">\\n        <img src=\\\"{{productsService.getPictureUrl(product)}}\\\" alt=\\\"{{product.name}}\\\" height=\\\"100\\\" width=\\\"100\\\">\\n        <p class=\\\"card-text\\\">&nbsp;</p>\\n        <h5 class=\\\"card-text\\\" *ngIf=\\\"product.price!=null\\\">{{product.price.toFixed(2)}} CZK</h5>\\n        <button class=\\\"btn btn-success btn-md\\\">Objednat</button>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md\\\" *ngIf=\\\"!finished\\\">\\n    <form>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\" class=\\\"form-label\\\">Název</label>\\n        <input id=\\\"name\\\" name=\\\"name\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"product.name\\\" required/>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"price\\\" class=\\\"form-label\\\">Cena</label>\\n        <input id=\\\"price\\\" name=\\\"price\\\" type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"product.price\\\" min=\\\"1\\\" required/>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"pictureUrl\\\" class=\\\"form-label\\\">URL Obrázku</label>\\n        <input id=\\\"pictureUrl\\\" name=\\\"pictureUrl\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"product.pictureUrl\\\"\\n               required/>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"category\\\" class=\\\"form-label\\\">Kategorie</label>\\n        <select class=\\\"form-control\\\" id=\\\"category\\\" name=\\\"productType\\\" (change)=\\\"changeProductType($event)\\\">\\n          <option *ngFor=\\\"let productType of productTypes\\\" [value]=\\\"productType.id\\\"\\n                  id=\\\"{{productType.id}}\\\">{{productType.typeName}}</option>\\n        </select>\\n      </div>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary form-control\\\" (click)=\\\"insertNew()\\\">Přidat</button>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<div *ngIf=\\\"loadingTypeState.isSuccess()\\\">\\n  <h1 class=\\\"text-center text-primary mb-5\\\">{{productType.typeName}}</h1>\\n  <ul class=\\\"pagination pagination-md\\\">\\n    <li *ngFor=\\\"let page of pages\\\" class=\\\"page-item\\\">\\n      <button type=\\\"button\\\" class=\\\"page-link\\\" (click)=\\\"loadPage(page)\\\">{{page}}</button>\\n    </li>\\n  </ul>\\n</div>\\n<div *ngIf=\\\"loadingProductState.isWorking() || loadingTypeState.isWorking()\\\">\\n  <span class=\\\"spinner-border spinner-border-sm\\\"></span>\\n</div>\\n<div *ngIf=\\\"loadingProductState.isError() || loadingTypeState.isError()\\\">\\n  <div class=\\\"alert alert-danger\\\">Spojení se serverem selhalo.</div>\\n</div>\\n<div *ngIf=\\\"loadingProductState.isSuccess()\\\">\\n  <div *ngIf=\\\"loginService.isAdminMode()\\\" class=\\\"mb-3\\\">\\n    <button *ngIf=\\\"!this.showAdminProducts\\\" class=\\\"btn-secondary btn btn-md\\\" (click)=\\\"changeShowAdminProducts()\\\">\\n      Zobrazit vyřazené produkty\\n    </button>\\n    <button *ngIf=\\\"this.showAdminProducts\\\" class=\\\"btn-secondary btn btn-md\\\" (click)=\\\"changeShowAdminProducts()\\\">\\n      Zobrazit produkty v prodeji\\n    </button>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\" *ngFor=\\\"let product of products\\\">\\n      <div class=\\\"card mb-4\\\">\\n        <div class=\\\"card-header\\\">{{product.name}}</div>\\n        <div class=\\\"card-body\\\" *ngIf=\\\"!loginService.isAdminMode()\\\">\\n          <div class=\\\"row mb-2\\\">\\n            <div class=\\\"col\\\">\\n              <img src=\\\"{{productService.getPictureUrl(product)}}\\\" alt=\\\"{{product.name}}\\\" height=\\\"100\\\"\\n                   width=\\\"100\\\">\\n              <div *ngIf=\\\"product.price!=product.discountPrice\\\">\\n                <p class=\\\"card-text\\\">\\n                  <del>{{product.price.toFixed(2)}} CZK</del>\\n                </p>\\n                <h5 class=\\\"card-text text-warning\\\">{{product.discountPrice.toFixed(2)}} CZK</h5>\\n              </div>\\n              <div *ngIf=\\\"product.price==product.discountPrice\\\">\\n                <p class=\\\"card-text\\\">&nbsp;</p>\\n                <h5 class=\\\"card-text\\\">{{product.discountPrice.toFixed(2)}} CZK</h5>\\n              </div>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <h4 class=\\\"card-text text-warning\\\" *ngIf=\\\"product.price!=product.discountPrice\\\">Sleva!</h4>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"loginService.isUserLoggedIn()\\\">\\n            <button *ngIf=\\\"product.selling\\\" (click)=\\\"focusProduct(product.id)\\\"\\n                    class=\\\"btn btn-success btn-md stretched-link\\\"\\n                    data-toggle=\\\"modal\\\"\\n                    data-target=\\\"#orderProduct\\\">Objednat\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card-body\\\" *ngIf=\\\"loginService.isAdminMode()\\\">\\n          <img src=\\\"{{productService.getPictureUrl(product)}}\\\" alt=\\\"{{product.name}}\\\" height=\\\"100\\\"\\n               width=\\\"100\\\">\\n          <p class=\\\"card-text\\\">{{product.price.toFixed(2)}} CZK</p>\\n          <div class=\\\"row\\\">\\n            <button (click)=\\\"alterProduct(product.id)\\\" class=\\\"btn btn-secondary btn-md\\\">Upravit produkt</button>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"!showAdminProducts\\\">\\n            <button (click)=\\\"focusProduct(product.id)\\\" class=\\\"btn btn-danger btn-md\\\" data-toggle=\\\"modal\\\"\\n                    data-target=\\\"#confirmPutProductOut\\\">Vyřadit z prodeje\\n            </button>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"showAdminProducts\\\">\\n            <button (click)=\\\"focusProduct(product.id)\\\" class=\\\"btn btn-success btn-md\\\" data-toggle=\\\"modal\\\"\\n                    data-target=\\\"#confirmPutProductBack\\\">Zařadit zpět do prodeje\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <button (click)=\\\"loadMore()\\\" *ngIf=\\\"currentPage<pages.length\\\" class=\\\"btn btn-primary btn-md\\\">Načíst Další\\n  </button>\\n</div>\\n\\n<div *ngIf=\\\"loadingMoreProductsState.isWorking()\\\">\\n  <span class=\\\"spinner-border spinner-border-sm\\\"></span>\\n</div>\\n\\n<div *ngIf=\\\"loginService.isAdminMode()&&focusedProduct!=null\\\">\\n  <div id=\\\"confirmPutProductOut\\\" class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog modal-md\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h2 class=\\\"modal-title text-secondary\\\">Vyřazení produktu</h2>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <h4 class=\\\"text-primary\\\">Opravdu chcete vyřadit produkt {{focusedProduct.name}} z prodeje?</h4>\\n          <button type=\\\"button\\\" class=\\\"btn btn-md btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"putProductOut()\\\">Ano\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-md btn-danger float-right\\\" data-dismiss=\\\"modal\\\">Ne</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div id=\\\"confirmPutProductBack\\\" class=\\\"modal fade\\\">\\n    <div class=\\\"modal-dialog modal-md\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h2 class=\\\"modal-title text-secondary\\\">Zařazení produktu</h2>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <h4 class=\\\"text-primary\\\">Opravdu chcete zařadit produkt {{focusedProduct.name}} zpět do prodeje?</h4>\\n          <button type=\\\"button\\\" class=\\\"btn btn-md btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"putProductBack()\\\">Ano\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-md btn-danger float-right\\\" data-dismiss=\\\"modal\\\">Ne</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div id=\\\"orderProduct\\\" class=\\\"modal fade\\\" *ngIf=\\\"focusedProduct!=null\\\">\\n  <div class=\\\"modal-dialog modal-md\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h2 class=\\\"modal-title text-secondary\\\">Objednat produkt {{focusedProduct.name}}</h2>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <h6 class=\\\"form-label\\\">Současná cena za kus: {{focusedProduct.discountPrice}}</h6>\\n        <h5 class=\\\"form-label\\\">Počet: </h5>\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"1\\\" (keyup)=\\\"amountChanged()\\\" [(ngModel)]=\\\"amountToAdd\\\">\\n        <h4 *ngIf=\\\"totalPrice!=null\\\">Celková cena: {{totalPrice.toFixed(2)}} CZK</h4>\\n        <button type=\\\"button\\\" class=\\\"btn btn-md btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"addToCart()\\\">Přidat</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-md btn-danger float-right\\\" data-dismiss=\\\"modal\\\">Zrušit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div *ngIf=\\\"shoppingCartService.isCartExists()||componentState.isFinished()\\\">\\n  <div *ngIf=\\\"!componentState.isAddress()\\\">\\n    <h1 *ngIf=\\\"!componentState.isFinished()\\\" class=\\\"text-center text-primary\\\">Můj košík</h1>\\n    <div *ngIf=\\\"componentState.isFinished()\\\">\\n      <div class=\\\"alert alert-success\\\"><b>Objednávka úspěšně dokončena!</b></div>\\n      <h2 class=\\\"text-center text-primary\\\">Objednávka číslo {{orderNumber}}</h2>\\n    </div>\\n    <div *ngIf=\\\"loadingState.isWorking()\\\">\\n      <span class=\\\"spinner-border spinner-border-sm\\\"></span> Loading...\\n    </div>\\n    <div *ngIf=\\\"loadingState.isError()\\\">\\n      <div class=\\\"alert alert-danger\\\">Spojení se serverem selhalo</div>\\n    </div>\\n    <div *ngIf=\\\"loadingState.isSuccess()\\\">\\n      <table class=\\\"table table-light table-hover\\\">\\n        <thead class=\\\"thead-dark\\\">\\n        <tr>\\n          <th></th>\\n          <th>Název</th>\\n          <th>Cena</th>\\n          <th>Množství</th>\\n          <th>Cena celkem</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let item of cart\\\" data-toggle=\\\"modal\\\" data-target=\\\"#changeAmount\\\"\\n            (click)=\\\"alterAmount(item.productID)\\\">\\n          {{loadProduct(item.productID)}}\\n          <td><img src=\\\"{{productsService.getPictureUrl(listedProduct)}}\\\" width=\\\"50\\\" height=\\\"50\\\"\\n                   alt=\\\"{{listedProduct.name}}\\\"></td>\\n          <td>{{listedProduct.name}}</td>\\n          <td>{{listedProduct.discountPrice}}</td>\\n          <td>{{item.amount}}</td>\\n          <td>{{item.amount * listedProduct.discountPrice}}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n      <h4 class=\\\"text-info\\\">Celková cena: {{totalPrice.toFixed(2)}} CZK</h4>\\n      <div class=\\\"row mb-2\\\">\\n        <button class=\\\"btn btn-success btn-md\\\" (click)=\\\"componentState.setAddress()\\\"\\n                *ngIf=\\\"componentState.isViewCart()&&cart.length>0\\\">Objednat\\n        </button>\\n      </div>\\n      <div class=\\\"row mb-2\\\">\\n        <button class=\\\"btn btn-danger btn-md\\\" (click)=\\\"empetyCart()\\\"\\n                *ngIf=\\\"componentState.isViewCart()&&cart.length>0\\\">Vyprázdnit košík\\n        </button>\\n      </div>\\n\\n      <div *ngIf=\\\"componentState.isGoToFinish()\\\">\\n        <h4 class=\\\"text-secondary\\\">Adresa: {{orderAddr.street}} {{orderAddr.city}}, {{orderAddr.psc}}</h4>\\n        <button class=\\\"btn btn-success btn-md\\\" (click)=\\\"finishOrder()\\\">Dokončit objednávku</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"componentState.isAddress()\\\">\\n    <h2>Adresa</h2>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"city\\\" class=\\\"form-label\\\">Město: </label>\\n      <input id=\\\"city\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderAddr.city\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"street\\\" class=\\\"form-label\\\">Ulice a č.p.: </label>\\n      <input id=\\\"street\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderAddr.street\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"psc\\\" class=\\\"form-label\\\">PSČ: </label>\\n      <input id=\\\"psc\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"orderAddr.psc\\\">\\n    </div>\\n    <button class=\\\"btn btn-success btn-md\\\" (click)=\\\"componentState.setGoToFinish()\\\">Pokračovat</button>\\n  </div>\\n</div>\\n<div *ngIf=\\\"!shoppingCartService.isCartExists()&&!componentState.isFinished()\\\">\\n  <div class=\\\"alert alert-primary\\\">Košík je prázdný</div>\\n  {{showProducts()}}\\n</div>\\n\\n<div id=\\\"changeAmount\\\" class=\\\"modal fade\\\" *ngIf=\\\"focusedProduct!=null\\\">\\n  <div class=\\\"modal-dialog modal-md\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h2 class=\\\"modal-title text-secondary\\\">Produkt {{focusedProduct.name}}</h2>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <h6 class=\\\"form-label\\\">Současná cena za kus: {{focusedProduct.discountPrice}}</h6>\\n        <h5 class=\\\"form-label\\\">Počet: </h5>\\n        <input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"0\\\" (keyup)=\\\"amountChanged()\\\"\\n               [(ngModel)]=\\\"alteredAmount\\\">\\n        <h4>Cena: {{focusedProduct.discountPrice * alteredAmount}} CZK</h4>\\n        <button type=\\\"button\\\" class=\\\"btn btn-md btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"finishUpdateAmount()\\\">Uložit\\n          změny\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-md btn-danger float-right\\\" data-dismiss=\\\"modal\\\">Zrušit</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div *ngIf=\\\"componentState.isShowAll()\\\">\\n  <h1 *ngIf=\\\"!loginService.isAdminMode()\\\" class=\\\"text-primary text-center mb-5\\\">Moje objednávky</h1>\\n  <h1 *ngIf=\\\"loginService.isAdminMode()\\\" class=\\\"text-primary text-center mb-5\\\">Výpis všech objednávek</h1>\\n  <div *ngIf=\\\"loadingState.isWorking()\\\">\\n\\n    <span class=\\\"spinner-border spinner-border-sm\\\"></span> Loading...\\n  </div>\\n  <div *ngIf=\\\"loadingState.isError()\\\">\\n    <div class=\\\"alert alert-danger\\\">Spojení se serverem selhalo.</div>\\n  </div>\\n  <div *ngIf=\\\"loadingState.isSuccess()\\\">\\n    <table class=\\\"table table-light table-hover\\\">\\n      <thead class=\\\"thead-dark\\\">\\n      <tr>\\n        <th>Číslo objednávky</th>\\n        <th *ngIf=\\\"loginService.isAdminMode()\\\">Uživatel</th>\\n        <th>Adresa</th>\\n        <th>Datum objednání</th>\\n        <th>Celková cena</th>\\n        <th>Druhů zboži</th>\\n      </tr>\\n      </thead>\\n      <tbody *ngIf=\\\"!loginService.isAdminMode()\\\">\\n      <tr *ngFor=\\\"let orderInfo of orderInfos\\\" (click)=\\\"orderOut(orderInfo.order.id)\\\" data-toggle=\\\"tooltip\\\"\\n          title=\\\"Vypsat obsah objednávky\\\" class=\\\"cursor\\\">\\n        <td>{{orderInfo.order.id}}</td>\\n        <td>{{addressToString(orderInfo.order.address)}}</td>\\n        <td>{{orderInfo.order.orderdate}}</td>\\n        <td>{{getTotalOrderPrice(orderInfo.items)}}</td>\\n        <td>{{orderInfo.items.length}}</td>\\n      </tr>\\n      </tbody>\\n      <tbody *ngIf=\\\"loginService.isAdminMode()\\\">\\n      <tr *ngFor=\\\"let orderInfo of adminOrderInfos\\\" (click)=\\\"orderOut(orderInfo.order.id)\\\" data-toggle=\\\"tooltip\\\"\\n          title=\\\"Vypsat obsah objednávky\\\" class=\\\"cursor\\\">\\n        <td>{{orderInfo.order.id}}</td>\\n        <td>{{getCustomerStringByID(orderInfo.order.customerId)}}</td>\\n        <td>{{addressToString(orderInfo.order.address)}}</td>\\n        <td>{{orderInfo.order.orderdate}}</td>\\n        <td>{{getTotalOrderPrice(orderInfo.items)}}</td>\\n        <td>{{orderInfo.items.length}}</td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"componentState.isShowOne()\\\">\\n  <h1 class=\\\"text-center text-primary\\\">Objednávka číslo {{orderID}}</h1>\\n  <table class=\\\"table table-light table-hover\\\">\\n    <thead class=\\\"thead-dark\\\">\\n    <tr>\\n      <th></th>\\n      <th>Název</th>\\n      <th>Cena</th>\\n      <th>Množství</th>\\n      <th>Cena celkem</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let item of getCurrentOrder()\\\">\\n      {{loadProduct(item.productID)}}\\n      <td><img src=\\\"{{productsService.getPictureUrl(currentProduct)}}\\\" width=\\\"50\\\" height=\\\"50\\\"\\n               alt=\\\"{{currentProduct.name}}\\\"></td>\\n      <td>{{currentProduct.name}}</td>\\n      <td>{{item.pricePerProduct}}</td>\\n      <td>{{item.amount}}</td>\\n      <td>{{item.amount * item.pricePerProduct}}</td>\\n    </tr>\\n    </tbody>\\n  </table>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\" *ngIf=\\\"this.loginService.isAdminMode()\\\">\\n      <h2 class=\\\"text-secondary\\\">Uživatel</h2>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\"><h4>{{currentCustomer.name}} {{currentCustomer.surname}}</h4></div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <h5>ID:</h5>\\n              <h5>Uživatelské jméno:</h5>\\n              <h5>E-mail:</h5>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <h5>{{currentCustomer.id}}</h5>\\n              <h5>{{currentCustomer.username}}</h5>\\n              <h5>{{currentCustomer.email}}</h5>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md\\\">\\n      <button (click)=\\\"getAllOrders()\\\" class=\\\"btn btn-primary\\\">Zpět na výpis objednávek</button>\\n    </div>\\n  </div>\\n\"","export default \"<ul class=\\\"nav flex-column\\\">\\n  <li *ngFor=\\\"let productType of productTypes\\\" class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" [routerLink]=\\\"['products', productType.id]\\\"\\n       >{{productType.typeName}}</a>\\n  </li>\\n</ul>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ProductsComponent} from './components/products/products/products.component';\nimport {CustomersComponent} from './components/customers/customers/customers.component';\nimport {ProductsAddComponent} from './components/products/products-add/products-add.component';\nimport {RegisterCustomerComponent} from './components/customers/register-customer/register-customer.component';\nimport {LogoutComponent} from './components/auth/logout/logout.component';\nimport {AuthGuardUserService} from './components/auth/Services/AuthGuard/auth-guard-user.service';\nimport {AuthGuardAdminService} from './components/auth/Services/AuthGuard/auth-guard-admin.service';\nimport {CartComponent} from './components/shopping/cart/cart.component';\nimport {OrdersComponent} from './components/shopping/orders/orders.component';\nimport {InvalidTokenComponent} from './components/auth/invalid-token/invalid-token.component';\nimport {DiscountsComponent} from './components/discounts/discounts/discounts.component';\nimport {DiscountsAddComponent} from './components/discounts/discounts-add/discounts-add.component';\nimport {ProductAlterComponent} from './components/products/product-alter/product-alter.component';\nimport {ProductTypesAlterComponent} from './components/productTypes/product-types-alter/product-types-alter.component';\nimport {ProductTypesAddComponent} from './components/productTypes/product-types-add/product-types-add.component';\nimport {ProductTypesComponent} from './components/productTypes/product-types/product-types.component';\n\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: '/products/1'},\n  {path: 'products/add', component: ProductsAddComponent, canActivate: [AuthGuardAdminService]},\n  {path: 'products/:productID', component: ProductsComponent},\n  {path: 'products/alter/:id', component: ProductAlterComponent, canActivate: [AuthGuardAdminService]},\n  {path: 'customers', component: CustomersComponent, canActivate: [AuthGuardAdminService]},\n  {path: 'customers/register', component: RegisterCustomerComponent},\n  {path: 'logout', component: LogoutComponent, canActivate: [AuthGuardUserService]},\n  {path: 'cart', component: CartComponent, canActivate: [AuthGuardUserService]},\n  {path: 'orders', component: OrdersComponent, canActivate: [AuthGuardUserService]},\n  {path: 'loginExpired', component: InvalidTokenComponent},\n  {path: 'discounts', component: DiscountsComponent, canActivate: [AuthGuardAdminService]},\n  {path: 'discounts/add', component: DiscountsAddComponent, canActivate: [AuthGuardAdminService]},\n  {path: 'categories/alter', component: ProductTypesAlterComponent, canActivate: [AuthGuardAdminService]},\n  {path: 'categories/add', component: ProductTypesAddComponent, canActivate: [AuthGuardAdminService]},\n  {path: 'categories', component: ProductTypesComponent, canActivate: [AuthGuardAdminService]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oopr-proj-angular';\n}\n","import {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { CustomersComponent } from './components/customers/customers/customers.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { InvalidTokenComponent } from './components/auth/invalid-token/invalid-token.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { LogoutComponent } from './components/auth/logout/logout.component';\nimport { RegisterCustomerComponent } from './components/customers/register-customer/register-customer.component';\nimport { ProductsAddComponent } from './components/products/products-add/products-add.component';\nimport { ProductsComponent } from './components/products/products/products.component';\nimport { ProductAlterComponent } from './components/products/product-alter/product-alter.component';\nimport { CartComponent } from './components/shopping/cart/cart.component';\nimport { OrdersComponent } from './components/shopping/orders/orders.component';\nimport { BasicAuthInterceptionService } from './components/auth/Services/basic-auth-interception.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DiscountsComponent } from './components/discounts/discounts/discounts.component';\nimport { DiscountsAddComponent } from './components/discounts/discounts-add/discounts-add.component';\nimport { DiscountsAlterComponent } from './components/discounts/discounts-alter/discounts-alter.component';\nimport { SideNavComponent } from './components/side-nav/side-nav.component';import { ProductTypesAlterComponent } from './components/productTypes/product-types-alter/product-types-alter.component';\nimport { ProductTypesAddComponent } from './components/productTypes/product-types-add/product-types-add.component';\nimport { ProductTypesComponent } from './components/productTypes/product-types/product-types.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomersComponent,\n    HeaderComponent,\n    InvalidTokenComponent,\n    LoginComponent,\n    LogoutComponent,\n    RegisterCustomerComponent,\n    ProductsAddComponent,\n    ProductsComponent,\n    ProductAlterComponent,\n    CartComponent,\n    OrdersComponent,\n    DiscountsComponent,\n    DiscountsAddComponent,\n    DiscountsAlterComponent,\n    SideNavComponent,\n    ProductTypesAlterComponent,\n    ProductTypesAddComponent,\n    ProductTypesComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptionService, multi: true}\n  ],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthenticationService} from '../authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardAdminService implements CanActivate {\n\n  constructor(private router: Router,\n              private authService: AuthenticationService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const isAdmin = this.authService.isUserAdmin();\n    if (isAdmin) {\n      return true;\n    }\n    this.router.navigate(['products']);\n    return false;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {AuthenticationService} from '../authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardUserService implements CanActivate {\n\n  constructor(private router: Router,\n              private authService: AuthenticationService) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserLoggedIn()) {\n      return true;\n    }\n    this.router.navigate(['products']);\n    return false;\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {Router} from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private router: Router,\n              private httpClient: HttpClient\n  ) {\n  }\n\n  authenticate(username, password) {\n    return this.httpClient.post<any>('http://localhost:8080/api/login', {username, password}).pipe(\n      map(\n        userData => {\n          const tokenStr = 'Bearer ' + userData.token;\n          const isAdmin = userData.admin;\n\n          sessionStorage.setItem('username', username);\n          sessionStorage.setItem('token', tokenStr);\n          sessionStorage.setItem('isAdmin', isAdmin);\n          return userData;\n        }\n      )\n    );\n  }\n\n  changeAdminMode() {\n    if (this.isUserAdmin()) {\n      let isAdminModeS = sessionStorage.getItem('isAdminMode');\n      if (isAdminModeS == null || isAdminModeS === 'false') {\n        isAdminModeS = 'true';\n      } else {\n        isAdminModeS = 'false';\n      }\n      this.router.navigate(['']);\n      sessionStorage.setItem('isAdminMode', isAdminModeS);\n    }\n  }\n\n  isUserLoggedIn(): boolean {\n    const user = sessionStorage.getItem('username');\n    return !(user === null);\n  }\n\n  isUserAdmin(): boolean {\n    const isAdminS = sessionStorage.getItem('isAdmin');\n    return this.isUserLoggedIn() && (isAdminS === 'true');\n  }\n\n  isAdminMode(): boolean {\n    const isAdminModeS = sessionStorage.getItem('isAdminMode');\n    return this.isUserAdmin() && (isAdminModeS === 'true');\n  }\n\n  logout() {\n    sessionStorage.removeItem('cart');\n    sessionStorage.removeItem('cartID');\n    sessionStorage.removeItem('username');\n    sessionStorage.clear();\n  }\n\n  private validateToken(): Observable<boolean> {\n    if (this.isUserLoggedIn()) {\n      const url = 'http://localhost:8080/api/isValidLogin';\n      const param = new HttpParams().set('token', sessionStorage.getItem('token'));\n\n      return this.httpClient.get<boolean>(url, {params: param});\n    }\n  }\n\n  public checkToken() {\n    this.validateToken().subscribe(\n      res => {\n        if (!res) {\n          this.router.navigate(['/loginExpired']);\n        }\n      }\n    );\n  }\n\n  getUsername(): string {\n    return sessionStorage.getItem('username');\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthInterceptionService implements HttpInterceptor {\n\n  constructor() {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    if (sessionStorage.getItem('username') && sessionStorage.getItem('token')) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: sessionStorage.getItem('token')\n        }\n      });\n    }\n    return next.handle(req);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9pbnZhbGlkLXRva2VuL2ludmFsaWQtdG9rZW4uY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-invalid-token',\n  templateUrl: './invalid-token.component.html',\n  styleUrls: ['./invalid-token.component.css']\n})\nexport class InvalidTokenComponent implements OnInit {\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n    setTimeout((router: Router) => {\n      router.navigate(['/logout']);\n    }, 3 * 1000, this.router);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIn0= */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AuthenticationService} from '../Services/authentication.service';\nimport {Router} from '@angular/router';\nimport {OperState} from '../../../model/OperState';\nimport {ShoppingCartService} from '../../shopping/Services/shopping-cart.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n  invalidLogin = false;\n  loadingState = new OperState();\n  @Output() loginFinished = new EventEmitter<boolean>();\n\n  constructor(private router: Router,\n              private loginService: AuthenticationService,\n              private shoppingCartService: ShoppingCartService) {\n  }\n\n  ngOnInit() {\n  }\n\n  sendSuccessfulLogin() {\n    this.loginFinished.emit(true);\n  }\n\n  checkLogin() {\n    if (this.username == null || this.password == null) {\n      this.loadingState.setError('Prosím vyplňte všechny pole');\n    } else {\n      this.loadingState.setWorking();\n      (this.loginService.authenticate(this.username, this.password).subscribe(\n          data => {\n            this.router.navigate(['']);\n            this.invalidLogin = false;\n            this.loadingState.setSuccess();\n            this.shoppingCartService.loadCartIDFromDB();\n            this.sendSuccessfulLogin();\n            this.username = '';\n            this.password = '';\n            this.setStateBack();\n          },\n          error => {\n            this.invalidLogin = true;\n            this.loadingState.setError('Přihlašovací údaje jsou nesprávné');\n          }\n        )\n      );\n    }\n  }\n\n  setStateBack() {\n    setTimeout((state: OperState) => {\n      state.setBack();\n    }, 1300, this.loadingState);\n  }\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYXV0aC9sb2dvdXQvbG9nb3V0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {AuthenticationService} from '../Services/authentication.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private loginService: AuthenticationService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.loginService.logout();\n    sessionStorage.clear();\n    this.router.navigate(['']);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {CustomersVM} from '../../../model/CustomersVM';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  private URL_BASE = 'http://localhost:8080/api/customers';\n\n  constructor(private http: HttpClient) {\n  }\n\n  public get(id: string): Observable<CustomersVM> {\n    const url = this.buildUrl('/get');\n    const httpParams = new HttpParams().set('id', id);\n    return this.http.get<CustomersVM>(url, {params: httpParams});\n  }\n\n  public register(item: CustomersVM, rawPass: string): Observable<number> {\n    const url = this.buildUrl('/create');\n    const param = new HttpParams().set('rawPass', rawPass);\n    const body = item;\n    return this.http.post<number>(url, body, {params: param});\n  }\n\n  public list(): Observable<CustomersVM[]> {\n    const url = this.buildUrl('/list');\n    return this.http.get<CustomersVM[]>(url);\n  }\n\n  private buildUrl(relativeUrl: string): string {\n    return this.URL_BASE + relativeUrl;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3VzdG9tZXJzL2N1c3RvbWVycy9jdXN0b21lcnMuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {OperState} from '../../../model/OperState';\nimport {CustomersVM} from '../../../model/CustomersVM';\nimport {CustomerService} from '../Services/customer.service';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  loadingState = new OperState();\n  customers: CustomersVM[] = [];\n\n  constructor(private customersService: CustomerService) {\n  }\n\n  ngOnInit() {\n    this.loadingState.setWorking();\n    this.customersService.list().subscribe(\n      res => {\n        this.customers = res;\n        this.loadingState.setSuccess();\n      },\n      err => this.loadingState.setError(err)\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3VzdG9tZXJzL3JlZ2lzdGVyLWN1c3RvbWVyL3JlZ2lzdGVyLWN1c3RvbWVyLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {OperState} from '../../../model/OperState';\nimport {CustomersVM} from '../../../model/CustomersVM';\nimport {CustomerService} from '../Services/customer.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register-customer',\n  templateUrl: './register-customer.component.html',\n  styleUrls: ['./register-customer.component.css']\n})\nexport class RegisterCustomerComponent implements OnInit {\n  customerNew: CustomersVM = new CustomersVM();\n  rawPassword: string;\n  rawPasswordControl: string;\n  loadingState = new OperState();\n  @Output() registerFinished = new EventEmitter<boolean>();\n\n  constructor(\n    private customerService: CustomerService) {\n  }\n\n  ngOnInit() {\n  }\n\n  insertNew(): void {\n    if (this.checkForm()) {\n      this.loadingState.setWorking();\n      this.customerService.register(this.customerNew, this.rawPassword).subscribe(\n        res => {\n          this.loadingState.setSuccess();\n          this.sendSuccessfulRegistration();\n          this.setStateBack();\n          this.customerNew = new CustomersVM();\n          this.rawPasswordControl = '';\n          this.rawPassword = '';\n        },\n        err => {\n          this.loadingState.setError('Registrace selhala');\n          console.log(err);\n        }\n      );\n    }\n  }\n\n  sendSuccessfulRegistration() {\n    this.registerFinished.emit(true);\n  }\n\n  checkForm(): boolean {\n    if (this.customerNew.name == null || this.customerNew.username == null ||\n      this.customerNew.email == null || this.customerNew.surname == null ||\n      this.rawPassword == null || this.rawPasswordControl == null) {\n      this.loadingState.setError('Prosím vyplňte všechny pole');\n      return false;\n    }\n    if (!this.validateEmail(this.customerNew.email)) {\n      this.loadingState.setError('E-mail má špatný tvar');\n      return false;\n    }\n    if (this.rawPassword !== this.rawPasswordControl) {\n      this.loadingState.setError('Hesla se musí shodovat');\n      return false;\n    }\n    return true;\n  }\n\n  validateEmail(email: string) {\n    const regexp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n    return regexp.test(email);\n  }\n\n  setStateBack() {\n    setTimeout((state: OperState) => {\n      state.setBack();\n    }, 1300, this.loadingState);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {DiscountsVM} from '../../../model/DiscountsVM';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {observableToBeFn} from 'rxjs/internal/testing/TestScheduler';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiscountsService {\n  private URL_BASE = 'http://localhost:8080/api/discounts';\n\n  constructor(private http: HttpClient) {\n  }\n\n  discountToJSON(disc: DiscountsVM): string {\n    let ret = JSON.stringify(disc);\n    const toReplace = ret.substr(ret.search('datefrom') + 10 + 11, 14);\n    ret = ret.replace(toReplace, '');\n    ret = ret.replace(toReplace, '');\n    return ret;\n  }\n\n  create(discount: DiscountsVM): Observable<DiscountsVM> {\n    const url = this.buildUrl('/create');\n    const param = new HttpParams().set('discountString', this.discountToJSON(discount));\n\n    return this.http.post<DiscountsVM>(url, null, {params: param});\n  }\n\n  test(discount: DiscountsVM): Observable<DiscountsVM> {\n    const url = this.buildUrl('/test');\n    const param = new HttpParams().set('discountString', this.discountToJSON(discount));\n\n    return this.http.get<DiscountsVM>(url, {params: param});\n  }\n\n  list(): Observable<DiscountsVM[]> {\n    const url = this.buildUrl('/list');\n\n    return this.http.get<DiscountsVM[]>(url);\n  }\n\n  private buildUrl(relativeUrl: string) {\n    return this.URL_BASE + relativeUrl;\n  }\n\n  getDiscountFromReturn(disc: DiscountsVM) {\n    const ret = disc;\n    ret.datefrom = new Date(disc.datefrom);\n    ret.dateto = new Date(disc.dateto);\n    return ret;\n  }\n\n  dateToUserFriendlyStr(date: Date) {\n    return date.getDate() + '. ' + (date.getMonth() + 1) + '. ' + date.getFullYear();\n  }\n\n  delete(discountID: number) {\n    const url = this.buildUrl('/delete');\n    const param = new HttpParams().set('discountID', JSON.stringify(discountID));\n\n    return this.http.delete<void>(url, {params: param});\n  }\n\n  alterDiscount(discount: DiscountsVM): Observable<void> {\n    const url = this.buildUrl('/update');\n    const param = new HttpParams().set('discountString', this.discountToJSON(discount));\n\n    return this.http.patch<void>(url, null, {params: param});\n  }\n}\n","export class DiscountAddCompState {\r\n  private static CREATE = 1;\r\n  private static BADDISC = 2;\r\n  private static SHOWFINDISC = 3;\r\n  private state = 0;\r\n\r\n  public setCreate() {\r\n    this.state = DiscountAddCompState.CREATE;\r\n  }\r\n\r\n  public setBadDiscount() {\r\n    this.state = DiscountAddCompState.BADDISC;\r\n  }\r\n\r\n  public setShowFinishedDiscount() {\r\n    this.state = DiscountAddCompState.SHOWFINDISC;\r\n  }\r\n\r\n  public isCreate() {\r\n    return this.state === DiscountAddCompState.CREATE || this.isBadDiscount();\r\n  }\r\n\r\n  public isBadDiscount() {\r\n    return this.state === DiscountAddCompState.BADDISC;\r\n  }\r\n\r\n  public isShowFinishedDiscount() {\r\n    return this.state === DiscountAddCompState.SHOWFINDISC;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlzY291bnRzL2Rpc2NvdW50cy1hZGQvZGlzY291bnRzLWFkZC5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {ProductsService} from '../../products/Services/products.service';\nimport {DiscountsService} from '../Services/discounts.service';\nimport {OperState} from '../../../model/OperState';\nimport {DiscountAddCompState} from './DiscountAddCompState';\nimport {ProductsVM} from '../../../model/ProductsVM';\nimport {DiscountsVM} from '../../../model/DiscountsVM';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-discounts-add',\n  templateUrl: './discounts-add.component.html',\n  styleUrls: ['./discounts-add.component.css']\n})\nexport class DiscountsAddComponent implements OnInit {\n  loadingState: OperState = new OperState();\n  componentState: DiscountAddCompState = new DiscountAddCompState();\n  products: ProductsVM[] = [];\n  selectedProduct: ProductsVM;\n\n  discountPercent: number;\n  discountPrice: number;\n\n  finishedDiscount: DiscountsVM;\n\n  min: string = new Date().toJSON().slice(0, 10);\n  dateFrom: string = this.min;\n  dateTo: string = this.min;\n\n  constructor(private productsService: ProductsService,\n              private discountsService: DiscountsService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.loadingState.setWorking();\n    this.productsService.listAll(true).subscribe(\n      products => {\n        this.products = products;\n        this.loadingState.setSuccess();\n        this.selectedProduct = this.products[0];\n      },\n      err => this.loadingState.setError(err)\n    );\n    this.discountPercent = 0;\n    this.componentState.setCreate();\n  }\n\n  getDateFromString(date: string) {\n    return new Date(date);\n  }\n\n  selectProductCreating(event: any) {\n    const productID: number = parseInt(event.target.value, 10);\n    this.selectedProduct = this.products.find(p => p.id === productID);\n    this.updateDiscountProductChange();\n  }\n\n  updateDiscountProductChange() {\n    this.discountPrice = this.selectedProduct.price - (this.selectedProduct.price * this.discountPercent / 100);\n  }\n\n  updateDiscount(event: any) {\n    this.discountPercent = parseInt(event.target.value, 10);\n    this.discountPrice = (this.selectedProduct.price * (1 - (this.discountPercent / 100)));\n  }\n\n  checkDateTo() {\n    const from = new Date(this.dateFrom);\n    const to = new Date(this.dateTo);\n    if (from > to) {\n      this.dateTo = this.dateFrom;\n    }\n  }\n\n  createDiscount() {\n    console.log(this.checkDate());\n    console.log(this.discountPercent);\n    if (this.checkDate() && this.discountPercent > 0) {\n      const discount = new DiscountsVM();\n      discount.productId = this.selectedProduct.id;\n      discount.percent = this.discountPercent;\n      discount.dateto = new Date(this.dateTo);\n      discount.datefrom = new Date(this.dateFrom);\n\n      this.loadingState.setWorking();\n      this.discountsService.create(discount).subscribe(\n        res => {\n          this.loadingState.setSuccess();\n          this.finishedDiscount = this.discountsService.getDiscountFromReturn(res);\n          this.selectedProduct = this.products.find(p => p.id === this.finishedDiscount.productId);\n          this.discountPercent = this.finishedDiscount.percent;\n          this.updateDiscountProductChange();\n          this.componentState.setShowFinishedDiscount();\n          this.showAll();\n        },\n        err => {\n          this.loadingState.setError(err);\n          console.log(err);\n        }\n      );\n    } else {\n      this.componentState.setBadDiscount();\n    }\n  }\n\n  checkDate(): boolean {\n    const from = new Date(this.dateFrom);\n    const to = new Date(this.dateTo);\n    const now = new Date(JSON.stringify(new Date()).substr(1, 10));\n    if (from.getTime() > to.getTime() || from.getTime() < now.getTime() || to.getTime() < now.getTime()) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  showAll() {\n    setTimeout((router: Router) => {\n      router.navigate(['discounts'])}, 2000, this.router\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlzY291bnRzL2Rpc2NvdW50cy1hbHRlci9kaXNjb3VudHMtYWx0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {OperState} from '../../../model/OperState';\nimport {DiscountsService} from '../Services/discounts.service';\nimport {DiscountsVM} from '../../../model/DiscountsVM';\nimport {ProductsVM} from '../../../model/ProductsVM';\nimport {ProductsService} from '../../products/Services/products.service';\n\n@Component({\n  selector: 'app-discounts-alter',\n  templateUrl: './discounts-alter.component.html',\n  styleUrls: ['./discounts-alter.component.css']\n})\nexport class DiscountsAlterComponent implements OnInit {\n  loadingState: OperState = new OperState();\n  @Input('discountToAlter') originalDiscount: DiscountsVM;\n  @Input('selectedProduct') productToDiscount: ProductsVM;\n  @Output() finishedAlterDiscount = new EventEmitter<DiscountsVM>();\n  @Output() showAll = new EventEmitter<boolean>();\n  discountPrice: number;\n  alteredDiscount: DiscountsVM;\n\n  min: string = new Date().toJSON().slice(0, 10);\n\n  constructor(private discountsService: DiscountsService,\n              private productsService: ProductsService) {\n  }\n\n  ngOnInit() {\n    this.alteredDiscount = this.originalDiscount;\n    this.discountPrice = this.productToDiscount.price * (1 - (this.alteredDiscount.percent / 100));\n  }\n\n  updateDiscount(event: any) {\n    this.alteredDiscount.percent = parseInt(event.target.value, 10);\n    this.discountPrice = this.productToDiscount.price * (1 - (this.alteredDiscount.percent / 100));\n  }\n\n  changeDateFrom(event: any) {\n    this.alteredDiscount.datefrom = new Date(event.target.value);\n    this.checkDateTo();\n  }\n\n  private checkDateTo() {\n    if (this.alteredDiscount.datefrom > this.alteredDiscount.dateto) {\n      this.alteredDiscount.dateto = this.alteredDiscount.datefrom;\n    }\n  }\n\n  changeDateTo(event: any) {\n    this.alteredDiscount.dateto = new Date(event.target.value);\n  }\n\n  getMinDateTo(): string {\n    return this.alteredDiscount.datefrom.toJSON().slice(0, 10);\n  }\n\n  alterDiscount() {\n    this.discountsService.alterDiscount(this.alteredDiscount).subscribe(\n      res => {\n        this.loadingState.setSuccess();\n        this.finishedAlterDiscount.emit(this.alteredDiscount);\n        setTimeout((showAll: EventEmitter<boolean>) => {\n          showAll.emit(true);\n        }, 2000, this.showAll);\n      },\n      err => this.loadingState.setError(err)\n    );\n  }\n\n  showAllDiscounts() {\n    this.showAll.emit(true);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGlzY291bnRzL2Rpc2NvdW50cy9kaXNjb3VudHMuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, OnInit} from '@angular/core';\nimport {ProductsService} from '../../products/Services/products.service';\nimport {DiscountsService} from '../Services/discounts.service';\nimport {ProductsVM} from '../../../model/ProductsVM';\nimport {OperState} from '../../../model/OperState';\nimport {DiscountsVM} from '../../../model/DiscountsVM';\n\n@Component({\n  selector: 'app-discounts',\n  templateUrl: './discounts.component.html',\n  styleUrls: ['./discounts.component.css']\n})\nexport class DiscountsComponent implements OnInit {\n  loadingState: OperState = new OperState();\n  products: ProductsVM[] = [];\n  selectedProduct: ProductsVM;\n  discountsOnGoing: DiscountsVM[] = [];\n  discountsPast: DiscountsVM[] = [];\n  discountsFuture: DiscountsVM[] = [];\n  discountsAll: DiscountsVM[] = [];\n\n  discountPercent: number;\n  discountPrice: number;\n  isAlterDiscount: boolean;\n  focusedDiscount: DiscountsVM;\n\n  constructor(private productsService: ProductsService,\n              private discountsService: DiscountsService) {\n  }\n\n  ngOnInit() {\n    this.loadingState.setWorking();\n    this.discountsService.list().subscribe(\n      discounts => {\n        discounts.map<DiscountsVM>(d => this.discountsService.getDiscountFromReturn(d))\n          .forEach(d => {\n            this.addDiscount(d);\n            this.discountsAll.push(d);\n          });\n        this.productsService.listAll(true).subscribe(\n          products => {\n            this.products = products;\n            this.loadingState.setSuccess();\n            this.selectedProduct = this.products[0];\n          },\n          err => this.loadingState.setError(err)\n        );\n      },\n      err => this.loadingState.setError(err)\n    );\n    this.discountPercent = 0;\n  }\n\n  updateSelectedDiscount(discount: DiscountsVM) {\n    this.discountPercent = discount.percent;\n    this.selectedProduct = this.products.find(p => p.id === discount.productId);\n    this.discountPrice = this.selectedProduct.price - (this.selectedProduct.price * this.discountPercent / 100);\n  }\n\n  alterDiscount(discountID: number) {\n    this.focusedDiscount = this.discountsFuture.find(d => d.id === discountID);\n    this.selectedProduct = this.products.find(p => p.id === this.focusedDiscount.productId);\n    this.isAlterDiscount = true;\n  }\n\n  finishAlteration($event: DiscountsVM) {\n    const discountTemp = $event;\n    const discount = this.discountsFuture.find(d => d.id === discountTemp.id);\n\n    discount.percent = discountTemp.percent;\n    discount.datefrom = discountTemp.datefrom;\n    discount.dateto = discountTemp.dateto;\n  }\n\n  showAllDiscounts($event: boolean) {\n    this.isAlterDiscount = false;\n  }\n\n  addDiscount(discount: DiscountsVM) {\n    const today = new Date(new Date().toJSON().slice(0, 10));\n    if (discount.datefrom <= today) {\n      if (discount.dateto >= today) {\n        this.discountsOnGoing.push(discount);\n      } else {\n        this.discountsPast.push(discount);\n      }\n    } else {\n      this.discountsFuture.push(discount);\n    }\n  }\n\n  prepareModalDelete(dicsountID: number) {\n    this.focusedDiscount = this.discountsFuture.find(d => d.id === dicsountID);\n  }\n\n  deleteDiscount(discountID: number) {\n    this.discountsService.delete(discountID).subscribe(\n      res => {\n        this.discountsFuture.splice(\n          this.discountsFuture.findIndex(d => d.id === discountID), 1\n        );\n      }\n    );\n  }\n\n  loadProductDiscounts(event: any) {\n    const productID: number = parseInt(event.target.value, 10);\n    this.discountsFuture = [];\n    this.discountsOnGoing = [];\n    this.discountsPast = [];\n    if (productID >= 0) {\n      this.discountsAll.filter(d => d.productId === productID)\n        .forEach(d => this.addDiscount(d));\n    } else {\n      this.discountsAll.forEach(d => this.addDiscount(d));\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIn0= */\"","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {AuthenticationService} from '../auth/Services/authentication.service';\nimport {ShoppingCartService} from '../shopping/Services/shopping-cart.service';\nimport {Router} from '@angular/router';\nimport {LoginComponent} from '../auth/login/login.component';\nimport {RegisterCustomerComponent} from '../customers/register-customer/register-customer.component';\nimport {log} from 'util';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  itemsInCart: number;\n  @ViewChild(LoginComponent, {static: false}) loginComp;\n  @ViewChild(RegisterCustomerComponent, {static: false}) registerComp;\n  @ViewChild('loginFormCloseButton', {static: true}) loginFormCloseButton: ElementRef;\n  @ViewChild('registerFormCloseButton', {static: true}) registerFormCloseButton: ElementRef;\n  @ViewChild('loginFormOpenButton', {static: false}) loginFormOpenButton: ElementRef;\n\n  constructor(private loginService: AuthenticationService,\n              private shoppingCartService: ShoppingCartService,\n              private router: Router) {\n    this.shoppingCartService.itemsInCart.subscribe(itemsInCart => this.itemsInCart = itemsInCart);\n  }\n\n  ngOnInit() {\n    if (this.loginService.isUserLoggedIn()) {\n      this.checkLogin();\n      this.itemsInCart = this.shoppingCartService.getItemsAmount();\n      this.shoppingCartService.itemsInCart.subscribe(itemsInCart => this.itemsInCart = itemsInCart);\n    }\n  }\n\n  closeLoginFormMessage($event) {\n    if ($event) {\n      setTimeout((closeButton: ElementRef) => {\n          closeButton.nativeElement.click();\n        }\n        , 1000, this.loginFormCloseButton);\n    }\n  }\n\n  closeRegisterFormMessage($event) {\n    if ($event) {\n      setTimeout((closeButton: ElementRef, openButton: ElementRef) => {\n          closeButton.nativeElement.click();\n          openButton.nativeElement.click();\n        }\n        , 1000, this.registerFormCloseButton, this.loginFormOpenButton);\n    }\n  }\n\n  changeAdminMode() {\n    this.loginService.changeAdminMode();\n  }\n\n  checkLogin() {\n    this.loginService.checkToken();\n    setTimeout(function func(loginservice: AuthenticationService) {\n      if (loginservice.isUserLoggedIn()) {\n        loginservice.checkToken();\n      }\n      setTimeout(func, 1000 * 60, loginservice);\n    },\n      1000 * 60, this.loginService);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ProductTypeVM} from '../../../model/ProductTypeVM';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductTypesService {\n  private URL_BASE = 'http://localhost:8080/api/productTypes';\n\n  constructor(private http: HttpClient) {\n  }\n\n  private buildUrl(relativeUrl: string) {\n    return this.URL_BASE + relativeUrl;\n  }\n\n  public get(id: string): Observable<ProductTypeVM> {\n    const url = this.buildUrl('/get');\n    const httpParams = new HttpParams().set('id', id);\n\n    return this.http.get<ProductTypeVM>(url, {params: httpParams});\n  }\n\n  public add(item: ProductTypeVM): Observable<ProductTypeVM> {\n    const url = this.buildUrl('/add');\n\n    return this.http.post<ProductTypeVM>(url, item);\n  }\n\n  public update(item: ProductTypeVM): Observable<void> {\n    const url = this.buildUrl('/update');\n\n    return this.http.patch<void>(url, item);\n  }\n\n  public list(): Observable<ProductTypeVM[]> {\n    const url = this.buildUrl('/list');\n\n    return this.http.get<ProductTypeVM[]>(url);\n  }\n\n  public getCount(id: string, selling: boolean): Observable<number> {\n    let url = this.buildUrl('/getCount');\n    if (selling) {\n      url += '/selling';\n    } else {\n      url += '/notSelling';\n    }\n    const httpParams = new HttpParams().set('id', id);\n\n    return this.http.get<number>(url, {params: httpParams});\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdFR5cGVzL3Byb2R1Y3QtdHlwZXMtYWRkL3Byb2R1Y3QtdHlwZXMtYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ProductTypesService} from '../Services/product-types.service';\nimport {Router} from '@angular/router';\nimport {OperState} from '../../../model/OperState';\nimport {ProductTypeVM} from '../../../model/ProductTypeVM';\nimport {ProductsVM} from '../../../model/ProductsVM';\n\n@Component({\n  selector: 'app-product-types-add',\n  templateUrl: './product-types-add.component.html',\n  styleUrls: ['./product-types-add.component.css']\n})\nexport class ProductTypesAddComponent implements OnInit {\n\n  private loadingState = new OperState();\n  private workinsState = new OperState();\n  private productType = new ProductTypeVM();\n  private productTypesInDB: ProductTypeVM[];\n\n  constructor(\n    private productTypesService: ProductTypesService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.loadingState.setWorking();\n    this.productTypesService.list().subscribe(\n      pt => {\n        this.productTypesInDB = pt;\n        this.loadingState.setSuccess();\n        this.workinsState.setWorking();\n      },\n      err => {\n        this.loadingState.setError(err);\n      }\n    );\n  }\n\n  checkFrom(): boolean {\n    if (this.productType.typeName == null || this.productType.typeName.replace(/\\s/g, '') === '') {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  checkName(): boolean {\n    if (this.productTypesInDB.find(pt => pt.typeName === this.productType.typeName) != null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  insertNew() {\n    if (!this.checkFrom()) {\n      this.workinsState.setError('Špatně vyplněný formulář. Prosím vyplňte všechny pole.');\n      return;\n    }\n    if (!this.checkName()) {\n      this.workinsState.setError('Kategorie s tímto jménem již existuje.');\n      return;\n    }\n    this.productTypesService.add(this.productType).subscribe(\n      res => {\n        this.workinsState.setSuccess();\n      }\n    );\n    this.finish();\n  }\n\n  private finish() {\n    setTimeout((router: Router) => {\n      router.navigate(['/products/1']);\n    }, 2000, this.router);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdFR5cGVzL3Byb2R1Y3QtdHlwZXMtYWx0ZXIvcHJvZHVjdC10eXBlcy1hbHRlci5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {ProductTypeVM} from '../../../model/ProductTypeVM';\nimport {OperState} from '../../../model/OperState';\nimport {ProductTypesService} from '../Services/product-types.service';\n\n@Component({\n  selector: 'app-product-types-alter',\n  templateUrl: './product-types-alter.component.html',\n  styleUrls: ['./product-types-alter.component.css']\n})\nexport class ProductTypesAlterComponent implements OnInit {\n\n  private productTypes: ProductTypeVM[];\n  private loadingState = new OperState();\n  private changingIndex = -1;\n  private workingOn = -1;\n\n  constructor(private productTypesService: ProductTypesService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.loadingState.setWorking();\n    this.productTypesService.list().subscribe(\n      ptList => {\n        this.productTypes = ptList;\n        this.loadingState.setSuccess();\n      },\n      err => this.loadingState.setError(err)\n    );\n  }\n\n  trackByIndex(index: number, obj: any): any {\n    return index;\n  }\n\n  changingType(index: number) {\n    this.changingIndex = index;\n  }\n\n  saveChanges(index: number) {\n    const type = this.productTypes[index];\n    this.workingOn = index;\n    this.productTypesService.update(type).subscribe(\n      res => {\n        this.workingOn = -1;\n        this.changingIndex = -1;\n      }\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdFR5cGVzL3Byb2R1Y3QtdHlwZXMvcHJvZHVjdC10eXBlcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-types',\n  templateUrl: './product-types.component.html',\n  styleUrls: ['./product-types.component.css']\n})\nexport class ProductTypesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Observable, observable} from 'rxjs';\nimport {ProductsVM} from '../../../model/ProductsVM';\nimport {HttpClient, HttpParams} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n  private URL_BASE = 'http://localhost:8080/api/products';\n\n  constructor(private http: HttpClient) {\n  }\n\n  public get(id: string): Observable<ProductsVM> {\n    const url = this.buildUrl('/get');\n    const httpParams = new HttpParams().set('id', id);\n    return this.http.get<ProductsVM>(url, {params: httpParams});\n  }\n\n  public add(item: ProductsVM): Observable<ProductsVM> {\n    const url = this.buildUrl('/add');\n\n    return this.http.post<ProductsVM>(url, item);\n  }\n\n  public list(startIndex: string, count: string, productTypeId: string, selling: boolean): Observable<ProductsVM[]> {\n    let url = this.buildUrl('/list');\n    if (selling) {\n      url += '/Selling/byType';\n    } else {\n      url += '/NotSelling/byType';\n    }\n    let httpParams = new HttpParams().set('startIndex', startIndex);\n    httpParams = httpParams.set('count', count);\n    httpParams = httpParams.set('productTypeId', productTypeId);\n\n    return this.http.get<ProductsVM[]>(url, {params: httpParams});\n  }\n  public listAll(selling: boolean): Observable<ProductsVM[]>{\n    let url = this.buildUrl('/list');if (selling) {\n      url += '/Selling';\n    } else {\n      url += '/NotSelling';\n    }\n\n    return this.http.get<ProductsVM[]>(url);\n  }\n\n  private buildUrl(relativeUrl: string): string {\n    return this.URL_BASE + relativeUrl;\n  }\n\n  public getPictureUrl(product: ProductsVM): string {\n    const url = product.pictureUrl;\n    const regExp = /[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi;\n    if (url == null || !url.match(regExp)) {\n      return 'https://www.dia.org/sites/default/files/No_Img_Avail.jpg';\n    } else {\n      return product.pictureUrl;\n    }\n  }\n\n  putOutOfSale(productID: number): Observable<void> {\n    const url = this.buildUrl('/putOutOfSale');\n    const param = new HttpParams().set('productID', JSON.stringify(productID));\n\n    return this.http.patch<void>(url, null, {params: param});\n  }\n\n  putOnSale(productID: number): Observable<void> {\n    const url = this.buildUrl('/putOnSale');\n    const param = new HttpParams().set('productID', JSON.stringify(productID));\n\n    return this.http.patch<void>(url, null, {params: param});\n  }\n\n  alterProduct(product: ProductsVM): Observable<void> {\n    const url = this.buildUrl('/update');\n\n    return this.http.patch<void>(url, product);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdHMvcHJvZHVjdC1hbHRlci9wcm9kdWN0LWFsdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ProductsVM} from '../../../model/ProductsVM';\nimport {ProductsService} from '../Services/products.service';\nimport {OperState} from '../../../model/OperState';\nimport {ProductTypeVM} from '../../../model/ProductTypeVM';\nimport {ProductTypesService} from '../../productTypes/Services/product-types.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-product-alter',\n  templateUrl: './product-alter.component.html',\n  styleUrls: ['./product-alter.component.css']\n})\nexport class ProductAlterComponent implements OnInit {\n  @Input('productToAlter') originalProduct: ProductsVM;\n  @Output() showAll = new EventEmitter<boolean>();\n  private productTypes: ProductTypeVM[];\n  private productToAlter: ProductsVM = new ProductsVM();\n  private loadingState: OperState = new OperState();\n  private sendingState: OperState = new OperState();\n  @Output() finishedAlterProduct = new EventEmitter<ProductsVM>();\n\n  constructor(private productsService: ProductsService,\n              private productTypesService: ProductTypesService,\n              private activatedRoute: ActivatedRoute,\n  ) {\n  }\n\n  ngOnInit() {\n    this.loadingState.setWorking();\n    this.activatedRoute.params.subscribe(params => {\n      this.productsService.get(params.id).subscribe(\n        product => {\n          this.productToAlter = product;\n          this.productTypesService.list().subscribe(\n            res => {\n              this.productTypes = res;\n              this.loadingState.setSuccess();\n            },\n            err => {\n              this.loadingState.setError(err);\n            }\n          );\n        },\n        err => this.loadingState.setError(err)\n      );\n    });\n  }\n\n  test() {\n    console.log(this.originalProduct);\n  }\n\n  showAllProducts() {\n    this.showAll.emit(true);\n  }\n\n  changeProductType(event: any) {\n    this.productToAlter.productTypeId = parseInt(event.target.value, 10);\n  }\n\n  alterProduct() {\n    this.sendingState.setWorking();\n    this.productsService.alterProduct(this.productToAlter).subscribe(\n      res => {\n        this.sendingState.setSuccess();\n        // this.finishedAlterProduct.emit(this.productToAlter);\n        /*setTimeout((showAll: EventEmitter<boolean>) => {\n          showAll.emit(true);\n        }, 2000, this.showAll);*/\n      },\n\n      err => this.loadingState.setError(err)\n    );\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdHMvcHJvZHVjdHMtYWRkL3Byb2R1Y3RzLWFkZC5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {ProductsVM} from '../../../model/ProductsVM';\nimport {OperState} from '../../../model/OperState';\nimport {ProductsService} from '../Services/products.service';\nimport {Router} from '@angular/router';\nimport {ProductTypesService} from '../../productTypes/Services/product-types.service';\nimport {ProductTypeVM} from '../../../model/ProductTypeVM';\n\n@Component({\n  selector: 'app-products-add',\n  templateUrl: './products-add.component.html',\n  styleUrls: ['./products-add.component.css']\n})\nexport class ProductsAddComponent implements OnInit {\n  product: ProductsVM = new ProductsVM();\n  productTypes: ProductTypeVM[];\n  loadingState = new OperState();\n  finished: boolean;\n\n  constructor(\n    private productsService: ProductsService,\n    private productTypesService: ProductTypesService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.loadingState.setWorking();\n    this.productTypesService.list().subscribe(\n      res => {\n        this.productTypes = res;\n      },\n      err => {\n        this.loadingState.setError(err);\n      }\n    );\n  }\n\n  checkForm(): boolean {\n    if (this.product.name == null || this.product.price == null || this.product.pictureUrl == null || this.product.price <= 0) {\n      return false;\n    }\n    return true;\n  }\n\n  changeProductType(event: any) {\n    this.product.productTypeId = parseInt(event.target.value, 10);\n  }\n\n  insertNew(): void {\n    if (this.product.id) {\n      console.log('Error: not a new item, cannot be inserted.');\n      return;\n    }\n    if (!this.checkForm()) {\n      this.loadingState.setError('Špatně vyplněný formulář. Prosím, vyplňte všechny pole.');\n    } else {\n      this.loadingState.setWorking();\n      this.productsService.add(this.product).subscribe(\n        res => {\n          this.loadingState.setSuccess();\n          this.finish(res);\n        },\n        err => {\n          this.loadingState.setError('Špatné spojení se serverem');\n          console.log(err);\n        }\n      );\n    }\n  }\n\n  private finish(finishedProduct: ProductsVM) {\n    this.finished = true;\n    this.product = finishedProduct;\n    setTimeout((router: Router) => {\n      router.navigate(['/products/1']);\n    }, 2000, this.router);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdHMvcHJvZHVjdHMvcHJvZHVjdHMuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {OperState} from '../../../model/OperState';\nimport {ProductsService} from '../Services/products.service';\nimport {ProductsVM} from '../../../model/ProductsVM';\nimport {ShoppingCartService} from '../../shopping/Services/shopping-cart.service';\nimport {AuthenticationService} from '../../auth/Services/authentication.service';\nimport {log} from 'util';\nimport {ProductTypeVM} from '../../../model/ProductTypeVM';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ProductTypesService} from '../../productTypes/Services/product-types.service';\nimport {Observable} from 'rxjs';\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  ITEMSPERPAGE = 3;\n\n  private productType: ProductTypeVM;\n  private loadingProductState = new OperState();\n  private loadingTypeState = new OperState();\n  private loadingMoreProductsState = new OperState();\n  private products: ProductsVM[] = [];\n  private adminProducts: ProductsVM[] = [];\n  private pages: number[] = [];\n  private showAdminProducts = false;\n  private focusedProduct: ProductsVM;\n  private amountToAdd = 1;\n  private currentPage: number;\n  private totalPrice: number;\n\n  constructor(private productService: ProductsService,\n              private productTypesService: ProductTypesService,\n              private shoppingCartService: ShoppingCartService,\n              private loginService: AuthenticationService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n  ) {\n  }\n\n  ngOnInit() {\n    this.showAdminProducts = false;\n    this.loadAll();\n  }\n\n  loadAll() {\n    this.loadingTypeState.setWorking();\n    this.loadingProductState.setWorking();\n    this.activatedRoute.params.subscribe(\n      params => {\n        this.productTypesService.get(params.productID).subscribe(\n          productType => {\n            this.productType = productType;\n            this.productTypesService.getCount(JSON.stringify(this.productType.id), !this.showAdminProducts).subscribe(\n              count => {\n                this.fillPages(count);\n                this.loadPage(1);\n                this.loadingTypeState.setSuccess();\n              },\n              err => this.loadingTypeState.setError(err)\n            );\n          },\n          err => this.loadingTypeState.setError(err)\n        );\n      },\n      err => this.loadingTypeState.setError(err)\n    );\n  }\n\n  changeShowAdminProducts() {\n    this.showAdminProducts = !this.showAdminProducts;\n    this.loadAll();\n  }\n\n  private loadProducts(startIndex: number, count: number): Observable<ProductsVM[]> {\n    return this.productService.list(\n      JSON.stringify(startIndex),\n      JSON.stringify(count),\n      JSON.stringify(this.productType.id), !this.showAdminProducts);\n  }\n\n  loadMore() {\n    const start = (this.currentPage) * this.ITEMSPERPAGE;\n    this.loadingMoreProductsState.setWorking();\n    this.loadProducts(start, this.ITEMSPERPAGE).subscribe(\n      tempList => {\n        for (const product of tempList) {\n          this.products.push(product);\n        }\n        this.currentPage++;\n        this.loadingMoreProductsState.setSuccess();\n      }\n    );\n  }\n\n  loadPage(page: number) {\n    this.currentPage = page;\n    this.products = [];\n    const start = (page - 1) * this.ITEMSPERPAGE;\n    this.loadingProductState.setWorking();\n    this.loadProducts(start, this.ITEMSPERPAGE).subscribe(\n      products => {\n        this.products = products;\n        this.loadingProductState.setSuccess();\n      }\n    );\n  }\n\n  fillPages(totalCount: number) {\n    this.pages = [];\n    for (let i = 0; i < totalCount / this.ITEMSPERPAGE; i++) {\n      this.pages.push(i + 1);\n    }\n  }\n\n  focusProduct(productID: number) {\n    this.focusedProduct = this.products.find(p => p.id === productID);\n    if (this.focusedProduct == null) {\n      this.focusedProduct = this.adminProducts.find(p => p.id === productID);\n    }\n    this.amountToAdd = 1;\n  }\n\n  addToCart() {\n    this.shoppingCartService.addItem(this.focusedProduct.id, this.amountToAdd);\n  }\n\n  changeTempProductSale(PID: number) {\n    let arrayFrom: ProductsVM[];\n    let arrayTo: ProductsVM[];\n    if (this.products.findIndex(p => p.id === PID) < 0) {\n      arrayFrom = this.adminProducts;\n      arrayTo = this.products;\n    } else {\n      arrayFrom = this.products;\n      arrayTo = this.adminProducts;\n    }\n    const productTemp: ProductsVM = arrayFrom.find(p => p.id === PID);\n    productTemp.selling = !productTemp.selling;\n    arrayFrom.splice(arrayFrom.findIndex(p => p.id === PID), 1);\n    arrayTo.push(productTemp);\n    // this.fillPages();\n    this.loadPage(this.currentPage);\n  }\n\n  putProductOut() {\n    this.productService.putOutOfSale(this.focusedProduct.id).subscribe(\n      res => this.changeTempProductSale(this.focusedProduct.id),\n      err => this.loadingProductState.setError(err)\n    );\n  }\n\n  putProductBack() {\n    this.productService.putOnSale(this.focusedProduct.id).subscribe(\n      res => this.changeTempProductSale(this.focusedProduct.id),\n      err => this.loadingProductState.setError(err)\n    );\n  }\n\n  alterProduct(productID: number) {\n    this.router.navigate(['products/alter', productID]);\n  }\n\n  amountChanged() {\n    if (this.amountToAdd < 1 || this.amountToAdd == null) {\n      this.amountToAdd = 1;\n    }\n    this.totalPrice = this.focusedProduct.discountPrice * this.amountToAdd;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {OrdersVM} from '../../../model/OrdersVM';\nimport {OrdersProductsVM} from '../../../model/OrdersProductsVM';\nimport {OrderAddrVM} from '../../../model/OrderAddrVM';\nimport {ProductsVM} from '../../../model/ProductsVM';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  private URL_BASE = 'http://localhost:8080/api/orders';\n\n  constructor(private http: HttpClient) {\n  }\n\n  public get(orderID: string): Observable<OrdersVM> {\n    const url = this.buildUrl('/get');\n    const httpParams = new HttpParams().set('orderID', orderID);\n    return this.http.get<OrdersVM>(url, {params: httpParams});\n  }\n\n  public getUsersCartID(): Observable<number> {\n    const url = this.buildUrl('/getCartID');\n    const httpParams = new HttpParams().set('username', sessionStorage.getItem('username'));\n    return this.http.get<number>(url, {params: httpParams});\n  }\n\n  public emptyCart() {\n    const url = this.buildUrl('/emptyCart');\n    const param: HttpParams = new HttpParams().set('username', sessionStorage.getItem('username'));\n\n    this.http.delete(url, {params: param}).subscribe();\n  }\n\n  public getUsersOrders(): Observable<OrdersVM[]> {\n    const url = this.buildUrl('/listByUsername');\n    const param = new HttpParams().set('username', sessionStorage.getItem('username'));\n\n    return this.http.get<OrdersVM[]>(url, {params: param});\n  }\n\n  public getOrderItems(orderID: string): Observable<OrdersProductsVM[]> {\n    const url = this.buildUrl('/itemsList');\n\n    const param = new HttpParams().set('orderID', orderID);\n\n    return this.http.get<OrdersProductsVM[]>(url, {params: param});\n  }\n\n  public getAllOrders(): Observable<OrdersVM[]> {\n    const url = this.buildUrl('/listUnfinished');\n\n    return this.http.get<OrdersVM[]>(url);\n  }\n\n  public addToCart(cartItem: OrdersProductsVM): Observable<number> {\n    const url = this.buildUrl('/addToCart');\n    const param = new HttpParams().set('username', sessionStorage.getItem('username'));\n\n    return this.http.post<number>(url, cartItem, {params: param});\n  }\n\n  public updateCartItemAmount(productID: string, newAmount: string){\n    const url = this.buildUrl('/updateCartItemAmount');\n    const param: HttpParams = new HttpParams().set('username', sessionStorage.getItem('username'))\n      .append('productID', productID)\n      .append('newAmount', newAmount);\n\n    this.http.patch(url, null, {params: param}).subscribe();\n  }\n\n  public orderCart(address: OrderAddrVM): Observable<OrdersVM> {\n    const url = this.buildUrl('/order');\n    const body = address;\n    const param = new HttpParams().set('username', sessionStorage.getItem('username'));\n\n    return this.http.post<OrdersVM>(url, body, {params: param});\n  }\n\n  private buildUrl(relativeUrl: string) {\n    return this.URL_BASE + relativeUrl;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {OrdersProductsVM} from '../../../model/OrdersProductsVM';\nimport {ProductsService} from '../../products/Services/products.service';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {OrdersService} from './orders.service';\nimport {AuthenticationService} from '../../auth/Services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n\n  private itemsInCartSource = new BehaviorSubject(this.getItemsAmount());\n  itemsInCart = this.itemsInCartSource.asObservable();\n\n  constructor(private productsService: ProductsService,\n              private ordersService: OrdersService,\n              private loginService: AuthenticationService) {\n    if (this.loginService.isUserLoggedIn()) {\n      this.updateCart();\n    }\n  }\n\n  private changeItemsInCart() {\n    this.itemsInCartSource.next(this.getItemsAmount());\n  }\n\n  public getItemsAmount(): number {\n    const cart = JSON.parse(sessionStorage.getItem('cart'));\n    if (cart == null) {\n      return 0;\n    } else {\n      return cart.length;\n    }\n  }\n\n\n  /*private createCart(): Array<OrdersProductsVM> {\n    const cart = new Array<OrdersProductsVM>();\n    this.ordersService.createCart().subscribe(\n      orderID => {\n        sessionStorage.setItem('cartID', JSON.stringify(orderID));\n        this.saveCart(cart);\n      }\n    );\n    return cart;\n  }*/\n\n  public getCartFromDB(): Observable<Array<OrdersProductsVM>> {\n    return this.ordersService.getOrderItems(sessionStorage.getItem('cartID'));\n  }\n\n  public getCartFromSession(): Array<OrdersProductsVM> {\n    return JSON.parse(sessionStorage.getItem('cart'));\n  }\n\n  public updateCart() {\n    this.getCartFromDB().subscribe(\n      cart => this.saveCart(cart),\n      err => sessionStorage.removeItem('cart')\n    );\n  }\n\n  private saveCart(cart: Array<OrdersProductsVM>) {\n    sessionStorage.setItem('cart', JSON.stringify(cart));\n    this.changeItemsInCart();\n  }\n\n  public loadCartIDFromDB() {\n    this.ordersService.getUsersCartID().subscribe(\n      cartID => {\n        sessionStorage.setItem('cartID', cartID.toString(10));\n        this.updateCart();\n      }\n    );\n  }\n\n  public isCartExists(): boolean {\n    const cart = sessionStorage.getItem('cart');\n    if (cart == null || JSON.parse(cart).length === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  public addItem(productID: number, amount: number) {\n    const cartID = sessionStorage.getItem('cartID');\n\n    const cartItem = new OrdersProductsVM();\n    cartItem.id = null;\n    cartItem.amount = amount;\n    cartItem.productID = productID;\n    cartItem.orderID = parseInt(cartID, 10);\n    cartItem.pricePerProduct = null;\n\n    this.ordersService.addToCart(cartItem).subscribe(\n      res => {\n        cartItem.id = res;\n        this.addItemToSessCart(cartItem);\n        console.log(res);\n      }\n    );\n  }\n\n  private addItemToSessCart(cartItem: OrdersProductsVM) {\n    const cart = this.getCartFromSession();\n    const index = cart.findIndex(ci => ci.productID === cartItem.productID);\n    if (index < 0) {\n      cart.push(cartItem);\n    } else {\n      cart[index].amount += cartItem.amount;\n    }\n    sessionStorage.setItem('cart', JSON.stringify(cart));\n    this.changeItemsInCart();\n  }\n\n  public emptyCart() {\n    this.ordersService.emptyCart();\n    const cart: OrdersProductsVM[] = [];\n    sessionStorage.setItem('cart', JSON.stringify(cart));\n\n    this.changeItemsInCart();\n  }\n\n  public updateItemAmount(productIDS: string, newAmount: number) {\n    const productID = parseInt(productIDS, 10);\n    const cart = this.getCartFromSession();\n    const index = cart.findIndex(p => p.productID === productID);\n    if (index > -1) {\n      if (newAmount <= 0) {\n        cart.splice(index, 1);\n      } else {\n        cart[index].amount = newAmount;\n      }\n      sessionStorage.setItem('cart', JSON.stringify(cart));\n      this.changeItemsInCart();\n      this.ordersService.updateCartItemAmount(productIDS, JSON.stringify(newAmount));\n    }\n  }\n}\n","import {operators} from 'rxjs/internal/Rx';\r\nimport {OperState} from '../../../model/OperState';\r\n\r\nexport class CartCompState {\r\n  private static VIEWCART = 1;\r\n  private static ADDRESS = 2;\r\n  private static GOTOFINISH = 3;\r\n  private static FINISHED = 4;\r\n  private state = 0;\r\n\r\n  public setViewCart() {\r\n    this.state = CartCompState.VIEWCART;\r\n  }\r\n\r\n  public setAddress() {\r\n    this.state = CartCompState.ADDRESS;\r\n  }\r\n\r\n  public setGoToFinish() {\r\n    this.state = CartCompState.GOTOFINISH;\r\n  }\r\n\r\n  public setFinished() {\r\n    this.state = CartCompState.FINISHED;\r\n  }\r\n\r\n  public isViewCart() {\r\n    return this.state === CartCompState.VIEWCART;\r\n  }\r\n\r\n  public isAddress() {\r\n    return this.state === CartCompState.ADDRESS;\r\n  }\r\n\r\n  public isGoToFinish() {\r\n    return this.state === CartCompState.GOTOFINISH;\r\n  }\r\n\r\n  public isFinished() {\r\n    return this.state === CartCompState.FINISHED;\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2hvcHBpbmcvY2FydC9jYXJ0LmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {OperState} from '../../../model/OperState';\nimport {OrdersProductsVM} from '../../../model/OrdersProductsVM';\nimport {ShoppingCartService} from '../Services/shopping-cart.service';\nimport {ProductsVM} from '../../../model/ProductsVM';\nimport {ProductsService} from '../../products/Services/products.service';\nimport {OrderAddrVM} from '../../../model/OrderAddrVM';\nimport {CartCompState} from './CartCompState';\nimport {OrdersService} from '../Services/orders.service';\nimport {Router} from '@angular/router';\nimport {AuthenticationService} from '../../auth/Services/authentication.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  loadingState = new OperState();\n  cart: Array<OrdersProductsVM>;\n  alteredAmount: number;\n  listedProduct: ProductsVM;\n  focusedProduct: ProductsVM;\n  products: ProductsVM[] = [];\n  componentState: CartCompState = new CartCompState();\n  orderAddr: OrderAddrVM;\n  totalPrice: number;\n  orderNumber: number;\n  wasAltered: boolean;\n\n  constructor(private shoppingCartService: ShoppingCartService,\n              private productsService: ProductsService,\n              private ordersService: OrdersService,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    if (this.shoppingCartService.isCartExists()) {\n      this.loadingState.setWorking();\n      this.shoppingCartService.updateCart();\n      this.totalPrice = 0;\n      this.orderAddr = new OrderAddrVM();\n      this.componentState.setViewCart();\n      this.wasAltered = false;\n      this.cart = this.shoppingCartService.getCartFromSession();\n      this.productsService.listAll(true).subscribe(\n        res => {\n          this.products = res;\n          this.updateTotalPrice();\n          this.loadingState.setSuccess();\n        },\n        err => this.loadingState.setError(err)\n      );\n    }\n  }\n\n  loadProduct(currentID) {\n    this.listedProduct = this.products.find(p => p.id === currentID);\n  }\n\n  updateTotalPrice() {\n    this.totalPrice = 0;\n    this.cart.forEach(ci =>\n      this.totalPrice += this.products[\n        this.products.findIndex(p => p.id === ci.productID)\n        ].discountPrice * ci.amount\n    );\n  }\n\n  finishOrder() {\n    this.loadingState.setWorking();\n    this.ordersService.orderCart(this.orderAddr).subscribe(\n      res => {\n        this.orderNumber = res.id;\n        this.shoppingCartService.emptyCart();\n        this.shoppingCartService.loadCartIDFromDB();\n        this.loadingState.setSuccess();\n        this.componentState.setFinished();\n        this.showProducts();\n      },\n      err => this.loadingState.setError(err)\n    );\n  }\n\n  getOrderItems() {\n    this.loadingState.setWorking();\n    this.ordersService.getOrderItems(this.orderNumber.toString(10)).subscribe(\n      res => {\n        this.cart = res;\n        this.loadingState.setSuccess();\n        this.getOrderItems();\n      },\n      err => this.loadingState.setError(err)\n    );\n  }\n\n  alterAmount(productID: number) {\n    this.focusedProduct = this.products.find(p => p.id === productID);\n    this.alteredAmount = this.cart.find(c => c.productID === productID).amount;\n  }\n\n  amountChanged() {\n    if (this.alteredAmount < 0 || this.alteredAmount == null) {\n      this.alteredAmount = 0;\n    }\n  }\n\n  finishUpdateAmount() {\n    this.shoppingCartService.updateItemAmount(JSON.stringify(this.focusedProduct.id), this.alteredAmount);\n    this.cart = this.shoppingCartService.getCartFromSession();\n    this.updateTotalPrice();\n  }\n\n  empetyCart() {\n    this.shoppingCartService.emptyCart();\n  }\n\n  showProducts() {\n    setTimeout((router: Router) => {\n        router.navigate(['products']);\n      }, 1500, this.router\n    );\n  }\n}\n","export class OrderCompState {\r\n  private static SHOWALL = 1;\r\n  private static SHOWONE = 2;\r\n  private state = 0;\r\n\r\n  public setShowAll() {\r\n    this.state = OrderCompState.SHOWALL;\r\n  }\r\n\r\n  public setShowOne() {\r\n    this.state = OrderCompState.SHOWONE;\r\n  }\r\n\r\n  public isShowAll(): boolean {\r\n    if (this.state === OrderCompState.SHOWALL) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public isShowOne(): boolean {\r\n    if (this.state === OrderCompState.SHOWONE) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2hvcHBpbmcvb3JkZXJzL29yZGVycy5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\nimport {OrdersService} from '../Services/orders.service';\nimport {OperState} from '../../../model/OperState';\nimport {OrdersProductsVM} from '../../../model/OrdersProductsVM';\nimport {OrderInfo} from '../../../model/OrderInfo';\nimport {OrderAddrVM} from '../../../model/OrderAddrVM';\nimport {OrderCompState} from './OrderCompState';\nimport {ProductsService} from '../../products/Services/products.service';\nimport {ProductsVM} from '../../../model/ProductsVM';\nimport {AuthenticationService} from '../../auth/Services/authentication.service';\nimport {CustomersVM} from '../../../model/CustomersVM';\nimport {CustomerService} from '../../customers/Services/customer.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n  orderInfos: OrderInfo[] = [];\n  adminOrderInfos: OrderInfo[] = [];\n  customers: CustomersVM[] = [];\n  currentCustomer: CustomersVM;\n  loadingState: OperState = new OperState();\n  componentState: OrderCompState = new OrderCompState();\n  products: ProductsVM[] = [];\n  currentProduct: ProductsVM;\n  orderID: number;\n\n  constructor(private ordersService: OrdersService,\n              private productsService: ProductsService,\n              private loginService: AuthenticationService,\n              private customerService: CustomerService) {\n  }\n\n  ngOnInit() {\n    this.loadingState.setWorking();\n    this.componentState.setShowAll();\n    this.ordersService.getUsersOrders().subscribe(\n      orders => {\n        let itemsProcessed = 0;\n        orders.forEach(o => {\n            const info = new OrderInfo();\n            info.order = o;\n            this.ordersService.getOrderItems(o.id.toString(10)).subscribe(\n              res => {\n                itemsProcessed++;\n                info.items = res;\n                this.orderInfos.push(info);\n                if (itemsProcessed === orders.length) {\n                  this.orderInfos.sort((oi1, oi2) => oi2.order.id - oi1.order.id);\n                  this.loadingState.setSuccess();\n                }\n              },\n              err => this.loadingState.setError(err)\n            );\n          });\n      },\n      err => this.loadingState.setError(err)\n    );\n\n    this.loadingState.setWorking();\n    this.productsService.listAll(true).subscribe(\n      res => {\n        this.products = res;\n        this.loadingState.setSuccess();\n      },\n      err => this.loadingState.setError(err)\n    );\n\n    if (this.loginService.isUserAdmin()) {\n      this.loadingState.setWorking();\n      this.ordersService.getAllOrders().subscribe(\n        orders => {\n          let itemsProcessed = 0;\n          orders.forEach(o => {\n            const info = new OrderInfo();\n            info.order = o;\n            this.ordersService.getOrderItems(o.id.toString(10)).subscribe(\n              res => {\n                itemsProcessed++;\n                info.items = res;\n                this.adminOrderInfos.push(info);\n                if (itemsProcessed === orders.length) {\n                  this.orderInfos.sort((oi1, oi2) => oi2.order.id - oi1.order.id);\n                  this.loadingState.setSuccess();\n                }\n              },\n              err => this.loadingState.setError(err)\n            );\n          });\n        },\n        err => this.loadingState.setError(err)\n      );\n      this.customerService.list().subscribe(\n        res => this.customers = res,\n        err => this.loadingState.setError(err)\n      );\n    }\n  }\n\n  private getTotalOrderPrice(ordersProducts: OrdersProductsVM[]): number {\n    let totalPrice = 0;\n    ordersProducts.forEach(op => totalPrice += op.pricePerProduct * op.amount);\n    return totalPrice;\n  }\n\n  public addressToString(address: OrderAddrVM): string {\n    return address.street + ', ' + address.city + ', ' + address.psc;\n  }\n\n  private orderOut(orderID: number) {\n    this.orderID = orderID;\n    this.componentState.setShowOne();\n    if (this.loginService.isAdminMode()) {\n      this.currentCustomer = this.customers.find(\n        c => c.id === this.adminOrderInfos.find(\n          oi => oi.order.id === this.orderID\n        ).order.customerId);\n    }\n  }\n\n  private getCurrentOrder(): OrdersProductsVM[] {\n    if (this.orderInfos.findIndex(oi => oi.order.id === this.orderID) < 0) {\n      return this.adminOrderInfos[this.adminOrderInfos.findIndex(oi => oi.order.id === this.orderID)].items;\n    } else {\n      return this.orderInfos[this.orderInfos.findIndex(oi => oi.order.id === this.orderID)].items;\n    }\n  }\n\n  loadProduct(currentID) {\n    this.currentProduct = this.products.find(p => p.id === currentID);\n  }\n\n  getAllOrders() {\n    this.componentState.setShowAll();\n    this.orderID = null;\n  }\n\n  getCustomerStringByID(customerID: number) {\n    const tempCust: CustomersVM = this.customers.find(c => c.id === customerID);\n    return tempCust.name + ' ' + tempCust.surname;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lkZS1uYXYvc2lkZS1uYXYuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {ProductTypesService} from '../productTypes/Services/product-types.service';\nimport {ProductTypeVM} from '../../model/ProductTypeVM';\nimport {OperState} from '../../model/OperState';\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.css']\n})\nexport class SideNavComponent implements OnInit {\n  private productTypes: ProductTypeVM[];\n  private loadingState = new OperState();\n\n  constructor(private productTypesService: ProductTypesService) { }\n\n  ngOnInit() {\n    this.productTypesService.list().subscribe(\n      res => {\n        this.productTypes = res;\n      },\n      err => {\n        this.loadingState.setError(err);\n      }\n    );\n  }\n\n}\n","export class CustomersVM {\r\n  id: number;\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  username: string;\r\n  passwordHash: string;\r\n  admin: boolean;\r\n}\r\n","export class DiscountsVM {\r\n  id: number;\r\n  productId: number;\r\n  percent: number;\r\n  datefrom: Date;\r\n  dateto: Date;\r\n}\r\n","export class OperState {\r\n  private static WORKING = 1;\r\n  private static SUCCESS = 2;\r\n  private static ERROR = 3;\r\n  private state = 0;\r\n  private err: string;\r\n\r\n  public setWorking() {\r\n    this.state = OperState.WORKING;\r\n  }\r\n\r\n  public setSuccess() {\r\n    this.state = OperState.SUCCESS;\r\n  }\r\n\r\n  public isWorking(): boolean {\r\n    return this.state === OperState.WORKING;\r\n  }\r\n\r\n  public isSuccess(): boolean {\r\n    return this.state === OperState.SUCCESS;\r\n  }\r\n\r\n  public isError(): boolean {\r\n    return this.state === OperState.ERROR;\r\n  }\r\n\r\n  public setError(error: any) {\r\n    this.err = JSON.stringify(error, null, 1);\r\n    this.state = OperState.ERROR;\r\n  }\r\n\r\n  public getError(): string {\r\n    return this.err;\r\n  }\r\n\r\n  public setBack() {\r\n    this.state = 0;\r\n  }\r\n}\r\n","export class OrderAddrVM {\r\n  city: string;\r\n  street: string;\r\n  psc: string;\r\n}\r\n","import {OrdersVM} from './OrdersVM';\nimport {OrdersProductsVM} from './OrdersProductsVM';\n\nexport class OrderInfo {\n  order: OrdersVM;\n  items: OrdersProductsVM[];\n}\n","export class OrdersProductsVM {\r\n  id: number;\r\n  orderID: number;\r\n  productID: number;\r\n  amount: number;\r\n  pricePerProduct: number;\r\n}\r\n","export class ProductTypeVM {\r\n  id: number;\r\n  typeName: string;\r\n}\r\n","export class ProductsVM {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  discountPrice: number;\r\n  pictureUrl: string;\r\n  selling: boolean;\r\n  productTypeId: number;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}